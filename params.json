{"name":"Comb","body":"<a name=\"top\"></a>\r\n\r\nComb\r\n=========\r\n\r\n##NOTE: v0.1.1 removed proxy code out of core see [comb-proxy](http://github.com/Pollenware/comb-proxy)\r\n\r\nOverview\r\n--------\r\n\r\nFramework for node that provides a one stop shop for frequently needed utilities, including:\r\n\r\n* OO utilties\r\n* Collections \r\n* Logging\r\n* String & date formatting\r\n* Flow control\r\n* Date Management\r\n\r\nSee Usage for more details.\r\n\r\n## Installation\r\n\r\n    npm install comb\r\n\r\n\r\nWhy?\r\n----\r\n\r\nIf your like us its fun to find new modules to use but often wish you didn't have to sift through NPM registry or the node modules page to find what you need.\r\n\r\n   So....\r\n\r\nWe created a library of things we use often, or commons utilities that are used by our other APIs.\r\n##Namespaces\r\n\r\n\r\n\r\n  * [comb](#comb)\r\n\r\n  * [comb.array](#comb_array)\r\n\r\n  * [comb.characters](#comb_characters)\r\n\r\n  * [comb.collections](#comb_collections)\r\n\r\n  * [comb.date](#comb_date)\r\n\r\n  * [comb.logging](#comb_logging)\r\n\r\n  * [comb.logging.appenders](#comb_logging_appenders)\r\n\r\n  * [comb.number](#comb_number)\r\n\r\n  * [comb.plugins](#comb_plugins)\r\n\r\n  * [comb.regexp](#comb_regexp)\r\n\r\n  * [comb.string](#comb_string)\r\n\r\n\r\n\r\n##Classes\r\n\r\n\r\n\r\n  * [comb.Promise](#comb_Promise)\r\n\r\n  * [comb.PromiseList](#comb_PromiseList)\r\n\r\n  * [comb.collections.AVLTree](#comb_collections_AVLTree)\r\n\r\n  * [comb.collections.AnderssonTree](#comb_collections_AnderssonTree)\r\n\r\n  * [comb.collections.BinaryTree](#comb_collections_BinaryTree)\r\n\r\n  * [comb.collections.Collection](#comb_collections_Collection)\r\n\r\n  * [comb.collections.HashTable](#comb_collections_HashTable)\r\n\r\n  * [comb.collections.Heap](#comb_collections_Heap)\r\n\r\n  * [comb.collections.Iterable](#comb_collections_Iterable)\r\n\r\n  * [comb.collections.MaxHeap](#comb_collections_MaxHeap)\r\n\r\n  * [comb.collections.MinHeap](#comb_collections_MinHeap)\r\n\r\n  * [comb.collections.Pool](#comb_collections_Pool)\r\n\r\n  * [comb.collections.PriorityQueue](#comb_collections_PriorityQueue)\r\n\r\n  * [comb.collections.Queue](#comb_collections_Queue)\r\n\r\n  * [comb.collections.RedBlackTree](#comb_collections_RedBlackTree)\r\n\r\n  * [comb.collections.Stack](#comb_collections_Stack)\r\n\r\n  * [comb.collections.Tree](#comb_collections_Tree)\r\n\r\n  * [comb.logging.BasicConfigurator](#comb_logging_BasicConfigurator)\r\n\r\n  * [comb.logging.Level](#comb_logging_Level)\r\n\r\n  * [comb.logging.Logger](#comb_logging_Logger)\r\n\r\n  * [comb.logging.PropertyConfigurator](#comb_logging_PropertyConfigurator)\r\n\r\n  * [comb.logging.appenders.Appender](#comb_logging_appenders_Appender)\r\n\r\n  * [comb.logging.appenders.ConsoleAppender](#comb_logging_appenders_ConsoleAppender)\r\n\r\n  * [comb.logging.appenders.FileAppender](#comb_logging_appenders_FileAppender)\r\n\r\n  * [comb.logging.appenders.JSONAppender](#comb_logging_appenders_JSONAppender)\r\n\r\n  * [comb.logging.appenders.RollingFileAppender](#comb_logging_appenders_RollingFileAppender)\r\n\r\n  * [comb.plugins.Broadcaster](#comb_plugins_Broadcaster)\r\n\r\n  * [comb.plugins.Middleware](#comb_plugins_Middleware)\r\n\r\n\r\n<a name=\"comb\"></a>\r\n##comb\r\n\r\n[Top](#top)\r\n\r\nUtilities for javascript, optimized for the server environment.\r\n\r\n\r\n  * [argsToArray](#comb_argsToArray)\r\n\r\n  * [bind](#comb_bind)\r\n\r\n  * [bindIgnore](#comb_bindIgnore)\r\n\r\n  * [broadcast](#comb_broadcast)\r\n\r\n  * [camelize](#comb_camelize)\r\n\r\n  * [classify](#comb_classify)\r\n\r\n  * [connect](#comb_connect)\r\n\r\n  * [curry](#comb_curry)\r\n\r\n  * [daysAgo](#comb_daysAgo)\r\n\r\n  * [daysFromNow](#comb_daysFromNow)\r\n\r\n  * [deepEqual](#comb_deepEqual)\r\n\r\n  * [deepMerge](#comb_deepMerge)\r\n\r\n  * [define](#comb_define)\r\n\r\n  * [disconnect](#comb_disconnect)\r\n\r\n  * [extend](#comb_extend)\r\n\r\n  * [hitch](#comb_hitch)\r\n\r\n  * [hitchIgnore](#comb_hitchIgnore)\r\n\r\n  * [hoursAgo](#comb_hoursAgo)\r\n\r\n  * [hoursFromNow](#comb_hoursFromNow)\r\n\r\n  * [isArguments](#comb_isArguments)\r\n\r\n  * [isBoolean](#comb_isBoolean)\r\n\r\n  * [isDate](#comb_isDate)\r\n\r\n  * [isDefined](#comb_isDefined)\r\n\r\n  * [isEmpty](#comb_isEmpty)\r\n\r\n  * [isFunction](#comb_isFunction)\r\n\r\n  * [isHash](#comb_isHash)\r\n\r\n  * [isInstanceOf](#comb_isInstanceOf)\r\n\r\n  * [isNull](#comb_isNull)\r\n\r\n  * [isNumber](#comb_isNumber)\r\n\r\n  * [isObject](#comb_isObject)\r\n\r\n  * [isPromiseLike](#comb_isPromiseLike)\r\n\r\n  * [isUndefined](#comb_isUndefined)\r\n\r\n  * [isUndefinedOrNull](#comb_isUndefinedOrNull)\r\n\r\n  * [listen](#comb_listen)\r\n\r\n  * [listenForExit](#comb_listenForExit)\r\n\r\n  * [merge](#comb_merge)\r\n\r\n  * [minutesAgo](#comb_minutesAgo)\r\n\r\n  * [minutesFromNow](#comb_minutesFromNow)\r\n\r\n  * [monthsAgo](#comb_monthsAgo)\r\n\r\n  * [monthsFromNow](#comb_monthsFromNow)\r\n\r\n  * [partial](#comb_partial)\r\n\r\n  * [pluralize](#comb_pluralize)\r\n\r\n  * [secondsAgo](#comb_secondsAgo)\r\n\r\n  * [secondsFromNow](#comb_secondsFromNow)\r\n\r\n  * [serial](#comb_serial)\r\n\r\n  * [singleton](#comb_singleton)\r\n\r\n  * [singularize](#comb_singularize)\r\n\r\n  * [unListen](#comb_unListen)\r\n\r\n  * [underscore](#comb_underscore)\r\n\r\n  * [when](#comb_when)\r\n\r\n  * [wrap](#comb_wrap)\r\n\r\n  * [yearsAgo](#comb_yearsAgo)\r\n\r\n  * [yearsFromNow](#comb_yearsFromNow)\r\n\r\n\r\n  \r\n<a name=\"comb_argsToArray\"></a>\r\n\r\n###*argsToArray*\r\n\r\n\r\n\r\n---\r\n*Defined base/misc.js* [Top](#top)\r\n\r\n\r\nConverts an arguments object to an array\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _args_ `Arguments` : the arguments object to convert\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Array` array version of the arguments object\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\ncomb.argsToArray = function (args) {\r\n```\r\n\r\n  \r\n<a name=\"comb_bind\"></a>\r\n\r\n###*bind*\r\n\r\n\r\n\r\n---\r\n*Defined base/functions.js* [Top](#top)\r\n\r\n\r\n\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _scope_ `Object` : the scope to bind the callback to\r\n        \r\n * _method_ `String|Function` : the method to callback\r\n        \r\n * _args?_  : optional args to pass to the callback\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Function` the hitched function\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\ncomb.hitch\r\n```\r\n\r\n  \r\n<a name=\"comb_bindIgnore\"></a>\r\n\r\n###*bindIgnore*\r\n\r\n\r\n\r\n---\r\n*Defined base/functions.js* [Top](#top)\r\n\r\n\r\n\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _scope_ `Object` : the scope to bind the callback to\r\n        \r\n * _method_ `String|Function` : the method to callback\r\n        \r\n * _args?_  : optional args to pass to the callback\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Function` the hitched function\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\ncomb.hitchIgnore\r\n```\r\n\r\n  \r\n<a name=\"comb_broadcast\"></a>\r\n\r\n###*broadcast*\r\n\r\n\r\n\r\n---\r\n*Defined base/broadcast.js* [Top](#top)\r\n\r\n\r\nBroadcasts an event to all listeners\r\n NOTE : the function takes a variable number of arguments\r\n        i.e. all arguments after the topic will be passed to the listeners\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.broadcast(\"hello\", \"hello world\");\r\n //the args \"hello\" and \"world\" will be passed to any listener of the topic\r\n //\"hello\"\r\n comb.broadcast(\"hello\", \"hello\", \"world\");\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _topic_ `String` : the topic to brodcast\r\n        \r\n * _params_  : the information to bradcast\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   var args = Array.prototype.slice.call(arguments);\r\n   var topic = args.splice(0, 1)[0];\r\n   if (topic) {\r\n       var list = listeners[topic];\r\n   \tif (list) {\r\n   \t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n   \t\t\tvar han = list[i], cb = han.cb;\r\n   \t\t\tif (cb) {\r\n   \t\t\t\tcb.apply(this, args);\r\n   \t\t\t}\r\n   \t\t}\r\n   \t}\r\n   }\r\n   \t\t\t\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_camelize\"></a>\r\n\r\n###*camelize*\r\n\r\n\r\n\r\n---\r\n*Defined base/inflections.js* [Top](#top)\r\n\r\n\r\nConverts a string to camelcase\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.camelize('hello_world') => helloWorld\r\n  comb.camelize('column_name') => columnName\r\n  comb.camelize('columnName') => columnName\r\n  comb.camelize(null) => null\r\n  comb.camelize() => undefined\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _str_ `String` : the string to camelize\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `String` the camelized version of the string\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (str){\r\n   var ret = str;\r\n   if (!misc.isUndefinedOrNull(str)) {\r\n       ret = str.replace(CAMELIZE_CONVERT_REGEXP, function (a, b) {\r\n           return b.toUpperCase();\r\n       });\r\n   }\r\n   return ret;\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_classify\"></a>\r\n\r\n###*classify*\r\n\r\n\r\n\r\n---\r\n*Defined base/inflections.js* [Top](#top)\r\n\r\n\r\nSingularizes and camelizes the string.  Also strips out all characters preceding\r\n and including a period (\".\").\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.classify('egg_and_hams') => \"eggAndHam\"\r\n   comb.classify('post') => \"post\"\r\n   comb.classify('schema.post') => \"post\"\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _str_ `String` : the string to classify\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `String` the classified version of the string\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (str){\r\n   var ret = str;\r\n   if (!misc.isUndefinedOrNull(str)) {\r\n       ret = comb.camelize(comb.singularize(str.replace(/.*\\./g, '')));\r\n   }\r\n   return ret;\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_connect\"></a>\r\n\r\n###*connect*\r\n\r\n\r\n\r\n---\r\n*Defined base/broadcast.js* [Top](#top)\r\n\r\n\r\nFunction to listen when other functions are called\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.connect(obj, \"event\", myfunc);\r\n  comb.connect(obj, \"event\", \"log\", console);\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `Object` : the object in which the method you are connection to resides\r\n        \r\n * _method_ `String` : the name of the method to connect to\r\n        \r\n * _cb_ `Function` : the function to callback\r\n        \r\n * _scope?_ `Object` : the scope to call the specified cb in\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Array` handle to pass to [comb.disconnect](#comb_disconnect)\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj,method,cb,scope){\r\n   var index;\r\n   if (typeof method != \"string\") throw new Error(\"When calling connect the method must be string\");\r\n   if (!func.isFunction(cb)) throw new Error(\"When calling connect callback must be a string\");\r\n   var scope = obj || global, listeners, newMethod;\r\n   if (typeof scope[method] == \"function\") {\r\n   \tlisteners = scope[method].__listeners;\r\n   \tif (!listeners) {\r\n   \t\tnewMethod = wrapper();\r\n   \t\tnewMethod.func = obj[method];\r\n   \t\tlisteners = (newMethod.__listeners = []);\r\n   \t\tscope[method] = newMethod;\r\n   \t}\r\n   \tindex = listeners.push(cb);\r\n   } else {\r\n   \tthrow new Error(\"unknow method \" + method + \" in object \" + obj);\r\n   }\r\n   return [obj, method, index];\r\n   \t\t\t\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_curry\"></a>\r\n\r\n###*curry*\r\n\r\n\r\n\r\n---\r\n*Defined base/functions.js* [Top](#top)\r\n\r\n\r\nCurries a function\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar curried = comb.curry(4, function(a,b,c,d){\r\n     return [a,b,c,d].join(\",\");\r\n }\r\n  curried(\"a\");\r\n  curried(\"b\");\r\n  curried(\"c\");\r\n  curried(\"d\") => \"a,b,c,d\"\r\n\r\n  //OR\r\n\r\n  curried(\"a\")(\"b\")(\"c\")(\"d\") => \"a,b,c,d\"\r\n\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _depth_ `Number` : the number of args you expect\r\n        \r\n * _cb_ `Function` : the function to call once all args are gathered\r\n        \r\n * _scope?_ `Object` : what scope to call the function in\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Function` the curried version of the function\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (depth,cb,scope){\r\n   var f;\r\n   if (scope) {\r\n       f = comb.hitch(scope, cb);\r\n   } else {\r\n       f = cb;\r\n   }\r\n   if (depth) {\r\n       var len = depth - 1;\r\n       for (var i = len; i >= 0; i--) {\r\n           f = curry(f, i == len);\r\n       }\r\n   }\r\n   return f;\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_daysAgo\"></a>\r\n\r\n###*daysAgo*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nSubtracts the specified days/s from the current date.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _val_ `Number` : the number of days to subtract\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Date` a date with the number of days subtracted\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (val){\r\n   return date.add(new Date(), \"days\", -val);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_daysFromNow\"></a>\r\n\r\n###*daysFromNow*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nAdds the specified days/s to the current date.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _val_ `Number` : the number of days to add\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Date` a date with the number of days added\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (val){\r\n   return date.add(new Date(), \"days\", val);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_deepEqual\"></a>\r\n\r\n###*deepEqual*\r\n\r\n\r\n\r\n---\r\n*Defined base/object.js* [Top](#top)\r\n\r\n\r\nDetermines if an two things are deep equal.\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.deepEqual({a : 1, b : 2}, {a : 1, b : 2}) => true\r\n comb.deepEqual({a : 1}, {a : 1, b : 2}) => false\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _o1_  : the first thing to compare\r\n        \r\n * _o3_  : the second thing to compare\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` \r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (o1,o2){\r\n   return  _deepEqual(o1, o2);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_deepMerge\"></a>\r\n\r\n###*deepMerge*\r\n\r\n\r\n\r\n---\r\n*Defined base/object.js* [Top](#top)\r\n\r\n\r\nMerges objects together only overriding properties that are different.\r\n NOTE: this function takes a variable number of objects to merge\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar myObj = {my : {cool : {property1 : 1, property2 : 2}}};\r\n comb.deepMerge(myObj, {my : {cool : {property3 : 3}}});\r\n\r\n myObj.my.cool.property1 => 1\r\n myObj.my.cool.property2 => 2\r\n myObj.my.cool.property3 => 3\r\n\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `Object` : the object to merge into\r\n        \r\n * _props_ `Object` : variable number of objects to merge into the obj\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Object` the merged object\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj,props){\r\n   if (!obj) {\r\n       obj = {};\r\n   }\r\n   for (var i = 1, l = arguments.length; i &lt; l; i++) {\r\n       deepMerge(obj, arguments[i]);\r\n   }\r\n   return obj; // Object\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_define\"></a>\r\n\r\n###*define*\r\n\r\n\r\n\r\n---\r\n*Defined define.js* [Top](#top)\r\n\r\n\r\nDefines a new class to be used\r\n\r\n <p>\r\n     Class methods\r\n     <ul>\r\n         <li>as(module | bject, name): exports the object to module or the object with the name</li>\r\n         <li>mixin(mixin) : mixes in an object</li>\r\n     </ul>\r\n     </br>\r\n     Instance methods\r\n     <ul>\r\n         <li>_super(args): calls the super of the current method, args can be an Argument object\r\n         or an array of anything you wan to supply as arguments.</li>\r\n     </ul>\r\n     </br>\r\n     Instance properties\r\n     <ul>\r\n         <li>_static: use to reference class properties and methods</li>\r\n     </ul>\r\n\r\n </p>\r\n        \r\n*Example*\r\n\r\n```javascript\r\n//Class without a super class\r\n var Mammal = comb.define(null, {\r\n      instance : {\r\n\r\n          constructor: function(options) {\r\n              options = options || {};\r\n              this._super(arguments);\r\n              this._type = options.type || \"mammal\";\r\n          },\r\n\r\n          speak : function() {\r\n              return  \"A mammal of type \" + this._type + \" sounds like\";\r\n          },\r\n\r\n          //Define your getters\r\n          getters : {\r\n              type : function() {\r\n                  return this._type;\r\n              }\r\n          },\r\n\r\n           //Define your setters\r\n          setters : {\r\n              type : function(t) {\r\n                  this._type = t;\r\n              }\r\n          }\r\n      },\r\n\r\n      //Define your static methods\r\n      static : {\r\n          soundOff : function() {\r\n              return \"Im a mammal!!\";\r\n          }\r\n      }\r\n });\r\n\r\n //Show singular inheritance\r\nvar Wolf = comb.define(Mammal, {\r\n   instance: {\r\n       constructor: function(options) {\r\n          options = options || {};\r\n          //You can call your super constructor, or you may not\r\n          //call it to prevent the super initializing parameters\r\n          this._super(arguments);\r\n          this._sound = \"growl\";\r\n          this._color = options.color || \"grey\";\r\n      },\r\n\r\n      speak : function() {\r\n          //override my super classes speak\r\n          //Should return \"A mammal of type mammal sounds like a growl\"\r\n          return this._super(arguments) + \" a \" + this._sound;\r\n      },\r\n\r\n      //add new getters for sound and color\r\n      getters : {\r\n\r\n          color : function() {\r\n              return this._color;\r\n          },\r\n\r\n          sound : function() {\r\n              return this._sound;\r\n          }\r\n      },\r\n\r\n      setters : {\r\n\r\n          //NOTE color is read only except on initialization\r\n\r\n          sound : function(s) {\r\n              this._sound = s;\r\n          }\r\n      }\r\n\r\n  },\r\n\r\n  static : {\r\n      //override my satic soundOff\r\n      soundOff : function() {\r\n          //You can even call super in your statics!!!\r\n          //should return \"I'm a mammal!! that growls\"\r\n          return this._super(arguments) + \" that growls\";\r\n      }\r\n  }\r\n});\r\n\r\n\r\n //Typical hierarchical inheritance\r\n // Mammal->Wolf->Dog\r\n var Dog = comb.define(Wolf, {\r\n    instance: {\r\n        constructor: function(options) {\r\n            options = options || {};\r\n            this._super(arguments);\r\n            //override Wolfs initialization of sound to woof.\r\n            this._sound = \"woof\";\r\n\r\n        },\r\n\r\n        speak : function() {\r\n            //Should return \"A mammal of type mammal sounds like a growl thats domesticated\"\r\n            return this._super(arguments) + \" thats domesticated\";\r\n        }\r\n    },\r\n\r\n    static : {\r\n        soundOff : function() {\r\n            //should return \"I'm a mammal!! that growls but now barks\"\r\n            return this._super(arguments) + \" but now barks\";\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\n dog instanceof Wolf => true\r\n dog instanceof Mammal => true\r\n dog.speak() => \"A mammal of type mammal sounds like a woof thats domesticated\"\r\n dog.type => \"mammal\"\r\n dog.color => \"gold\"\r\n dog.sound => \"woof\"\r\n Dog.soundOff() => \"Im a mammal!! that growls but now barks\"\r\n\r\n // Mammal->Wolf->Dog->Breed\r\nvar Breed = comb.define(Dog, {\r\n    instance: {\r\n\r\n        //initialize outside of constructor\r\n        _pitch : \"high\",\r\n\r\n        constructor: function(options) {\r\n            options = options || {};\r\n            this._super(arguments);\r\n            this.breed = options.breed || \"lab\";\r\n        },\r\n\r\n        speak : function() {\r\n            //Should return \"A mammal of type mammal sounds like a\r\n            //growl thats domesticated with a high pitch!\"\r\n            return this._super(arguments) + \" with a \" + this._pitch + \" pitch!\";\r\n        },\r\n\r\n        getters : {\r\n            pitch : function() {\r\n                return this._pitch;\r\n            }\r\n        }\r\n    },\r\n\r\n    static : {\r\n        soundOff : function() {\r\n            //should return \"I'M A MAMMAL!! THAT GROWLS BUT NOW BARKS!\"\r\n            return this._super(arguments).toUpperCase() + \"!\";\r\n        }\r\n    }\r\n });\r\n\r\n\r\n var breed = new Breed({color : \"gold\", type : \"lab\"}),\r\n\r\n\r\n\r\n breed instanceof Dog => true\r\n breed instanceof Wolf => true\r\n breed instanceof Mammal => true\r\n breed.speak() => \"A mammal of type lab sounds like a woof \"\r\n                  + \"thats domesticated with a high pitch!\"\r\n breed.type => \"lab\"\r\n breed.color => \"gold\"\r\n breed.sound => \"woof\"\r\n breed.soundOff() => \"IM A MAMMAL!! THAT GROWLS BUT NOW BARKS!\"\r\n\r\n\r\n  //Example of multiple inheritance\r\n  //NOTE proto is optional\r\n\r\n  //Mammal is super class\r\n  //Wolf Dog and Breed inject functionality into the prototype\r\n var Lab = comb.define([Mammal, Wolf, Dog, Breed]);\r\n\r\n var lab = new Lab();\r\n lab instanceof Wolf => false\r\n lab instanceof Dog => false\r\n lab instanceof Breed => false\r\n lab instanceof Mammal => true\r\n lab.speak() => \"A mammal of type mammal sounds like a\"\r\n                + \" woof thats domesticated with a high pitch!\"\r\n Lab.soundOff() => \"IM A MAMMAL!! THAT GROWLS BUT NOW BARKS!\"\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _super_ `Array|Class` : the supers of this class\r\n        \r\n * _proto?_ `Object` : the object used to define this class\r\n        \r\n * _proto.instance?_ `Object` : the instance methods of the class\r\n        \r\n * _proto.instance.getters?_ `Object` : the getters for the class\r\n        \r\n * _proto.instance.setters?_ `Object` : the setters for the class\r\n        \r\n * _proto.static?_ `Object` : the Class level methods of this class\r\n        \r\n * _proto.static.getters?_ `Object` : static getters for the object\r\n        \r\n * _proto.static.setters?_ `Object` : static setters for the object\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Object` the constructor of the class to be used with new keyword\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (sup,proto){\r\n   var child = function () {\r\n       this.constructor.apply(this, arguments);\r\n   };\r\n   __define(child, sup, proto);\r\n   return child.init() || child;\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_disconnect\"></a>\r\n\r\n###*disconnect*\r\n\r\n\r\n\r\n---\r\n*Defined base/broadcast.js* [Top](#top)\r\n\r\n\r\nDisconnects a listener to a function\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _handle_ `handle` : handle returned from comb.connect\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (handle){\r\n   if (handle && handle.length == 3) {\r\n   \tvar obj = handle[0], method = handle[1], cb = handle[2];\r\n   \tif (typeof method != \"string\") throw \"comb.disconnect : When calling disconnect the method must be string\";\r\n   \tvar scope = obj || global, ls;\r\n   \tif (typeof scope[method] == \"function\") {\r\n   \t\tls = scope[method].__listeners;\r\n   \t\tif (ls && cb-- > 0) {\r\n   \t\t\t//we dont want to splice it because our indexing will get off\r\n   \t\t\tls[cb] = null;\r\n   \t\t}\r\n   \t} else {\r\n   \t\tthrow new Error(\"unknown method \" + method + \" in object \" + obj);\r\n   \t}\r\n   } else {\r\n   \tthrow \"comb.disconnect : invalid handle\"\r\n   }\r\n   \t\t\t\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_extend\"></a>\r\n\r\n###*extend*\r\n\r\n\r\n\r\n---\r\n*Defined base/object.js* [Top](#top)\r\n\r\n\r\nExtends the prototype of an object if it exists otherwise it extends the object.\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar MyObj = function(){};\r\n  MyObj.prototype.test = true;\r\n  comb.extend(MyObj, {test2 : false, test3 : \"hello\", test4 : \"world\"});\r\n\r\n  var myObj = new MyObj();\r\n\r\n  myObj.test => true\r\n  myObj.test2 => false\r\n  myObj.test3 => \"hello\"\r\n  myObj.test4 => \"world\"\r\n\r\n  var myObj2 = {};\r\n  myObj2.test = true;\r\n  comb.extend(myObj2, {test2 : false, test3 : \"hello\", test4 : \"world\"});\r\n\r\n  myObj2.test => true\r\n  myObj2.test2 => false\r\n  myObj2.test3 => \"hello\"\r\n  myObj2.test4 => \"world\"\r\n\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _parent_ `Object` : the parent object to extend\r\n        \r\n * _extend_ `Object` : the extension object to mixin to the parent\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Object` returns the extended object\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (parent,extend){\r\n   var proto = parent.prototype || parent;\r\n   return exports.merge(proto, extend);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_hitch\"></a>\r\n\r\n###*hitch*\r\n\r\n\r\n\r\n---\r\n*Defined base/functions.js* [Top](#top)\r\n\r\n\r\nBinds a method to a particular scope\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _scope_ `Object` : the scope to bind the callback to\r\n        \r\n * _method_ `String|Function` : the method to callback\r\n        \r\n * _args?_  : optional args to pass to the callback\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Function` the hitched function\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (scope,method,args){\r\n   var args = Array.prototype.slice.call(arguments).slice(2);\r\n   if (typeof method == \"string\") {\r\n       method = scope[method];\r\n   }\r\n   if (method) {\r\n       return function () {\r\n           var scopeArgs = args.concat(Array.prototype.slice.call(arguments));\r\n           return method.apply(scope, scopeArgs);\r\n       };\r\n   } else {\r\n       throw new Error(method + \"Method not defined\");\r\n   }\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_hitchIgnore\"></a>\r\n\r\n###*hitchIgnore*\r\n\r\n\r\n\r\n---\r\n*Defined base/functions.js* [Top](#top)\r\n\r\n\r\nBinds a method to a particular scope ignoring any new arguments passed\r\n into the functuion. This useful if you want to force particular arguments and\r\n ignore any new ones\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _scope_ `Object` : the scope to bind the callback to\r\n        \r\n * _method_ `String|Function` : the method to callback\r\n        \r\n * _args?_  : optional args to pass to the callback\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Function` the hitched function\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (scope,method,args){\r\n   var args = Array.prototype.slice.call(arguments).slice(2);\r\n   if (typeof method == \"string\") {\r\n       method = scope[method];\r\n   }\r\n   if (method) {\r\n       return function () {\r\n           return method.apply(scope, args);\r\n       };\r\n   } else {\r\n       throw new Error(method + \"Method not defined\");\r\n   }\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_hoursAgo\"></a>\r\n\r\n###*hoursAgo*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nSubtracts the specified hour/s from the current date.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _val_ `Number` : the number of hours to subtract\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Date` a date with the number of hours subtracted\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (val){\r\n   return date.add(new Date(), \"hours\", -val);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_hoursFromNow\"></a>\r\n\r\n###*hoursFromNow*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nAdds the specified hour/s to the current date.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _val_ `Number` : the number of hours to add\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Date` a date with the number of hours added\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (val){\r\n   return date.add(new Date(), \"hours\", val);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_isArguments\"></a>\r\n\r\n###*isArguments*\r\n\r\n\r\n\r\n---\r\n*Defined base/misc.js* [Top](#top)\r\n\r\n\r\nDetermines if obj is an Arguments object;\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `Anything` : the thing to test if it is null\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if it is an Arguments Object false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (object){\r\n   return !comb.isUndefinedOrNull(object) && Object.prototype.toString.call(object) == '[object Arguments]';\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_isBoolean\"></a>\r\n\r\n###*isBoolean*\r\n\r\n\r\n\r\n---\r\n*Defined base/misc.js* [Top](#top)\r\n\r\n\r\nDetermines if obj is a boolean\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `Anything` : the thing to test if it is a boolean\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if it is a boolean false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   var undef, type = typeof obj;\r\n   return obj != undef && type == \"boolean\" || type == \"Boolean\";\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_isDate\"></a>\r\n\r\n###*isDate*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nDetermines if obj is a Date\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `Anything` : the thing to test if it is a Date\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if it is a Date false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   var undef;\r\n   return (obj !== undef && typeof obj === \"object\" && obj instanceof Date);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_isDefined\"></a>\r\n\r\n###*isDefined*\r\n\r\n\r\n\r\n---\r\n*Defined base/misc.js* [Top](#top)\r\n\r\n\r\nDetermins if the obj is not undefined\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_  : the thing to test if it is not undefined\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if it is defined false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   return !comb.isUndefined(obj);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_isEmpty\"></a>\r\n\r\n###*isEmpty*\r\n\r\n\r\n\r\n---\r\n*Defined base/object.js* [Top](#top)\r\n\r\n\r\nDetermines if an object is empty\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.isEmpty({}) => true\r\n comb.isEmpty({a : 1}) => false\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _object_  : the object to test\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if the object is empty;\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (object){\r\n   if (comb.isObject(object)) {\r\n       for (var i in object) {\r\n           if (object.hasOwnProperty(i)) {\r\n               return false;\r\n           }\r\n       }\r\n   }\r\n   return true;\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_isFunction\"></a>\r\n\r\n###*isFunction*\r\n\r\n\r\n\r\n---\r\n*Defined base/functions.js* [Top](#top)\r\n\r\n\r\nDetermines if something is a function\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `Anything` : the thing to test if it is a function\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if the obj is a function false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   return typeof obj == \"function\";\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_isHash\"></a>\r\n\r\n###*isHash*\r\n\r\n\r\n\r\n---\r\n*Defined base/object.js* [Top](#top)\r\n\r\n\r\nDetermins if an object is just a hash and not a qualified Object such as number\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.isHash({}) => true\r\n    comb.isHash({1 : 2, a : \"b\"}) => true\r\n    comb.isHash(new Date()) => false\r\n    comb.isHash(new String()) => false\r\n    comb.isHash(new Number()) => false\r\n    comb.isHash(new Boolean()) => false\r\n    comb.isHash() => false\r\n    comb.isHash(\"\") => false\r\n    comb.isHash(1) => false\r\n    comb.isHash(false) => false\r\n    comb.isHash(true) => false\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `Anything` : the thing to test if it is a hash\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if it is a hash false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   var ret = comb.isObject(obj);\r\n   return ret && obj.constructor === Object;\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_isInstanceOf\"></a>\r\n\r\n###*isInstanceOf*\r\n\r\n\r\n\r\n---\r\n*Defined base/misc.js* [Top](#top)\r\n\r\n\r\nDetermines if obj is an instance of a particular class\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `Anything` : the thing to test if it and instnace of a class\r\n        \r\n * _Clazz_ `Object` : used to determine if the object is an instance of\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if it is an instance of the clazz false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj,clazz){\r\n   return argsToArray(arguments).slice(1).some(function (c) {\r\n       return isInstance(obj, c);\r\n   });\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_isNull\"></a>\r\n\r\n###*isNull*\r\n\r\n\r\n\r\n---\r\n*Defined base/misc.js* [Top](#top)\r\n\r\n\r\nDetermines if obj is null\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `Anything` : the thing to test if it is null\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if it is null false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   var undef;\r\n   return obj !== undef && obj == null;\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_isNumber\"></a>\r\n\r\n###*isNumber*\r\n\r\n\r\n\r\n---\r\n*Defined base/number.js* [Top](#top)\r\n\r\n\r\nDetermines if obj is a number\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `Anything` : the thing to test if it is a Number\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if it is a number false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   var undef;\r\n   return obj !== undef && obj != null && (typeof obj == \"number\" || obj instanceof Number);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_isObject\"></a>\r\n\r\n###*isObject*\r\n\r\n\r\n\r\n---\r\n*Defined base/object.js* [Top](#top)\r\n\r\n\r\nDetermines if obj is an object\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `Anything` : the thing to test if it is an object\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if it is an object false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   var undef;\r\n   return obj != null && obj != undef && typeof obj == \"object\";\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_isPromiseLike\"></a>\r\n\r\n###*isPromiseLike*\r\n\r\n\r\n\r\n---\r\n*Defined promise.js* [Top](#top)\r\n\r\n\r\nTests if an object is like a promise (i.e. it contains then, addCallback, addErrback)\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_  : object to test\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   return !base.isUndefinedOrNull(obj) && (base.isInstanceOf(obj, Promise) || (base.isFunction(obj.then)\r\n       && base.isFunction(obj.addCallback) && base.isFunction(obj.addErrback)));\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_isUndefined\"></a>\r\n\r\n###*isUndefined*\r\n\r\n\r\n\r\n---\r\n*Defined base/misc.js* [Top](#top)\r\n\r\n\r\nDetermines if obj is undefined\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `Anything` : the thing to test if it is undefined\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if it is undefined false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   var undef;\r\n   return obj !== null && obj === undef;\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_isUndefinedOrNull\"></a>\r\n\r\n###*isUndefinedOrNull*\r\n\r\n\r\n\r\n---\r\n*Defined base/misc.js* [Top](#top)\r\n\r\n\r\nDetermines if obj is undefined or null\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `Anything` : the thing to test if it is undefined or null\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if it is undefined or null false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   return comb.isUndefined(obj) || comb.isNull(obj);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_listen\"></a>\r\n\r\n###*listen*\r\n\r\n\r\n\r\n---\r\n*Defined base/broadcast.js* [Top](#top)\r\n\r\n\r\nListen for the broadcast of certain events\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.listen(\"hello\", function(arg1, arg2){\r\n     console.log(arg1);\r\n     console.log(arg2);\r\n  });\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _topic_ `String` : the topic to listen for\r\n        \r\n * _callback_ `Function` : the funciton to call when the topic is published\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n *  a handle to pass to [comb.unListen](#comb_unListen)\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (topic,callback){\r\n   if (!func.isFunction(callback)) throw new Error(\"callback must be a function\");\r\n   var handle = {\r\n   \ttopic : topic,\r\n   \tcb : callback,\r\n   \tpos : null\r\n   };\r\n   var list = listeners[topic];\r\n   if (!list) {\r\n   \tlist = (listeners[topic] = []);\r\n   }\r\n   list.push(handle);\r\n   handle.pos = list.length - 1;\r\n   return handle;\r\n   \t\t\t\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_listenForExit\"></a>\r\n\r\n###*listenForExit*\r\n\r\n\r\n\r\n---\r\n*Defined base/misc.js* [Top](#top)\r\n\r\n\r\nAdds listeners to process.exit with out having to change setMaxListeners useful if you\r\n are writing a library and do not want to change core setting.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _cb_ `Funciton` : funciton to call when process is exiting\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (cb){\r\n   setupListener();\r\n   listeners.push(cb);\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_merge\"></a>\r\n\r\n###*merge*\r\n\r\n\r\n\r\n---\r\n*Defined base/object.js* [Top](#top)\r\n\r\n\r\nMerges objects together\r\n NOTE: this function takes a variable number of objects to merge\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar myObj = {};\r\n comb.merge(myObj, {test : true});\r\n\r\n myObj.test => true\r\n\r\n comb.merge(myObj, {test : false}, {test2 : false}, {test3 : \"hello\", test4 : \"world\"});\r\n myObj.test => false\r\n myObj.test2 => false\r\n myObj.test3 => \"hello\"\r\n myObj.test4 => \"world\"\r\n\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `Object` : the object to merge into\r\n        \r\n * _props_ `Object` : variable number of objects to merge into the obj\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Object` the merged object\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj,props){\r\n   if (!obj) {\r\n       obj = {};\r\n   }\r\n   for (var i = 1, l = arguments.length; i &lt; l; i++) {\r\n       merge(obj, arguments[i]);\r\n   }\r\n   return obj; // Object\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_minutesAgo\"></a>\r\n\r\n###*minutesAgo*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nSubtracts the specified minutes/s from the current date.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _val_ `Number` : the number of minutes to subtract\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Date` a date with the number of minutes subtracted\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (val){\r\n   return date.add(new Date(), \"minutes\", -val);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_minutesFromNow\"></a>\r\n\r\n###*minutesFromNow*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nAdds the specified minutes/s to the current date.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _val_ `Number` : the number of minutes to add\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Date` a date with the number of minutes added\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (val){\r\n   return date.add(new Date(), \"minutes\", val);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_monthsAgo\"></a>\r\n\r\n###*monthsAgo*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nSubtracts the specified month/s from the current date.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _val_ `Number` : the number of months to subtract\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Date` a date with the number of monts subtracted\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (val){\r\n   return date.add(new Date(), \"months\", -val);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_monthsFromNow\"></a>\r\n\r\n###*monthsFromNow*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nAdds the specified month/s to the current date.\r\n        \r\n*Example*\r\n\r\n```javascript\r\n//assuming that current month is february\r\n comb.yearsFromNow(2); //yyyy-04-dd hh:MM:ss\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _val_ `Number` : the number of months to add\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Date` a date with the number of years added\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (val){\r\n   return date.add(new Date(), \"months\", val);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_partial\"></a>\r\n\r\n###*partial*\r\n\r\n\r\n\r\n---\r\n*Defined base/functions.js* [Top](#top)\r\n\r\n\r\nAllows the passing of additional arguments to a function when it is called\r\n especially useful for callbacks that you want to provide additional parameters to\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _method_ `String|Function` : the method to callback\r\n        \r\n * _args?_ `Anything` : variable number of arguments to pass\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Function` partially hitched function\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (method,args){\r\n   var args = Array.prototype.slice.call(arguments).slice(1);\r\n   if (typeof method == \"function\") {\r\n       return function () {\r\n           var scopeArgs = args.concat(Array.prototype.slice.call(arguments));\r\n           return method.apply(this, scopeArgs);\r\n       };\r\n   } else {\r\n       throw new Error(method + \"Method not defined\");\r\n   }\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_pluralize\"></a>\r\n\r\n###*pluralize*\r\n\r\n\r\n\r\n---\r\n*Defined base/inflections.js* [Top](#top)\r\n\r\n\r\nReturns the plural form of the word in the string.\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.pluralize(\"post\") => \"posts\"\r\n  comb.pluralize(\"octopus\") => \"octopi\"\r\n  comb.pluralize(\"sheep\") => \"sheep\"\r\n  comb.pluralize(\"words\") => \"words\"\r\n  comb.pluralize(\"the blue mailman\") => \"the blue mailmen\"\r\n  comb.pluralize(\"CamelOctopus\") => \"CamelOctopi\"\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _str_ `String` : the string to pluralize\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `String` the pluralized version of the string\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (str){\r\n   var ret = str;\r\n   if (!misc.isUndefinedOrNull(str)) {\r\n       if (UNCOUNTABLES.indexOf(str) == -1) {\r\n           for (var i in PLURALS) {\r\n               var s = PLURALS[i], rule = s[0], replacement = s[1];\r\n               if ((ret = ret.replace(rule, replacement)) != str) {\r\n                   break;\r\n               }\r\n           }\r\n       }\r\n   }\r\n   return ret;\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_secondsAgo\"></a>\r\n\r\n###*secondsAgo*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nSubtracts the specified seconds/s from the current date.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _val_ `Number` : the number of seconds to subtract\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Date` a date with the number of seconds subtracted\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (val){\r\n   return date.add(new Date(), \"seconds\", -val);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_secondsFromNow\"></a>\r\n\r\n###*secondsFromNow*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nAdds the specified second/s to the current date.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _val_ `Number` : the number of seconds to add\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Date` a date with the number of seconds added\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (val){\r\n   return date.add(new Date(), \"seconds\", val);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_serial\"></a>\r\n\r\n###*serial*\r\n\r\n\r\n\r\n---\r\n*Defined promise.js* [Top](#top)\r\n\r\n\r\nExecutes a list of items in a serial manner. If the list contains promises then each promise\r\n will be executed in a serial manner, if the list contains non async items then the next item in the list\r\n is called.\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar asyncAction = function(item, timeout){\r\n    var ret = new comb.Promise();\r\n    setTimeout(comb.hitchIgnore(ret, \"callback\", item), timeout);\r\n    return ret;\r\n };\r\n\r\n comb.serial([\r\n     comb.partial(asyncAction, 1, 1000),\r\n     comb.partial(asyncAction, 2, 900),\r\n     comb.partial(asyncAction, 3, 800),\r\n     comb.partial(asyncAction, 4, 700),\r\n     comb.partial(asyncAction, 5, 600),\r\n     comb.partial(asyncAction, 6, 500)\r\n ]).then(function(results){\r\n     console.log(results); // [1,2,3,4,5,6];\r\n });\r\n\r\n\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _list_  : \r\n        \r\n * _callback_  : \r\n        \r\n * _errback_  : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (list,callback,errback){\r\n   var ret = new Promise();\r\n   if (base.isArray(list)) {\r\n       callNext(list, 0, [], false, ret)\r\n   } else {\r\n       throw new Error(\"When calling comb.serial the first argument must be an array\");\r\n   }\r\n   ret.then(callback, errback);\r\n   return ret;\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_singleton\"></a>\r\n\r\n###*singleton*\r\n\r\n\r\n\r\n---\r\n*Defined define.js* [Top](#top)\r\n\r\n\r\nDefines a singleton instance of a Class.\r\n See [define](#define) for params.\r\n        \r\n*Example*\r\n\r\n```javascript\r\n var MyLab = comb.singleton([Mammal, Wolf, Dog, Breed]);\r\n  var myLab1 = new MyLab();\r\n  myLab1.type = \"collie\"\r\n  var myLab2 = new MyLab();\r\n  myLab1 === myLab2 => true\r\n  myLab1.type => \"collie\"\r\n  myLab2.type => \"collie\"\r\n \r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _sup_  : \r\n        \r\n * _proto_  : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (sup,proto){\r\n   var retInstance;\r\n   var child = function () {\r\n       if (!retInstance) {\r\n           this.constructor.apply(this, arguments);\r\n           retInstance = this;\r\n       }\r\n       return retInstance;\r\n   };\r\n   __define(child, sup, proto);\r\n   return  child.init() || child;\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_singularize\"></a>\r\n\r\n###*singularize*\r\n\r\n\r\n\r\n---\r\n*Defined base/inflections.js* [Top](#top)\r\n\r\n\r\nThe reverse of pluralize, returns the singular form of a word in a string.\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.singularize(\"posts\") => \"post\"\r\n   comb.singularize(\"octopi\")=> \"octopus\"\r\n   comb.singularize(\"sheep\") => \"sheep\"\r\n   comb.singularize(\"word\") => \"word\"\r\n   comb.singularize(\"the blue mailmen\") => \"the blue mailman\"\r\n   comb.singularize(\"CamelOctopi\") => \"CamelOctopus\"\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _str_ `String` : the string to singularize\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `String` the singularized version of the string\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (str){\r\n   var ret = str;\r\n   if (!misc.isUndefinedOrNull(str)) {\r\n       if (UNCOUNTABLES.indexOf(str) == -1) {\r\n           for (var i in SINGULARS) {\r\n               var s = SINGULARS[i], rule = s[0], replacement = s[1];\r\n               if ((ret = ret.replace(rule, replacement)) != str) {\r\n                   break;\r\n               }\r\n           }\r\n       }\r\n   }\r\n   return ret;\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_unListen\"></a>\r\n\r\n###*unListen*\r\n\r\n\r\n\r\n---\r\n*Defined base/broadcast.js* [Top](#top)\r\n\r\n\r\nDisconnects a listener\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _handle_  : a handle returned from [comb.listen](#comb_listen)\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (handle){\r\n   if (handle) {\r\n   \tvar topic = handle.topic, list = listeners[topic];\r\n   \tif (list) {\r\n   \t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n   \t\t\tif (list[i] == handle) {\r\n   \t\t\t\tlist.splice(i, 1);\r\n   \t\t\t}\r\n   \t\t}\r\n   \t\tif (!list.length) {\r\n   \t\t\tdelete listeners[topic];\r\n   \t\t}\r\n   \t}\r\n   }\r\n   \t\t\t\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_underscore\"></a>\r\n\r\n###*underscore*\r\n\r\n\r\n\r\n---\r\n*Defined base/inflections.js* [Top](#top)\r\n\r\n\r\nThe reverse of camelize. Makes an underscored form from the expression in the string.\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.underscore('helloWorld') => hello_world\r\n  comb.underscore('column_name') => column_name\r\n  comb.underscore('columnName') => column_name\r\n  comb.underscore(null) => null\r\n  comb.underscore() => undefined\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _str_ `String` : The string to underscore\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `String` the underscored version of the string\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (str){\r\n   var ret = str;\r\n   if (!misc.isUndefinedOrNull(str)) {\r\n       ret = str.replace(UNDERSCORE_CONVERT_REGEXP1, UNDERSCORE_CONVERT_REPLACE)\r\n           .replace(UNDERSCORE_CONVERT_REGEXP2, UNDERSCORE_CONVERT_REPLACE)\r\n           .replace(DASH, UNDERSCORE).toLowerCase();\r\n   }\r\n   return ret;\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_when\"></a>\r\n\r\n###*when*\r\n\r\n\r\n\r\n---\r\n*Defined promise.js* [Top](#top)\r\n\r\n\r\nWaits for promise and non promise values to resolve and fires callback or errback appropriately.\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar a = \"hello\";\r\n  var b = new comb.Promise().callback(world);\r\n  comb.when(a, b) => called back with [\"hello\", \"world\"];\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _args_ `Anything...` : variable number of arguments to wait for\r\n        \r\n * _cb_ `Function` : the callback function\r\n        \r\n * _eb_ `Function` : the errback function\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `comb.Promise` a promise that is fired when all values have resolved\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (args,cb,eb){\r\n   var args = base.argsToArray(arguments), p;\r\n   eb = base.isFunction(args[args.length - 1]) ? args.pop() : null;\r\n   cb = base.isFunction(args[args.length - 1]) ? args.pop() : null;\r\n   if (eb && !cb) {\r\n       cb = eb;\r\n       eb = null;\r\n   }\r\n   if (!args.length) {\r\n       p = new Promise().callback(args);\r\n   } else if (args.length == 1) {\r\n       args = args.pop();\r\n       p = exports.isPromiseLike(args) ? args : new Promise().callback(args);\r\n   } else {\r\n       var p = new PromiseList(args.map(function (a) {\r\n           return exports.isPromiseLike(a) ? a : new Promise().callback(a);\r\n       }), true);\r\n   }\r\n   if (cb) {\r\n       p.addCallback(cb);\r\n   }\r\n   if (eb) {\r\n       p.addErrback(eb);\r\n   }\r\n   return p;\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_wrap\"></a>\r\n\r\n###*wrap*\r\n\r\n\r\n\r\n---\r\n*Defined promise.js* [Top](#top)\r\n\r\n\r\nWraps traditional node style functions with a promise.\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar fs = require(\"fs\");\r\n var readFile = comb.wrap(fs.readFile, fs);\r\n readFile(__dirname + \"/test.json\").then(\r\n      function(buffer){\r\n          console.log(contents);\r\n      },\r\n      funciton(err){\r\n\r\n      }  console.error(err);\r\n );\r\n\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _fn_ `Function` : function to wrap\r\n        \r\n * _scope_ `Object` : scope to call the function in\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Funciton` a wrapped function\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (fn,scope){\r\n   return function () {\r\n       var ret = new Promise();\r\n       var args = base.argsToArray(arguments);\r\n       args.push(function (err, res) {\r\n           var args = base.argsToArray(arguments);\r\n           if (err) {\r\n               ret.errback(err);\r\n           } else {\r\n               args.shift();\r\n               ret.callback.apply(ret, args);\r\n           }\r\n       });\r\n       fn.apply(scope || this, args);\r\n       return ret;\r\n   }\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_yearsAgo\"></a>\r\n\r\n###*yearsAgo*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nSubtracts the specified year/s from the current date.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _val_ `Number` : the number of years to subtract\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Date` a date with the number of years subtracted\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (val){\r\n   return date.add(new Date(), \"years\", -val);\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_yearsFromNow\"></a>\r\n\r\n###*yearsFromNow*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nAdds the specified year/s to the current date.\r\n        \r\n*Example*\r\n\r\n```javascript\r\n//assuming that current year is 2012\r\n comb.yearsFromNow(1); //2013-mm-dd hh:MM:ss\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _val_ `Number` : the number of years to add\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Date` a date with the number of years added\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (val){\r\n   return date.add(new Date(), \"years\", val);\r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_array\"></a>\r\n##comb.array\r\n\r\n[Top](#top)\r\n\r\nUtilities for Arrays\r\n\r\n\r\n  * [cartesian](#comb_array_cartesian)\r\n\r\n  * [compact](#comb_array_compact)\r\n\r\n  * [flatten](#comb_array_flatten)\r\n\r\n  * [intersect](#comb_array_intersect)\r\n\r\n  * [permutations](#comb_array_permutations)\r\n\r\n  * [powerSet](#comb_array_powerSet)\r\n\r\n  * [removeDuplicates](#comb_array_removeDuplicates)\r\n\r\n  * [rotate](#comb_array_rotate)\r\n\r\n  * [sum](#comb_array_sum)\r\n\r\n  * [toArray](#comb_array_toArray)\r\n\r\n  * [transpose](#comb_array_transpose)\r\n\r\n  * [union](#comb_array_union)\r\n\r\n  * [valuesAt](#comb_array_valuesAt)\r\n\r\n  * [zip](#comb_array_zip)\r\n\r\n\r\n  \r\n<a name=\"comb_array_cartesian\"></a>\r\n\r\n###*cartesian*\r\n\r\n\r\n\r\n---\r\n*Defined base/array.js* [Top](#top)\r\n\r\n\r\nFind the cartesian product of two arrays\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.array.cartesian([1,2], [2,3]) => [\r\n           [1,2],\r\n           [1,3],\r\n           [2,2],\r\n           [2,3]\r\n       ]\r\n comb.array.cartesian([1,2], [2,3,4]) => [\r\n           [1,2],\r\n           [1,3],\r\n           [1,4] ,\r\n           [2,2],\r\n           [2,3],\r\n           [2,4]\r\n       ]\r\n comb.array.cartesian([1,2,3], [2,3,4]) => [\r\n           [1,2],\r\n           [1,3],\r\n           [1,4] ,\r\n           [2,2],\r\n           [2,3],\r\n           [2,4] ,\r\n           [3,2],\r\n           [3,3],\r\n           [3,4]\r\n       ]\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _a_ `Array` : \r\n        \r\n * _b_ `Array` : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (a,b){\r\n   var ret = [];\r\n   if (isArray(a) && isArray(b) && a.length && b.length)\r\n       ret = cross(a[0], b).concat(array.cartesian(a.slice(1), b));\r\n   return ret;\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_array_compact\"></a>\r\n\r\n###*compact*\r\n\r\n\r\n\r\n---\r\n*Defined base/array.js* [Top](#top)\r\n\r\n\r\nCompacts an array removing null or undefined objects from the array.\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar x;\r\n comb.array.compact([1,null,null,x,2]) => [1,2]\r\n comb.array.compact([1,2]) => [1,2]\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _arr_ `Array` : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (arr){\r\n   var ret = [];\r\n   if (isArray(arr) && arr.length) {\r\n       ret = arr.filter(function (item) {\r\n           return !misc.isUndefinedOrNull(item);\r\n       })\r\n   }\r\n   return ret;\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_array_flatten\"></a>\r\n\r\n###*flatten*\r\n\r\n\r\n\r\n---\r\n*Defined base/array.js* [Top](#top)\r\n\r\n\r\nFlatten multiple arrays into a single array\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.array.flatten([1,2], [2,3], [3,4]) => [1,2,2,3,3,4]\r\n comb.array.flatten([1,\"A\"], [2,\"B\"], [3,\"C\"]) => [1,\"A\",2,\"B\",3,\"C\"]\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _array_  : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (arr){\r\n   var set;\r\n   var args = argsToArray(arguments);\r\n   if (args.length > 1) {\r\n       //assume we are intersections all the lists in the array\r\n       set = args;\r\n   } else {\r\n       set = array.toArray(arr);\r\n   }\r\n   return set.reduce(function (a, b) {\r\n       return a.concat(b);\r\n   }, []);\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_array_intersect\"></a>\r\n\r\n###*intersect*\r\n\r\n\r\n\r\n---\r\n*Defined base/array.js* [Top](#top)\r\n\r\n\r\nFinds the intersection of arrays\r\n NOTE : this function accepts an arbitrary number of arrays\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.array.intersect([1,2], [2,3], [2,3,5]) => [2]\r\n comb.array.intersect([1,2,3], [2,3,4,5], [2,3,5]) => [2,3]\r\n comb.array.intersect([1,2,3,4], [2,3,4,5], [2,3,4,5]) => [2,3,4]\r\n comb.array.intersect([1,2,3,4,5], [1,2,3,4,5], [1,2,3]) => [1,2,3]\r\n comb.array.intersect([[1,2,3,4,5],[1,2,3,4,5],[1,2,3]]) => [1,2,3]\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _a_ `Array` : \r\n        \r\n * _b_ `Array` : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (a,b){\r\n   var collect = [], set;\r\n   var args = argsToArray(arguments);\r\n   if (args.length > 1) {\r\n       //assume we are intersections all the lists in the array\r\n       set = args;\r\n   } else {\r\n       set = args[0];\r\n   }\r\n   if (isArray(set)) {\r\n       var x = set.shift();\r\n       var collect = set.reduce(function (a, b) {\r\n           return intersection(a, b);\r\n       }, x);\r\n   }\r\n   return array.removeDuplicates(collect);\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_array_permutations\"></a>\r\n\r\n###*permutations*\r\n\r\n\r\n\r\n---\r\n*Defined base/array.js* [Top](#top)\r\n\r\n\r\nFinds all permutations of an array\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar arr = [1,2,3];\r\n comb.array.permutations(arr)    => [[ 1, 2, 3 ],[ 1, 3, 2 ],[ 2, 3, 1 ],\r\n                                     [ 2, 1, 3 ],[ 3, 1, 2 ],[ 3, 2, 1 ]]\r\n comb.array.permutations(arr, 2) => [[ 1, 2],[ 1, 3],[ 2, 3],[ 2, 1],[ 3, 1],[ 3, 2]]\r\n comb.array.permutations(arr, 1) => [[1],[2],[3]]\r\n comb.array.permutations(arr, 0) => [[]]\r\n comb.array.permutations(arr, 4) => []\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _arr_ `Array` : the array to permute.\r\n        \r\n * _length_ `Number` : the number of elements to permute.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (arr,length){\r\n   var ret = [];\r\n   if (isArray(arr)) {\r\n       var copy = arr.slice(0);\r\n       if (typeof length != \"number\") {\r\n           length = arr.length;\r\n       }\r\n       if (!length) {\r\n           ret = [\r\n               []\r\n           ];\r\n       } else if (length &lt;= arr.length) {\r\n           ret = arr.reduce(function (a, b, i) {\r\n               if (length > 1) {\r\n                   var ret = permute(b, array.rotate(copy, i).slice(1), length);\r\n               } else {\r\n                   ret = [\r\n                       [b]\r\n                   ];\r\n               }\r\n               return a.concat(ret);\r\n           }, [])\r\n       }\r\n   }\r\n   return ret;\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_array_powerSet\"></a>\r\n\r\n###*powerSet*\r\n\r\n\r\n\r\n---\r\n*Defined base/array.js* [Top](#top)\r\n\r\n\r\nFinds the powerset of an array\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.array.powerSet([1,2]) => [\r\n           [],\r\n           [ 1 ],\r\n           [ 2 ],\r\n           [ 1, 2 ]\r\n   ]\r\n   comb.array.powerSet([1,2,3]) => [\r\n           [],\r\n           [ 1 ],\r\n           [ 2 ],\r\n           [ 1, 2 ],\r\n           [ 3 ],\r\n           [ 1, 3 ],\r\n           [ 2, 3 ],\r\n           [ 1, 2, 3 ]\r\n       ]\r\n   comb.array.powerSet([1,2,3,4]) => [\r\n           [],\r\n           [ 1 ],\r\n           [ 2 ],\r\n           [ 1, 2 ],\r\n           [ 3 ],\r\n           [ 1, 3 ],\r\n           [ 2, 3 ],\r\n           [ 1, 2, 3 ],\r\n           [ 4 ],\r\n           [ 1, 4 ],\r\n           [ 2, 4 ],\r\n           [ 1, 2, 4 ],\r\n           [ 3, 4 ],\r\n           [ 1, 3, 4 ],\r\n           [ 2, 3, 4 ],\r\n           [ 1, 2, 3, 4 ]\r\n       ]\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _arr_ `Array` : the array to find the powerset of\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (arr){\r\n   var ret = [];\r\n   if (isArray(arr) && arr.length) {\r\n       var ret = arr.reduce(function (a, b) {\r\n           var ret = a.map(function (c) {\r\n               return c.concat(b);\r\n           })\r\n           return a.concat(ret);\r\n       }, [\r\n           []\r\n       ]);\r\n   }\r\n   return ret;\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_array_removeDuplicates\"></a>\r\n\r\n###*removeDuplicates*\r\n\r\n\r\n\r\n---\r\n*Defined base/array.js* [Top](#top)\r\n\r\n\r\nRemoves duplicates from an array\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.array.removeDuplicates([1,1,1]) => [1]\r\n comb.array.removeDuplicates([1,2,3,2]) => [1,2,3]\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _array_ `Aray` : the array of elements to remove duplicates from\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (arr){\r\n   if (isArray(arr)) {\r\n       var ret = arr.reduce(function (a, b) {\r\n           if (a.indexOf(b) == -1) {\r\n               return a.concat(b);\r\n           } else {\r\n               return a;\r\n           }\r\n       }, []);\r\n       return ret;\r\n   }\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_array_rotate\"></a>\r\n\r\n###*rotate*\r\n\r\n\r\n\r\n---\r\n*Defined base/array.js* [Top](#top)\r\n\r\n\r\nRotates an array the number of specified positions\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar arr = [\"a\", \"b\", \"c\", \"d\"];\r\n comb.array.rotate(arr)     => [\"b\", \"c\", \"d\", \"a\"]\r\n comb.array.rotate(arr, 2)  => [\"c\", \"d\", \"a\", \"b\"]);\r\n comb.array.rotate(arr, 3)  => [\"d\", \"a\", \"b\", \"c\"]);\r\n comb.array.rotate(arr, 4)  => [\"a\", \"b\", \"c\", \"d\"]);\r\n comb.array.rotate(arr, -1) => [\"d\", \"a\", \"b\", \"c\"]);\r\n comb.array.rotate(arr, -2) => [\"c\", \"d\", \"a\", \"b\"]);\r\n comb.array.rotate(arr, -3) => [\"b\", \"c\", \"d\", \"a\"]);\r\n comb.array.rotate(arr, -4) => [\"a\", \"b\", \"c\", \"d\"]);\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _array_ `Array` : the array of elements to remove duplicates from\r\n        \r\n * _numberOfTimes_ `Number` : the number of times to rotate the array\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (arr,numberOfTimes){\r\n   var ret = arr.slice();\r\n   if (typeof numberOfTimes != \"number\") {\r\n       numberOfTimes = 1;\r\n   }\r\n   if (numberOfTimes && isArray(arr)) {\r\n       if (numberOfTimes > 0) {\r\n           ret.push(ret.shift());\r\n           numberOfTimes--;\r\n       } else {\r\n           ret.unshift(ret.pop());\r\n           numberOfTimes++;\r\n       }\r\n       return array.rotate(ret, numberOfTimes);\r\n   } else {\r\n       return ret;\r\n   }\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_array_sum\"></a>\r\n\r\n###*sum*\r\n\r\n\r\n\r\n---\r\n*Defined base/array.js* [Top](#top)\r\n\r\n\r\nSums all items in an array\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.array.sum([1,2,3]) => 6\r\n  comb.array.sum([\"A\",\"B\",\"C\"]) => \"ABC\";\r\n  var d1 = new Date(1999), d2 = new Date(2000), d3 = new Date(3000);\r\n  comb.array.sum([d1,d2,d3]) => \"Wed Dec 31 1969 18:00:01 GMT-0600 (CST)\"\r\n                              + \"Wed Dec 31 1969\"  18:00:02 GMT-0600 (CST)\"\r\n                              + \"Wed Dec 31 1969 18:00:03 GMT-0600 (CST)\"\r\n  comb.array.sum([{},{},{}]) => \"[object Object][object Object][object Object]\";\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _array_ `Number[]` : the array of numbers to sum\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (array){\r\n   array = array || [];\r\n   if (array.length) {\r\n       return array.reduce(function (a, b) {\r\n           return a + b;\r\n       });\r\n   } else {\r\n       return 0;\r\n   }\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_array_toArray\"></a>\r\n\r\n###*toArray*\r\n\r\n\r\n\r\n---\r\n*Defined base/array.js* [Top](#top)\r\n\r\n\r\nconverts anything to an array\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.array.toArray({a : \"b\", b : \"c\"}) => [[\"a\",\"b\"], [\"b\",\"c\"]];\r\n  comb.array.toArray(\"a\") => [\"a\"]\r\n  comb.array.toArray([\"a\"]) =>  [\"a\"];\r\n  comb.array.toArray() => [];\r\n  comb.array.toArray(\"a\", {a : \"b\"}) => [\"a\", [\"a\", \"b\"]];\r\n     \r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _o_  : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (o){\r\n   var ret = [];\r\n   if (o != null) {\r\n       var args = argsToArray(arguments);\r\n       if (args.length == 1) {\r\n           if (isArray(o)) {\r\n               ret = o;\r\n           } else if (obj.isHash(o)) {\r\n               for (var i in o) {\r\n                   if (o.hasOwnProperty(i)) {\r\n                       ret.push([i, o[i]]);\r\n                   }\r\n               }\r\n           } else {\r\n               ret.push(o);\r\n           }\r\n       } else {\r\n           args.forEach(function (a) {\r\n               ret = ret.concat(array.toArray(a));\r\n           })\r\n       }\r\n   }\r\n   return ret;\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_array_transpose\"></a>\r\n\r\n###*transpose*\r\n\r\n\r\n\r\n---\r\n*Defined base/array.js* [Top](#top)\r\n\r\n\r\nTransposes an array of arrays\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.array.transpose([[1,2,3], [4,5,6]]) => [ [ 1, 4 ], [ 2, 5 ], [ 3, 6 ] ]\r\n comb.array.transpose([[1,2], [3,4], [5,6]]) => [ [ 1, 3, 5 ], [ 2, 4, 6 ] ]\r\n comb.array.transpose([[1], [3,4], [5,6]]) => [[1]])\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _arr_ `Array[Array[]]` : Array of arrays\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (arr){\r\n   var ret = [];\r\n   if (isArray(arr) && arr.length) {\r\n       var last;\r\n       arr.forEach(function (a) {\r\n           if (isArray(a) && (!last || a.length == last.length)) {\r\n               a.forEach(function (b, i) {\r\n                   !ret[i] && (ret[i] = []);\r\n                   ret[i].push(b);\r\n               });\r\n               last = a;\r\n           }\r\n       });\r\n   }\r\n   return ret;\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_array_union\"></a>\r\n\r\n###*union*\r\n\r\n\r\n\r\n---\r\n*Defined base/array.js* [Top](#top)\r\n\r\n\r\nUnion a variable number of arrays together\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.array.union(['a','b','c'], ['b','c', 'd']) => [\"a\", \"b\", \"c\", \"d\"]\r\n comb.array.union([\"a\"], [\"b\"], [\"c\"], [\"d\"], [\"c\"]) => [\"a\", \"b\", \"c\", \"d\"]\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _arrs_  : variable number of arrays to union\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   var ret = [];\r\n   var arrs = argsToArray(arguments);\r\n   if (arrs.length > 1) {\r\n       ret = array.removeDuplicates(arrs.reduce(function (a, b) {\r\n           return a.concat(b);\r\n       }, []));\r\n   }\r\n   return ret;\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_array_valuesAt\"></a>\r\n\r\n###*valuesAt*\r\n\r\n\r\n\r\n---\r\n*Defined base/array.js* [Top](#top)\r\n\r\n\r\nRetrieves values at specified indexes in the array\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar arr =[\"a\", \"b\", \"c\", \"d\"]\r\n   comb.array.valuesAt(arr, 1,2,3) => [\"b\", \"c\", \"d\"];\r\n   comb.array.valuesAt(arr, 1,2,3, 4) => [\"b\", \"c\", \"d\", null];\r\n   comb.array.valuesAt(arr, 0,3) => [\"a\", \"d\"];\r\n\r\n  \r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _arr_ `Array` : the array to retrieve values from\r\n        \r\n * _indexes_ `Number` : variable number of indexes to retrieve\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (arr,indexes){\r\n   var ret = [];\r\n   var indexes = argsToArray(arguments);\r\n   var arr = indexes.shift(), l = arr.length;\r\n   if (isArray(arr) && indexes.length) {\r\n       for (var i = 0; i &lt; indexes.length; i++) {\r\n           ret.push(arr[indexes[i]] || null);\r\n       }\r\n   }\r\n   return ret;\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_array_zip\"></a>\r\n\r\n###*zip*\r\n\r\n\r\n\r\n---\r\n*Defined base/array.js* [Top](#top)\r\n\r\n\r\nZips to arrays together\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar a = [ 4, 5, 6 ], b = [ 7, 8, 9 ]\r\n  comb.array.zip([1], [2], [3]) => [[ 1, 2, 3 ]]);\r\n  comb.array.zip([1,2], [2], [3]) => [[ 1, 2, 3 ],[2, null, null]]\r\n  comb.array.zip([1,2,3], a, b) => [[1, 4, 7],[2, 5, 8],[3, 6, 9]]\r\n  comb.array.zip([1,2], a, b) => [[1, 4, 7],[2, 5, 8]]\r\n  comb.array.zip(a, [1,2], [8]) => [[4,1,8],[5,2,null],[6,null,null]]\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _arrays_  : variable number of arrays to zip together\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   var ret = [];\r\n   var arrs = argsToArray(arguments);\r\n   if (arrs.length > 1) {\r\n       var arr1 = arrs.shift();\r\n       if (isArray(arr1)) {\r\n           ret = arr1.reduce(function (a, b, i) {\r\n               var curr = [b];\r\n               for (var j = 0; j &lt; arrs.length; j++) {\r\n                   var currArr = arrs[j];\r\n                   if (isArray(currArr) && !misc.isUndefined(currArr[i])) {\r\n                       curr.push(currArr[i]);\r\n                   } else {\r\n                       curr.push(null);\r\n                   }\r\n               }\r\n               a.push(curr)\r\n               return a;\r\n           }, []);\r\n       }\r\n   }\r\n   return ret;\r\n       \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_characters\"></a>\r\n##comb.characters\r\n\r\n[Top](#top)\r\n\r\ncomb characters\r\n<table><tr><td>Property</td><td>Default Value</td><td>Description</td></tr><tr><td><em>ALPHA</em></td><td>\"α\"</td><td>α</td><tr><tr><td><em>APPROX</em></td><td>\"≈\"</td><td>≈</td><tr><tr><td><em>A_E_LOWER</em></td><td>\"æ\"</td><td>æ</td><tr><tr><td><em>A_E_UPPER</em></td><td>\"Æ\"</td><td>Æ</td><tr><tr><td><em>A_LOWER_ACCENT</em></td><td>\"á\"</td><td>á</td><tr><tr><td><em>A_LOWER_CIRCLE_OVER</em></td><td>\"å\"</td><td>å</td><tr><tr><td><em>A_LOWER_CIRCUMFLEX</em></td><td>\"â\"</td><td>â</td><tr><tr><td><em>A_LOWER_GRAVE_ACCENT</em></td><td>\"à\"</td><td>à</td><tr><tr><td><em>A_LOWER_UMLAUT</em></td><td>\"ä\"</td><td>ä</td><tr><tr><td><em>A_SUPER</em></td><td>\"ª\"</td><td>ª</td><tr><tr><td><em>A_UPPER_CIRCLE</em></td><td>\"Å\"</td><td>Å</td><tr><tr><td><em>A_UPPER_UMLAUT</em></td><td>\"Ä\"</td><td>Ä</td><tr><tr><td><em>BECAUSE</em></td><td>\"⌡\"</td><td>⌡</td><tr><tr><td><em>BETA</em></td><td>\"β\"</td><td>β</td><tr><tr><td><em>BOLD_DOT</em></td><td>\"∙\"</td><td>∙</td><tr><tr><td><em>CENTS</em></td><td>\"¢\"</td><td>¢</td><tr><tr><td><em>CHECK</em></td><td>\"√\"</td><td>√</td><tr><tr><td><em>CHI_LOWER</em></td><td>\"φ\"</td><td>φ</td><tr><tr><td><em>CHI_UPPER</em></td><td>\"χ\"</td><td>χ</td><tr><tr><td><em>CIRCLE</em></td><td>\"○\"</td><td>○</td><tr><tr><td><em>CLOVE</em></td><td>\"♣\"</td><td>♣</td><tr><tr><td><em>COPYRIGHT</em></td><td>\"©\"</td><td>©</td><tr><tr><td><em>CUBED</em></td><td>\"³\"</td><td>³</td><tr><tr><td><em>CURRENCY</em></td><td>\"¤\"</td><td>¤</td><tr><tr><td><em>C_CEDILLA</em></td><td>\"Ç\"</td><td>Ç</td><tr><tr><td><em>C_LOWER_CIRCUMFLEX</em></td><td>\"ç\"</td><td>ç</td><tr><tr><td><em>DARK_SHADED_BOX</em></td><td>\"▓\"</td><td>▓</td><tr><tr><td><em>DEFINITION</em></td><td>\"≡\"</td><td>≡</td><tr><tr><td><em>DEGREE</em></td><td>\"°\"</td><td>°</td><tr><tr><td><em>DELTA</em></td><td>\"δ\"</td><td>δ</td><tr><tr><td><em>DIAMOND</em></td><td>\"♦\"</td><td>♦</td><tr><tr><td><em>DIVIDE</em></td><td>\"÷\"</td><td>÷</td><tr><tr><td><em>DOESNOT_EXIST</em></td><td>\"∄\"</td><td>∄</td><tr><tr><td><em>DOT</em></td><td>\"•\"</td><td>•</td><tr><tr><td><em>DOT_SMALL</em></td><td>\"·\"</td><td>·</td><tr><tr><td><em>DOUBLE_EIGHT_NOTE</em></td><td>\"♫\"</td><td>♫</td><tr><tr><td><em>DOUBLE_LEFT</em></td><td>\"«\"</td><td>«</td><tr><tr><td><em>DOUBLE_RIGHT</em></td><td>\"»\"</td><td>»</td><tr><tr><td><em>DOWN_ARROW</em></td><td>\"↓\"</td><td>↓</td><tr><tr><td><em>DOWN_TRIANGLE</em></td><td>\"▼\"</td><td>▼</td><tr><tr><td><em>EIGHT_NOTE</em></td><td>\"♪\"</td><td>♪</td><tr><tr><td><em>EPSILON</em></td><td>\"ε\"</td><td>ε</td><tr><tr><td><em>ESZETT</em></td><td>\"ß\"</td><td>ß</td><tr><tr><td><em>ETA</em></td><td>\"η\"</td><td>η</td><tr><tr><td><em>EXCLUSIVE_OR</em></td><td>\"⊕\"</td><td>⊕</td><tr><tr><td><em>EXISTS</em></td><td>\"∃\"</td><td>∃</td><tr><tr><td><em>E_ACCENT</em></td><td>\"é\"</td><td>é</td><tr><tr><td><em>E_LOWER_CIRCUMFLEX</em></td><td>\"ê\"</td><td>ê</td><tr><tr><td><em>E_LOWER_GRAVE_ACCENT</em></td><td>\"è\"</td><td>è</td><tr><tr><td><em>E_LOWER_UMLAUT</em></td><td>\"ë\"</td><td>ë</td><tr><tr><td><em>E_UPPER_ACCENT</em></td><td>\"É\"</td><td>É</td><tr><tr><td><em>FEMALE</em></td><td>\"♀\"</td><td>♀</td><tr><tr><td><em>FILLED_SQUARE_CIRCLE</em></td><td>\"◙\"</td><td>◙</td><tr><tr><td><em>FOR_ALL</em></td><td>\"∀\"</td><td>∀</td><tr><tr><td><em>FUNCTION</em></td><td>\"ƒ\"</td><td>ƒ</td><tr><tr><td><em>GAMMA</em></td><td>\"γ\"</td><td>γ</td><tr><tr><td><em>GT_EQ</em></td><td>\"≥\"</td><td>≥</td><tr><tr><td><em>HEART</em></td><td>\"♥\"</td><td>♥</td><tr><tr><td><em>HOUSE</em></td><td>\"⌂\"</td><td>⌂</td><tr><tr><td><em>INFINITY</em></td><td>\"∞\"</td><td>∞</td><tr><tr><td><em>INTERSECTION</em></td><td>\"∩\"</td><td>∩</td><tr><tr><td><em>IOTA</em></td><td>\"ι\"</td><td>ι</td><tr><tr><td><em>ITALIC_X</em></td><td>\"✗\"</td><td>✗</td><tr><tr><td><em>I_LOWER_ACCENT</em></td><td>\"í\"</td><td>í</td><tr><tr><td><em>I_LOWER_CIRCUMFLEX</em></td><td>\"î\"</td><td>î</td><tr><tr><td><em>I_LOWER_GRAVE_ACCENT</em></td><td>\"ì\"</td><td>ì</td><tr><tr><td><em>I_LOWER_UMLAUT</em></td><td>\"ï\"</td><td>ï</td><tr><tr><td><em>KAPPA</em></td><td>\"κ\"</td><td>κ</td><tr><tr><td><em>LAMBDA</em></td><td>\"λ\"</td><td>λ</td><tr><tr><td><em>LEFT_ARROW</em></td><td>\"←\"</td><td>←</td><tr><tr><td><em>LEFT_RIGHT_ARROW</em></td><td>\"↔\"</td><td>↔</td><tr><tr><td><em>LIGHT_SHADED_BOX</em></td><td>\"░\"</td><td>░</td><tr><tr><td><em>LT_EQ</em></td><td>\"≤\"</td><td>≤</td><tr><tr><td><em>MALE</em></td><td>\"♂\"</td><td>♂</td><tr><tr><td><em>MAZE_DOUBLE_BOTTOM_T</em></td><td>\"╩\"</td><td>╩</td><tr><tr><td><em>MAZE_DOUBLE_CROSS</em></td><td>\"╬\"</td><td>╬</td><tr><tr><td><em>MAZE_DOUBLE_HORIZONTAL</em></td><td>\"═\"</td><td>═</td><tr><tr><td><em>MAZE_DOUBLE_LEFT_BOTTOM</em></td><td>\"╚\"</td><td>╚</td><tr><tr><td><em>MAZE_DOUBLE_LEFT_CENTER</em></td><td>\"╣\"</td><td>╣</td><tr><tr><td><em>MAZE_DOUBLE_LEFT_T</em></td><td>\"╠\"</td><td>╠</td><tr><tr><td><em>MAZE_DOUBLE_LEFT_TOP</em></td><td>\"╔\"</td><td>╔</td><tr><tr><td><em>MAZE_DOUBLE_RIGHT_BOTTOM</em></td><td>\"╝\"</td><td>╝</td><tr><tr><td><em>MAZE_DOUBLE_RIGHT_TOP</em></td><td>\"╗\"</td><td>╗</td><tr><tr><td><em>MAZE_DOUBLE_TOP_T</em></td><td>\"╦\"</td><td>╦</td><tr><tr><td><em>MAZE_DOUBLE_VERTICAL</em></td><td>\"║\"</td><td>║</td><tr><tr><td><em>MAZE_SINGLE_BOTTOM_DOUBLECENTER_T</em></td><td>\"╨\"</td><td>╨</td><tr><tr><td><em>MAZE_SINGLE_BOTTOM_DOUBLE_T</em></td><td>\"╧\"</td><td>╧</td><tr><tr><td><em>MAZE_SINGLE_BOTTOM_T</em></td><td>\"┴\"</td><td>┴</td><tr><tr><td><em>MAZE_SINGLE_CENTER</em></td><td>\"┼\"</td><td>┼</td><tr><tr><td><em>MAZE_SINGLE_DOUBLECENTER_CENTER</em></td><td>\"╫\"</td><td>╫</td><tr><tr><td><em>MAZE_SINGLE_DOUBLECROSS_CENTER</em></td><td>\"╪\"</td><td>╪</td><tr><tr><td><em>MAZE_SINGLE_HORIZONTAL_LINE</em></td><td>\"─\"</td><td>─</td><tr><tr><td><em>MAZE_SINGLE_LEFT_BOTTOM_SMALL</em></td><td>\"└\"</td><td>└</td><tr><tr><td><em>MAZE_SINGLE_LEFT_CENTER</em></td><td>\"╟\"</td><td>╟</td><tr><tr><td><em>MAZE_SINGLE_LEFT_DOUBLEBOTTOM_TOP</em></td><td>\"╓\"</td><td>╓</td><tr><tr><td><em>MAZE_SINGLE_LEFT_DOUBLERIGHT_BOTTOM</em></td><td>\"╘\"</td><td>╘</td><tr><tr><td><em>MAZE_SINGLE_LEFT_DOUBLERIGHT_TOP</em></td><td>\"╒\"</td><td>╒</td><tr><tr><td><em>MAZE_SINGLE_LEFT_DOUBLETOP_BOTTOM</em></td><td>\"╙\"</td><td>╙</td><tr><tr><td><em>MAZE_SINGLE_LEFT_DOUBLE_T</em></td><td>\"╞\"</td><td>╞</td><tr><tr><td><em>MAZE_SINGLE_LEFT_T</em></td><td>\"├\"</td><td>├</td><tr><tr><td><em>MAZE_SINGLE_LEFT_TOP</em></td><td>\"Γ\"</td><td>Γ</td><tr><tr><td><em>MAZE_SINGLE_LEFT_TOP_SMALL</em></td><td>\"┌\"</td><td>┌</td><tr><tr><td><em>MAZE_SINGLE_RIGHT_BOTTOM</em></td><td>\"╜\"</td><td>╜</td><tr><tr><td><em>MAZE_SINGLE_RIGHT_BOTTOM_SMALL</em></td><td>\"┘\"</td><td>┘</td><tr><tr><td><em>MAZE_SINGLE_RIGHT_DOUBLEBOTTOM_TOP</em></td><td>\"╖\"</td><td>╖</td><tr><tr><td><em>MAZE_SINGLE_RIGHT_DOUBLECENTER_T</em></td><td>\"╡\"</td><td>╡</td><tr><tr><td><em>MAZE_SINGLE_RIGHT_DOUBLELEFT_TOP</em></td><td>\"╕\"</td><td>╕</td><tr><tr><td><em>MAZE_SINGLE_RIGHT_DOUBLE_BL</em></td><td>\"╛\"</td><td>╛</td><tr><tr><td><em>MAZE_SINGLE_RIGHT_DOUBLE_T</em></td><td>\"╢\"</td><td>╢</td><tr><tr><td><em>MAZE_SINGLE_RIGHT_TOP</em></td><td>\"┐\"</td><td>┐</td><tr><tr><td><em>MAZE_SINGLE_TOP_DOUBLECENTER_T</em></td><td>\"╥\"</td><td>╥</td><tr><tr><td><em>MAZE_SINGLE_TOP_DOUBLE_T</em></td><td>\"╤\"</td><td>╤</td><tr><tr><td><em>MAZE_SINGLE_TOP_T</em></td><td>\"┬\"</td><td>┬</td><tr><tr><td><em>MAZE__SINGLE_RIGHT_T</em></td><td>\"┤\"</td><td>┤</td><tr><tr><td><em>MEDIUM_SHADED_BOX</em></td><td>\"▒\"</td><td>▒</td><tr><tr><td><em>MU</em></td><td>\"µ\"</td><td>µ</td><tr><tr><td><em>NEGATION</em></td><td>\"¬\"</td><td>¬</td><tr><tr><td><em>NU</em></td><td>\"ν\"</td><td>ν</td><tr><tr><td><em>N_LOWER_TILDE</em></td><td>\"ñ\"</td><td>ñ</td><tr><tr><td><em>N_UPPER_TILDE</em></td><td>\"Ñ\"</td><td>Ñ</td><tr><tr><td><em>OMEGA</em></td><td>\"Ω\"</td><td>Ω</td><tr><tr><td><em>OMICRON</em></td><td>\"ο\"</td><td>ο</td><tr><tr><td><em>ONE_FOURTH</em></td><td>\"¼\"</td><td>¼</td><tr><tr><td><em>ONE_HALF</em></td><td>\"½\"</td><td>½</td><tr><tr><td><em>O_LOWER_ACCENT</em></td><td>\"ó\"</td><td>ó</td><tr><tr><td><em>O_LOWER_CIRCUMFLEX</em></td><td>\"ô\"</td><td>ô</td><tr><tr><td><em>O_LOWER_GRAVE_ACCENT</em></td><td>\"ò\"</td><td>ò</td><tr><tr><td><em>O_LOWER_UMLAUT</em></td><td>\"ö\"</td><td>ö</td><tr><tr><td><em>O_SUPER</em></td><td>\"º\"</td><td>º</td><tr><tr><td><em>O_UPPER_UMLAUT</em></td><td>\"Ö\"</td><td>Ö</td><tr><tr><td><em>PERMILE</em></td><td>\"‰\"</td><td>‰</td><tr><tr><td><em>PHI_LOWER</em></td><td>\"φ\"</td><td>φ</td><tr><tr><td><em>PHI_UPPER</em></td><td>\"Φ\"</td><td>Φ</td><tr><tr><td><em>PI</em></td><td>\"π\"</td><td>π</td><tr><tr><td><em>PILCROW</em></td><td>\"¶\"</td><td>¶</td><tr><tr><td><em>PLAY</em></td><td>\"►\"</td><td>►</td><tr><tr><td><em>PLUS_MINUS</em></td><td>\"±\"</td><td>±</td><tr><tr><td><em>POUND</em></td><td>\"£\"</td><td>£</td><tr><tr><td><em>PSI</em></td><td>\"ψ\"</td><td>ψ</td><tr><tr><td><em>PTS</em></td><td>\"₧\"</td><td>₧</td><tr><tr><td><em>REGISTERED_TM</em></td><td>\"®\"</td><td>®</td><tr><tr><td><em>REWIND</em></td><td>\"◄\"</td><td>◄</td><tr><tr><td><em>RHO</em></td><td>\"ρ\"</td><td>ρ</td><tr><tr><td><em>RIGHT_ANGLE</em></td><td>\"∟\"</td><td>∟</td><tr><tr><td><em>RIGHT_ARROW</em></td><td>\"→\"</td><td>→</td><tr><tr><td><em>SECTION</em></td><td>\"§\"</td><td>§</td><tr><tr><td><em>SIDEWAYS_L</em></td><td>\"⌐\"</td><td>⌐</td><tr><tr><td><em>SIGMA_LOWER</em></td><td>\"σ\"</td><td>σ</td><tr><tr><td><em>SIGMA_UPPER</em></td><td>\"Σ\"</td><td>Σ</td><tr><tr><td><em>SINCE</em></td><td>\"∵\"</td><td>∵</td><tr><tr><td><em>SMALL_UP_DOWN</em></td><td>\"↨\"</td><td>↨</td><tr><tr><td><em>SMILEY</em></td><td>\"☺\"</td><td>☺</td><tr><tr><td><em>SOLID_BOX</em></td><td>\"■\"</td><td>■</td><tr><tr><td><em>SOLID_RECTANGLE</em></td><td>\"█\"</td><td>█</td><tr><tr><td><em>SOLID_SMALL_RECTANGLE_BOTTOM</em></td><td>\"▄\"</td><td>▄</td><tr><tr><td><em>SOLID_SMALL_RECTANGLE_TOP</em></td><td>\"▀\"</td><td>▀</td><tr><tr><td><em>SOLID_SMILEY</em></td><td>\"☻\"</td><td>☻</td><tr><tr><td><em>SPADE</em></td><td>\"♠\"</td><td>♠</td><tr><tr><td><em>SQUARED</em></td><td>\"²\"</td><td>²</td><tr><tr><td><em>SQUARE_CIRCLE</em></td><td>\"◘\"</td><td>◘</td><tr><tr><td><em>SUN</em></td><td>\"☼\"</td><td>☼</td><tr><tr><td><em>SUPER_N</em></td><td>\"ⁿ\"</td><td>ⁿ</td><tr><tr><td><em>TAU</em></td><td>\"τ\"</td><td>τ</td><tr><tr><td><em>THEREFORE</em></td><td>\"⌠\"</td><td>⌠</td><tr><tr><td><em>THETA</em></td><td>\"Θ\"</td><td>Θ</td><tr><tr><td><em>THICK_LEFT_VERTICAL</em></td><td>\"▌\"</td><td>▌</td><tr><tr><td><em>THICK_MINUS</em></td><td>\"▬\"</td><td>▬</td><tr><tr><td><em>THICK_RIGHT_VERTICAL</em></td><td>\"▐\"</td><td>▐</td><tr><tr><td><em>TRADEMARK</em></td><td>\"™\"</td><td>™</td><tr><tr><td><em>TRIANGLE</em></td><td>\"▲\"</td><td>▲</td><tr><tr><td><em>UPSIDEDOWN_EXCLAMATION</em></td><td>\"¡\"</td><td>¡</td><tr><tr><td><em>UPSIDEDOWN_QUESTION</em></td><td>\"¿\"</td><td>¿</td><tr><tr><td><em>UPSILON</em></td><td>\"υ\"</td><td>υ</td><tr><tr><td><em>UP_ARROW</em></td><td>\"↑\"</td><td>↑</td><tr><tr><td><em>UP_DOWN</em></td><td>\"↕\"</td><td>↕</td><tr><tr><td><em>U_LOWER_ACCENT</em></td><td>\"ú\"</td><td>ú</td><tr><tr><td><em>U_LOWER_CIRCUMFLEX</em></td><td>\"û\"</td><td>û</td><tr><tr><td><em>U_LOWER_GRAVE_ACCENT</em></td><td>\"ù\"</td><td>ù</td><tr><tr><td><em>U_UMLAUT</em></td><td>\"ü\"</td><td>ü</td><tr><tr><td><em>U_UPPER_UMLAUT</em></td><td>\"Ü\"</td><td>Ü</td><tr><tr><td><em>VERTICAL_LINE</em></td><td>\"│\"</td><td>│</td><tr><tr><td><em>XI</em></td><td>\"ξ\"</td><td>ξ</td><tr><tr><td><em>YEN</em></td><td>\"¥\"</td><td>¥</td><tr><tr><td><em>Y_LOWER_UMLAUT</em></td><td>\"ÿ\"</td><td>ÿ</td><tr><tr><td><em>ZETA</em></td><td>\"ζ\"</td><td>ζ</td><tr></table>\r\n\r\n\r\n  \r\n\r\n<a name=\"comb_collections\"></a>\r\n##comb.collections\r\n\r\n[Top](#top)\r\n\r\nVarious collections\r\n\r\n\r\n\r\n  \r\n\r\n<a name=\"comb_date\"></a>\r\n##comb.date\r\n\r\n[Top](#top)\r\n\r\nUtilities for Dates\r\n\r\n\r\n  * [add](#comb_date_add)\r\n\r\n  * [compare](#comb_date_compare)\r\n\r\n  * [difference](#comb_date_difference)\r\n\r\n  * [format](#comb_date_format)\r\n\r\n  * [getDaysInMonth](#comb_date_getDaysInMonth)\r\n\r\n  * [getTimezoneName](#comb_date_getTimezoneName)\r\n\r\n  * [isLeapYear](#comb_date_isLeapYear)\r\n\r\n  * [isWeekend](#comb_date_isWeekend)\r\n\r\n  * [parse](#comb_date_parse)\r\n\r\n\r\n  \r\n<a name=\"comb_date_add\"></a>\r\n\r\n###*add*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nAdds a specified interval and amount to a date\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar dtA = new Date(2005, 11, 27);\r\n  comb.date.add(dtA, \"year\", 1) => new Date(2006, 11, 27);\r\n  comb.date.add(dtA, \"years\", 1) => new Date(2006, 11, 27);\r\n\r\n  dtA = new Date(2000, 0, 1);\r\n  comb.date.add(dtA, \"quarter\", 1) => new Date(2000, 3, 1);\r\n  comb.date.add(dtA, \"quarters\", 1) => new Date(2000, 3, 1);\r\n\r\n  dtA = new Date(2000, 0, 1);\r\n  comb.date.add(dtA, \"month\", 1) => new Date(2000, 1, 1);\r\n  comb.date.add(dtA, \"months\", 1) => new Date(2000, 1, 1);\r\n\r\n  dtA = new Date(2000, 0, 31);\r\n  comb.date.add(dtA, \"month\", 1) => new Date(2000, 1, 29);\r\n  comb.date.add(dtA, \"months\", 1) => new Date(2000, 1, 29);\r\n\r\n  dtA = new Date(2000, 0, 1);\r\n  comb.date.add(dtA, \"week\", 1) => new Date(2000, 0, 8);\r\n  comb.date.add(dtA, \"weeks\", 1) => new Date(2000, 0, 8);\r\n\r\n  dtA = new Date(2000, 0, 1);\r\n  comb.date.add(dtA, \"day\", 1) => new Date(2000, 0, 2);\r\n\r\n  dtA = new Date(2000, 0, 1);\r\n  comb.date.add(dtA, \"weekday\", 1) => new Date(2000, 0, 3);\r\n\r\n  dtA = new Date(2000, 0, 1, 11);\r\n  comb.date.add(dtA, \"hour\", 1) => new Date(2000, 0, 1, 12);\r\n\r\n  dtA = new Date(2000, 11, 31, 23, 59);\r\n  comb.date.add(dtA, \"minute\", 1) => new Date(2001, 0, 1, 0, 0);\r\n\r\n  dtA = new Date(2000, 11, 31, 23, 59, 59);\r\n  comb.date.add(dtA, \"second\", 1) => new Date(2001, 0, 1, 0, 0, 0);\r\n\r\n  dtA = new Date(2000, 11, 31, 23, 59, 59, 999);\r\n  comb.date.add(dtA, \"millisecond\", 1) => new Date(2001, 0, 1, 0, 0, 0, 0);\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _date_ `Date` : \r\n        \r\n * _interval_ `String` : the interval to add   <ul>       <li>day | days</li>       <li>weekday | weekdays</li>       <li>year | years</li>       <li>week | weeks</li>       <li>quarter | quarters</li>       <li>months | months</li>       <li>hour | hours</li>       <li>minute | minutes</li>       <li>second | seconds</li>       <li>millisecond | milliseconds</li>   </ul>\r\n        \r\n * _[amount=0]_ `Number` : the amount to add\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (/*Date*/date,/*String*/interval,/*int*/amount){\r\n   amount = amount | 0\r\n   var sum = new Date(date);\r\n   var fixOvershoot = false;\r\n   var property = \"Date\";\r\n   //noinspection FallthroughInSwitchStatementJS\r\n   switch (interval) {\r\n       case \"day\":\r\n       case \"days\" :\r\n           break;\r\n       case \"weekday\":\r\n       case \"weekdays\":\r\n           // Divide the increment time span into weekspans plus leftover days\r\n           // e.g., 8 days is one 5-day weekspan / and two leftover days\r\n           // Can't have zero leftover days, so numbers divisible by 5 get\r\n           // a days value of 5, and the remaining days make up the number of weeks\r\n           var days, weeks, mod = amount % 5, strt = date.getDay(), adj = 0;\r\n           if (!mod) {\r\n               days = (amount > 0) ? 5 : -5;\r\n               weeks = (amount > 0) ? ((amount - 5) / 5) : ((amount + 5) / 5);\r\n           } else {\r\n               days = mod;\r\n               weeks = parseInt(amount / 5);\r\n           }\r\n           if (strt == 6 && amount > 0) {\r\n               adj = 1;\r\n           } else if (strt == 0 && amount &lt; 0) {\r\n               // Orig date is Sun / negative increment\r\n               // Jump back over Sat\r\n               adj = -1;\r\n           }\r\n           // Get weekday val for the new date\r\n           var trgt = strt + days;\r\n           // New date is on Sat or Sun\r\n           if (trgt == 0 || trgt == 6) {\r\n               adj = (amount > 0) ? 2 : -2;\r\n           }\r\n           // Increment by number of weeks plus leftover days plus\r\n           // weekend adjustments\r\n           amount = (7 * weeks) + days + adj;\r\n           break;\r\n       case \"year\":\r\n       case \"years\":\r\n           property = \"FullYear\";\r\n           fixOvershoot = true;\r\n           break;\r\n       case \"week\":\r\n       case \"weeks\":\r\n           amount *= 7;\r\n           break;\r\n       case \"quarter\":\r\n       case \"quarters\" :\r\n           // Naive quarter is just three months\r\n           amount *= 3;\r\n       case \"month\":\r\n       case \"months\":\r\n           // Reset to last day of month if you overshoot\r\n           fixOvershoot = true;\r\n           property = \"Month\";\r\n           break;\r\n       default:\r\n           interval = interval.replace(/s$/, \"\");\r\n           property = \"UTC\" + interval.charAt(0).toUpperCase() + interval.substring(1) + \"s\";\r\n   }\r\n   if (property) {\r\n       sum[\"set\" + property](sum[\"get\" + property]() + amount);\r\n   }\r\n   if (fixOvershoot && (sum.getDate() &lt; date.getDate())) {\r\n       sum.setDate(0);\r\n   }\r\n   return sum; // Date\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_date_compare\"></a>\r\n\r\n###*compare*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nCompares two dates\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar d1 = new Date();\r\n d1.setHours(0);\r\n comb.date.compare(d1, d1) => 0\r\n\r\n  var d1 = new Date();\r\n  d1.setHours(0);\r\n  var d2 = new Date();\r\n  d2.setFullYear(2005);\r\n  d2.setHours(12);\r\n  comb.date.compare(d1, d2, \"date\") => 1\r\n  comb.date.compare(d1, d2, \"datetime\") => 1\r\n\r\n  var d1 = new Date();\r\n  d1.setHours(0);\r\n  var d2 = new Date();\r\n  d2.setFullYear(2005);\r\n  d2.setHours(12);\r\n  comb.date.compare(d2, d1, \"date\"), -1);\r\n  comb.date.compare(d1, d2, \"time\"), -1);\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _date1_ `Date|String` : the date to comapare\r\n        \r\n * _[date2=new Date()]_ `Date|String` : the date to compare date1 againse\r\n        \r\n * _portion_ `\"date\"|\"time\"|\"datetime\"` : compares the portion specified\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n *  -1 if date1 is < date2 0 if date1 === date2  1 if date1 > date2\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (/*Date*/date1,/*Date*/date2,/*String*/portion){\r\n   date1 = new Date(date1);\r\n   date2 = new Date((date2 || new Date()));\r\n   if (portion == \"date\") {\r\n       // Ignore times and compare dates.\r\n       date1.setHours(0, 0, 0, 0);\r\n       date2.setHours(0, 0, 0, 0);\r\n   } else if (portion == \"time\") {\r\n       // Ignore dates and compare times.\r\n       date1.setFullYear(0, 0, 0);\r\n       date2.setFullYear(0, 0, 0);\r\n   }\r\n   var ret = 0;\r\n   date1 > date2 && (ret = 1);\r\n   date1 &lt; date2 && (ret = -1);\r\n   return ret; // int\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_date_difference\"></a>\r\n\r\n###*difference*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nFinds the difference between two dates based on the specified interval\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar dtA, dtB;\r\n\r\n dtA = new Date(2005, 11, 27);\r\n dtB = new Date(2006, 11, 27);\r\n comb.date.difference(dtA, dtB, \"year\") => 1\r\n\r\n dtA = new Date(2000, 1, 29);\r\n dtB = new Date(2001, 2, 1);\r\n comb.date.difference(dtA, dtB, \"quarter\") => 4\r\n comb.date.difference(dtA, dtB, \"month\") => 13\r\n\r\n dtA = new Date(2000, 1, 1);\r\n dtB = new Date(2000, 1, 8);\r\n comb.date.difference(dtA, dtB, \"week\") => 1\r\n\r\n dtA = new Date(2000, 1, 29);\r\n dtB = new Date(2000, 2, 1);\r\n comb.date.difference(dtA, dtB, \"day\") => 1\r\n\r\n dtA = new Date(2006, 7, 3);\r\n dtB = new Date(2006, 7, 11);\r\n comb.date.difference(dtA, dtB, \"weekday\") => 6\r\n\r\n dtA = new Date(2000, 11, 31, 23);\r\n dtB = new Date(2001, 0, 1, 0);\r\n comb.date.difference(dtA, dtB, \"hour\") => 1\r\n\r\n dtA = new Date(2000, 11, 31, 23, 59);\r\n dtB = new Date(2001, 0, 1, 0, 0);\r\n comb.date.difference(dtA, dtB, \"minute\") => 1\r\n\r\n dtA = new Date(2000, 11, 31, 23, 59, 59);\r\n dtB = new Date(2001, 0, 1, 0, 0, 0);\r\n comb.date.difference(dtA, dtB, \"second\") => 1\r\n\r\n dtA = new Date(2000, 11, 31, 23, 59, 59, 999);\r\n dtB = new Date(2001, 0, 1, 0, 0, 0, 0);\r\n comb.date.difference(dtA, dtB, \"millisecond\") => 1\r\n\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _date1_ `Date` : \r\n        \r\n * _[date2 = new Date()]_ `Date` : \r\n        \r\n * _[interval = &quot;day&quot;]_ `String` : the intercal to find the difference of.\r\n   <ul>\r\n      <li>day | days</li>\r\n      <li>weekday | weekdays</li>\r\n      <li>year | years</li>\r\n      <li>week | weeks</li>\r\n      <li>quarter | quarters</li>\r\n      <li>months | months</li>\r\n      <li>hour | hours</li>\r\n      <li>minute | minutes</li>\r\n      <li>second | seconds</li>\r\n      <li>millisecond | milliseconds</li>\r\n  </ul>\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (/*Date*/date1,/*Date?*/date2,/*String*/interval,utc){\r\n   date2 = date2 || new Date();\r\n   interval = interval || \"day\";\r\n   var yearDiff = date2.getFullYear() - date1.getFullYear();\r\n   var delta = 1; // Integer return value\r\n   switch (interval) {\r\n       case \"quarter\":\r\n       case \"quarters\":\r\n           var m1 = date1[utc ? \"getUTCMonth\" : \"getMonth\"]();\r\n           var m2 = date2[utc ? \"getUTCMonth\" : \"getMonth\"]();\r\n           // Figure out which quarter the months are in\r\n           var q1 = floor(m1 / 3) + 1;\r\n           var q2 = floor(m2 / 3) + 1;\r\n           // Add quarters for any year difference between the dates\r\n           q2 += (yearDiff * 4);\r\n           delta = q2 - q1;\r\n           break;\r\n       case \"weekday\":\r\n       case \"weekdays\":\r\n           var days = round(date.difference(date1, date2, \"day\", utc));\r\n           var weeks = parseInt(date.difference(date1, date2, \"week\", utc));\r\n           var mod = days % 7;\r\n           // Even number of weeks\r\n           if (mod == 0) {\r\n               days = weeks * 5;\r\n           } else {\r\n               // Weeks plus spare change (&lt; 7 days)\r\n               var adj = 0;\r\n               var aDay = date1[utc ? \"getUTCDay\" : \"getDay\"]();\r\n               var bDay = date2[utc ? \"getUTCDay\" : \"getDay\"]();\r\n               weeks = parseInt(days / 7);\r\n               mod = days % 7;\r\n               // Mark the date advanced by the number of\r\n               // round weeks (may be zero)\r\n               var dtMark = new Date(date1);\r\n               dtMark.setDate(dtMark[utc ? \"getUTCDate\" : \"getDate\"]() + (weeks * 7));\r\n               var dayMark = dtMark[utc ? \"getUTCDay\" : \"getDay\"]();\r\n               // Spare change days -- 6 or less\r\n               if (days > 0) {\r\n                   switch (true) {\r\n                       // Range starts on Sat\r\n                       case (aDay == 6 || bDay == 6):\r\n                           adj = -1;\r\n                           break;\r\n                       // Range starts on Sun\r\n                       case aDay == 0:\r\n                           adj = 0;\r\n                           break;\r\n                       // Range ends on Sun\r\n                       case bDay == 0:\r\n                           adj = -2;\r\n                           break;\r\n                       // Range contains weekend\r\n                       case (dayMark + mod) > 5:\r\n                           adj = -2;\r\n                   }\r\n               } else if (days &lt; 0) {\r\n                   switch (true) {\r\n                       // Range starts on Sat\r\n                       case aDay == 6:\r\n                           adj = 0;\r\n                           break;\r\n                       // Range starts on Sun\r\n                       case aDay == 0:\r\n                           adj = 1;\r\n                           break;\r\n                       // Range ends on Sat\r\n                       case bDay == 6:\r\n                           adj = 2;\r\n                           break;\r\n                       // Range ends on Sun\r\n                       case bDay == 0:\r\n                           adj = 1;\r\n                           break;\r\n                       // Range contains weekend\r\n                       case (dayMark + mod) &lt; 0:\r\n                           adj = 2;\r\n                   }\r\n               }\r\n               days += adj;\r\n               days -= (weeks * 2);\r\n           }\r\n           delta = days;\r\n           break;\r\n       case \"year\":\r\n       case \"years\":\r\n           delta = yearDiff;\r\n           break;\r\n       case \"month\":\r\n       case \"months\":\r\n           var m1 = date1[utc ? \"getUTCMonth\" : \"getMonth\"]();\r\n           var m2 = date2[utc ? \"getUTCMonth\" : \"getMonth\"]();\r\n           delta = (m2 - m1) + (yearDiff * 12);\r\n           break;\r\n       case \"week\":\r\n       case \"weeks\":\r\n           delta = parseInt(date.difference(date1, date2, \"day\", utc) / 7);\r\n           break;\r\n       case \"day\":\r\n       case \"days\":\r\n           delta /= 24;\r\n       case \"hour\":\r\n       case \"hours\":\r\n           delta /= 60;\r\n       case \"minute\":\r\n       case \"minutes\":\r\n           delta /= 60;\r\n       case \"second\":\r\n       case \"seconds\":\r\n           delta /= 1000;\r\n       case \"millisecond\":\r\n       case \"milliseconds\":\r\n           delta *= date2.getTime() - date1.getTime();\r\n   }\r\n   // Round for fractional values and DST leaps\r\n   return round(delta); // Number (integer)\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_date_format\"></a>\r\n\r\n###*format*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nFormats a date to the specidifed format string\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar date = new Date(2006, 7, 11, 0, 55, 12, 345);\r\n comb.date.format(date, \"EEEE, MMMM dd, yyyy\") => \"Friday, August 11, 2006\"\r\n comb.date.format(date, \"M/dd/yy\") => \"8/11/06\"\r\n comb.date.format(date, \"E\") => \"6\"\r\n comb.date.format(date, \"h:m a\") => \"12:55 AM\"\r\n comb.date.format(date, 'h:m:s') => \"12:55:12\"\r\n comb.date.format(date, 'h:m:s.SS') => \"12:55:12.35\"\r\n comb.date.format(date, 'k:m:s.SS') => \"24:55:12.35\"\r\n comb.date.format(date, 'H:m:s.SS') => \"0:55:12.35\"\r\n comb.date.format(date, \"ddMMyyyy\") => \"11082006\"\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _date_  : the date to format\r\n        \r\n * _format_ `String` : the format of the date composed of the following options  <ul>                   <li> G    Era designator    Text    AD</li>                   <li> y    Year    Year    1996; 96</li>                   <li> M    Month in year    Month    July; Jul; 07</li>                   <li> w    Week in year    Number    27</li>                   <li> W    Week in month    Number    2</li>                   <li> D    Day in year    Number    189</li>                   <li> d    Day in month    Number    10</li>                   <li> E    Day in week    Text    Tuesday; Tue</li>                   <li> a    Am/pm marker    Text    PM</li>                   <li> H    Hour in day (0-23)    Number    0</li>                   <li> k    Hour in day (1-24)    Number    24</li>                   <li> K    Hour in am/pm (0-11)    Number    0</li>                   <li> h    Hour in am/pm (1-12)    Number    12</li>                   <li> m    Minute in hour    Number    30</li>                   <li> s    Second in minute    Number    55</li>                   <li> S    Millisecond    Number    978</li>                   <li> z    Time zone    General time zone    Pacific Standard Time; PST; GMT-08:00</li>                   <li> Z    Time zone    RFC 822 time zone    -0800 </li>  </ul>\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (date,format,utc){\r\n   utc = utc || false;\r\n   var fullYear, month, day, d, hour, minute, second, millisecond;\r\n   if (utc) {\r\n       fullYear = date.getUTCFullYear(),\r\n           month = date.getUTCMonth(),\r\n           day = date.getUTCDay(),\r\n           d = date.getUTCDate(),\r\n           hour = date.getUTCHours(),\r\n           minute = date.getUTCMinutes(),\r\n           second = date.getUTCSeconds(),\r\n           millisecond = date.getUTCMilliseconds();\r\n   } else {\r\n       fullYear = date.getFullYear(),\r\n           month = date.getMonth(),\r\n           d = date.getDate(),\r\n           day = date.getDay(),\r\n           hour = date.getHours(),\r\n           minute = date.getMinutes(),\r\n           second = date.getSeconds(),\r\n           millisecond = date.getMilliseconds();\r\n   }\r\n   return format.replace(/([a-z])\\1*/ig, function (match, options) {\r\n       var s, pad, h,\r\n           c = match.charAt(0),\r\n           l = match.length;\r\n       switch (c) {\r\n           case 'd':\r\n               s = \"\" + d;\r\n           case 'H':\r\n               !s && (s = \"\" + hour);\r\n           case 'm':\r\n               !s && (s = \"\" + minute);\r\n           case 's':\r\n               !s && (s = \"\" + second);\r\n               pad = true;\r\n               break;\r\n           case 'G':\r\n               s = ((l &lt; 4) ? eraAbbr : eraNames)[fullYear &lt; 0 ? 0 : 1];\r\n               break;\r\n           case 'y':\r\n               s = fullYear;\r\n               if (l > 1) {\r\n                   l == 2 ? s = string.truncate(\"\" + s, 2, true) : pad = true;\r\n               }\r\n               break;\r\n           case 'Q':\r\n           case 'q':\r\n               s = ceil((month + 1) / 3);\r\n               pad = true;\r\n               break;\r\n           case 'M':\r\n               if (l &lt; 3) {\r\n                   s = month + 1;\r\n                   pad = true;\r\n               } else {\r\n                   s = (l == 3 ? monthAbbr : monthNames)[month];\r\n               }\r\n               break;\r\n           case 'w':\r\n               s = getWeekOfYear(date, 0, utc), pad = true;\r\n               break;\r\n           case 'D':\r\n               s = getDayOfYear(date, utc), pad = true;\r\n               break;\r\n           case 'E':\r\n               if (l &lt; 3) {\r\n                   s = day + 1;\r\n                   pad = true;\r\n               } else {\r\n                   s = (l == 3 ? dayAbbr : dayNames)[day];\r\n               }\r\n               break;\r\n           case 'a':\r\n               s = (hour &lt; 12) ? 'AM' : 'PM';\r\n               break;\r\n           case 'h':\r\n               s = (hour % 12) || 12, pad = true;\r\n               break;\r\n           case 'K':\r\n               s = (hour % 12), pad = true;\r\n               break;\r\n           case 'k':\r\n               s = hour || 24, pad = true;\r\n               break;\r\n           case 'S':\r\n               s = round(millisecond * pow(10, l - 3)), pad = true;\r\n               break;\r\n           case 'v':\r\n           case 'z':\r\n               s = comb.date.getTimezoneName(date);\r\n               if (s) {\r\n                   break;\r\n               }\r\n               l = 4;\r\n           // fallthrough... use GMT if tz not available\r\n           case 'Z':\r\n               var offset = date.getTimezoneOffset();\r\n               var tz = [\r\n                   (offset >= 0 ? \"-\" : \"+\"),\r\n                   string.pad(floor(abs(offset) / 60), 2, \"0\"),\r\n                   string.pad(abs(offset) % 60, 2, \"0\")\r\n               ];\r\n               if (l == 4) {\r\n                   tz.splice(0, 0, \"GMT\");\r\n                   tz.splice(3, 0, \":\");\r\n               }\r\n               s = tz.join(\"\");\r\n               break;\r\n   //\t\t\t\tcase 'Y': case 'u': case 'W': case 'F': case 'g': case 'A': case 'e':\r\n   //\t\t\t\t\tconsole.log(match+\" modifier unimplemented\");\r\n           default:\r\n               s = match;\r\n           //  throw new Error(\"comb.date.format: invalid pattern char: \" + match);\r\n       }\r\n       if (pad) {\r\n           s = string.pad(s, l, '0');\r\n       }\r\n       return s;\r\n   });\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_date_getDaysInMonth\"></a>\r\n\r\n###*getDaysInMonth*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nReturns the number of days in the month of a date\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.date.getDaysInMonth(new Date(2006, 1, 1)) => 28\r\n  comb.date.getDaysInMonth(new Date(2004, 1, 1)) => 29\r\n  comb.date.getDaysInMonth(new Date(2006, 2, 1)) => 31\r\n  comb.date.getDaysInMonth(new Date(2006, 3, 1)) => 30\r\n  comb.date.getDaysInMonth(new Date(2006, 4, 1)) => 31\r\n  comb.date.getDaysInMonth(new Date(2006, 5, 1)) => 30\r\n  comb.date.getDaysInMonth(new Date(2006, 6, 1)) => 31\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _dateObject_ `Date` : the date containing the month\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Number` the number of days in the month\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (/*Date*/dateObject){\r\n   //\tsummary:\r\n   //\t\tReturns the number of days in the month used by dateObject\r\n   var month = dateObject.getMonth();\r\n   var days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n   if (month == 1 && date.isLeapYear(dateObject)) {\r\n       return 29;\r\n   } // Number\r\n   return days[month]; // Number\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_date_getTimezoneName\"></a>\r\n\r\n###*getTimezoneName*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nGet the timezone of a date\r\n        \r\n*Example*\r\n\r\n```javascript\r\n//just setting the strLocal to simulate the toString() of a date\r\n  dt.str = 'Sun Sep 17 2006 22:25:51 GMT-0500 (CDT)';\r\n  //just setting the strLocal to simulate the locale\r\n  dt.strLocale = 'Sun 17 Sep 2006 10:25:51 PM CDT';\r\n  comb.date.getTimezoneName(dt) => 'CDT'\r\n  dt.str = 'Sun Sep 17 2006 22:57:18 GMT-0500 (CDT)';\r\n  dt.strLocale = 'Sun Sep 17 22:57:18 2006';\r\n  comb.date.getTimezoneName(dt) => 'CDT'\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _dateObject_  : the date to get the timezone from\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `String` the timezone of the date\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (/*Date*/dateObject){\r\n   var str = dateObject.toString();\r\n   var tz = '';\r\n   var pos = str.indexOf('(');\r\n   if (pos > -1) {\r\n       tz = str.substring(++pos, str.indexOf(')'));\r\n   }\r\n   return tz; // String\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_date_isLeapYear\"></a>\r\n\r\n###*isLeapYear*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nDetermines if a date is a leap year\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.date.isLeapYear(new Date(1600, 0, 1)) => true\r\n  comb.date.isLeapYear(new Date(2004, 0, 1)) => true\r\n  comb.date.isLeapYear(new Date(2000, 0, 1)) => true\r\n  comb.date.isLeapYear(new Date(2006, 0, 1)) => false\r\n  comb.date.isLeapYear(new Date(1900, 0, 1)) => false\r\n  comb.date.isLeapYear(new Date(1800, 0, 1)) => false\r\n  comb.date.isLeapYear(new Date(1700, 0, 1)) => false\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _dateObject_ `Date` : \r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if it is a leap year false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (/*Date*/dateObject,utc){\r\n   var year = dateObject[utc ? \"getUTCFullYear\" : \"getFullYear\"]();\r\n   return !(year % 400) || (!(year % 4) && !!(year % 100)); // Boolean\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_date_isWeekend\"></a>\r\n\r\n###*isWeekend*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nDetermines if a date is on a weekend\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar thursday = new Date(2006, 8, 21);\r\n var saturday = new Date(2006, 8, 23);\r\n var sunday = new Date(2006, 8, 24);\r\n var monday = new Date(2006, 8, 25);\r\n comb.date.isWeekend(thursday)) => false\r\n comb.date.isWeekend(saturday) => true\r\n comb.date.isWeekend(sunday) => true\r\n comb.date.isWeekend(monday)) => false\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _dateObject_ `Date` : the date to test\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if the date is a weekend\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (/*Date?*/dateObject,utc){\r\n   // summary:\r\n   //\tDetermines if the date falls on a weekend, according to local custom.\r\n   var day = (dateObject || new Date())[utc ? \"getUTCDay\" : \"getDay\"]();\r\n   return day == 0 || day == 6;\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_date_parse\"></a>\r\n\r\n###*parse*\r\n\r\n\r\n\r\n---\r\n*Defined base/date.js* [Top](#top)\r\n\r\n\r\nParses a date string into a date object\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar aug_11_2006 = new Date(2006, 7, 11, 0);\r\n  comb.date.parse(\"08/11/06\", \"MM/dd/yy\") => aug_11_2006\r\n  comb.date.parse(\"11Aug2006\", 'ddMMMyyyy') => aug_11_2006\r\n  comb.date.parse(\"Aug2006\", 'MMMyyyy') => new Date(2006, 7, 1)\r\n  comb.date.parse(\"Aug 11, 2006\", \"MMM dd, yyyy\") => aug_11_2006\r\n  comb.date.parse(\"August 11, 2006\", \"MMMM dd, yyyy\") => aug_11_2006\r\n  comb.date.parse(\"Friday, August 11, 2006\", \"EEEE, MMMM dd, yyyy\") => aug_11_2006\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _dateStr_ `String` : The string to parse\r\n        \r\n * _format_ `String` : the format of the date composed of the following options  <ul>                   <li> G    Era designator    Text    AD</li>                   <li> y    Year    Year    1996; 96</li>                   <li> M    Month in year    Month    July; Jul; 07</li>                   <li> w    Week in year    Number    27</li>                   <li> W    Week in month    Number    2</li>                   <li> D    Day in year    Number    189</li>                   <li> d    Day in month    Number    10</li>                   <li> E    Day in week    Text    Tuesday; Tue</li>                   <li> a    Am/pm marker    Text    PM</li>                   <li> H    Hour in day (0-23)    Number    0</li>                   <li> k    Hour in day (1-24)    Number    24</li>                   <li> K    Hour in am/pm (0-11)    Number    0</li>                   <li> h    Hour in am/pm (1-12)    Number    12</li>                   <li> m    Minute in hour    Number    30</li>                   <li> s    Second in minute    Number    55</li>                   <li> S    Millisecond    Number    978</li>                   <li> z    Time zone    General time zone    Pacific Standard Time; PST; GMT-08:00</li>                   <li> Z    Time zone    RFC 822 time zone    -0800 </li>  </ul>\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Date` the parsed date\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (dateStr,format){\r\n   if (!format) throw new Error('format required when calling comb.date.parse');\r\n   var tokens = [], regexp = buildDateEXP(format, tokens),\r\n       re = new RegExp(\"^\" + regexp + \"$\", \"i\"),\r\n       match = re.exec(dateStr);\r\n   if (!match) {\r\n       return null;\r\n   } // null\r\n   var result = [1970, 0, 1, 0, 0, 0, 0], // will get converted to a Date at the end\r\n       amPm = \"\",\r\n       valid = match.every(function (v, i) {\r\n           if (!i) {\r\n               return true;\r\n           }\r\n           var token = tokens[i - 1];\r\n           var l = token.length;\r\n           switch (token.charAt(0)) {\r\n               case 'y':\r\n                   if (v &lt; 100) {\r\n                       v = parseInt(v, 10);\r\n                       //choose century to apply, according to a sliding window\r\n                       //of 80 years before and 20 years after present year\r\n                       var year = '' + new Date().getFullYear(),\r\n                           century = year.substring(0, 2) * 100,\r\n                           cutoff = min(year.substring(2, 4) + 20, 99);\r\n                       result[0] = (v &lt; cutoff) ? century + v : century - 100 + v;\r\n                   } else {\r\n                       result[0] = v;\r\n                   }\r\n                   break;\r\n               case 'M':\r\n                   if (l > 2) {\r\n                       var months = monthNames;\r\n                       if (l === 3) {\r\n                           months = monthAbbr;\r\n                       }\r\n                       //Tolerate abbreviating period in month part\r\n                       //Case-insensitive comparison\r\n                       v = v.replace(\".\", \"\").toLowerCase();\r\n                       months = months.map(function (s) {\r\n                           return s.replace(\".\", \"\").toLowerCase();\r\n                       });\r\n                       if ((v = months.indexOf(v)) == -1) {\r\n                           return false;\r\n                       }\r\n                   } else {\r\n                       v--;\r\n                   }\r\n                   result[1] = v;\r\n                   break;\r\n               case 'E':\r\n               case 'e':\r\n                   var days = dayNames;\r\n                   if (l == 3) {\r\n                       days = dayAbbr;\r\n                   }\r\n                   //Case-insensitive comparison\r\n                   v = v.toLowerCase();\r\n                   days = days.map(function (d) {\r\n                       return d.toLowerCase();\r\n                   });\r\n                   var d = days.indexOf(v);\r\n                   if (d == -1) {\r\n                       v = parseInt(v);\r\n                       if (isNaN(v) || v > days.length) {\r\n                           return false;\r\n                       }\r\n                   } else {\r\n                       v = d;\r\n                   }\r\n                   break;\r\n               case 'D':\r\n                   result[1] = 0;\r\n               case 'd':\r\n                   result[2] = v;\r\n                   break;\r\n               case 'a': //am/pm\r\n                   var am = \"am\";\r\n                   var pm = \"pm\";\r\n                   var period = /\\./g;\r\n                   v = v.replace(period, '').toLowerCase();\r\n                   // we might not have seen the hours field yet, so store the state and apply hour change later\r\n                   amPm = (v == pm) ? 'p' : (v == am) ? 'a' : '';\r\n                   break;\r\n               case 'k': //hour (0-11)\r\n                   if (v == 24) {\r\n                       v = 0;\r\n                   }\r\n               // fallthrough...\r\n               case 'h': //hour (1-12)\r\n               case 'H': //hour (0-23)\r\n               case 'K': //hour (0-11)\r\n                   //in the 12-hour case, adjusting for am/pm requires the 'a' part\r\n                   //which could come before or after the hour, so we will adjust later\r\n                   result[3] = v;\r\n                   break;\r\n               case 'm': //minutes\r\n                   result[4] = v;\r\n                   break;\r\n               case 's': //seconds\r\n                   result[5] = v;\r\n                   break;\r\n               case 'S': //milliseconds\r\n                   result[6] = v;\r\n                   break;\r\n           }\r\n           return true;\r\n       });\r\n   if (valid) {\r\n       var hours = +result[3];\r\n       //account for am/pm\r\n       if (amPm === 'p' && hours &lt; 12) {\r\n           result[3] = hours + 12; //e.g., 3pm -> 15\r\n       } else if (amPm === 'a' && hours == 12) {\r\n           result[3] = 0; //12am -> 0\r\n       }\r\n       var dateObject = new Date(result[0], result[1], result[2], result[3], result[4], result[5], result[6]); // Date\r\n       var dateToken = (tokens.indexOf('d') != -1),\r\n           monthToken = (tokens.indexOf('M') != -1),\r\n           month = result[1],\r\n           day = result[2],\r\n           dateMonth = dateObject.getMonth(),\r\n           dateDay = dateObject.getDate();\r\n       if ((monthToken && dateMonth > month) || (dateToken && dateDay > day)) {\r\n           return null;\r\n       }\r\n       return dateObject; // Date\r\n   } else {\r\n       return null;\r\n   }\r\n       \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_logging\"></a>\r\n##comb.logging\r\n\r\n[Top](#top)\r\n\r\nlogging package\r\n\r\n\r\n\r\n  \r\n\r\n<a name=\"comb_logging_appenders\"></a>\r\n##comb.logging.appenders\r\n\r\n[Top](#top)\r\n\r\nappenders for logging\r\n\r\n\r\n\r\n  \r\n\r\n<a name=\"comb_number\"></a>\r\n##comb.number\r\n\r\n[Top](#top)\r\n\r\nUtilities for numbers\r\n\r\n\r\n  * [round](#comb_number_round)\r\n\r\n  * [roundCeil](#comb_number_roundCeil)\r\n\r\n\r\n  \r\n<a name=\"comb_number_round\"></a>\r\n\r\n###*round*\r\n\r\n\r\n\r\n---\r\n*Defined base/number.js* [Top](#top)\r\n\r\n\r\nRounds a number to the specified places.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _num_ `Number` : the number to round.\r\n        \r\n * _places_ `Number` : the number of places to round to.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (number,places,increment){\r\n   increment = increment || 1e-20;\r\n   var factor = 10 / (10 * (increment || 10));\r\n   return (Math.ceil(factor * +number) / factor).toFixed(places) * 1; // Number\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_number_roundCeil\"></a>\r\n\r\n###*roundCeil*\r\n\r\n\r\n\r\n---\r\n*Defined base/number.js* [Top](#top)\r\n\r\n\r\nRounds a number to the specified places, rounding up.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _num_ `Number` : the number to round.\r\n        \r\n * _places_ `Number` : the number of places to round to.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (number,places){\r\n   return Math.ceil(number * Math.pow(10, places))/Math.pow(10, places);\r\n       \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_plugins\"></a>\r\n##comb.plugins\r\n\r\n[Top](#top)\r\n\r\nplugins for classes using [comb.define](#comb_define)\r\n\r\n\r\n\r\n  \r\n\r\n<a name=\"comb_regexp\"></a>\r\n##comb.regexp\r\n\r\n[Top](#top)\r\n\r\nRegeular expression utilities\r\n\r\n\r\n  * [escapeString](#comb_regexp_escapeString)\r\n\r\n\r\n  \r\n<a name=\"comb_regexp_escapeString\"></a>\r\n\r\n###*escapeString*\r\n\r\n\r\n\r\n---\r\n*Defined base/regexp.js* [Top](#top)\r\n\r\n\r\nEscapes a string\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _str_ `String` : the string to escape\r\n        \r\n * _except?_ `String` : characters to ignore\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `String` the escaped string\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (/*String*/str,/*String?*/except){\r\n   return str.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, function(ch) {\r\n       if (except && except.indexOf(ch) != -1) {\r\n           return ch;\r\n       }\r\n       return \"\\\\\" + ch;\r\n   }); // String\r\n       \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_string\"></a>\r\n##comb.string\r\n\r\n[Top](#top)\r\n\r\nString utilities\r\n\r\n\r\n  * [format](#comb_string_format)\r\n\r\n  * [multiply](#comb_string_multiply)\r\n\r\n  * [pad](#comb_string_pad)\r\n\r\n  * [style](#comb_string_style)\r\n\r\n  * [toArray](#comb_string_toArray)\r\n\r\n  * [truncate](#comb_string_truncate)\r\n\r\n\r\n  \r\n<a name=\"comb_string_format\"></a>\r\n\r\n###*format*\r\n\r\n\r\n\r\n---\r\n*Defined base/string.js* [Top](#top)\r\n\r\n\r\nFormats a string with the specified format\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar format = comb.string.format;\r\n\r\n  format(\"%s, %s\", [\"Hello\", \"World\"]) => \"Hello, World\";\r\n  format(\"%[ 10]s, %[- 10]s\", [\"Hello\", \"World\"])\r\n      => \"     Hello, World     \";\r\n  format(\"%-!10s, %#10s, %10s and %-10s\",\r\n                          \"apple\", \"orange\", \"bananas\", \"watermelons\")\r\n      => \"apple!!!!!, ####orange,    bananas and watermelon\"\r\n  format(\"%+d, %+d, %10d, %-10d, %-+#10d, %10d\",\r\n                          1,-2, 1, 2, 3, 100000000000)\r\n      => \"+1, -2, 0000000001, 2000000000, +3########, 1000000000\"\r\n  format(\"%[h:mm a]D\", [date]) => 7:32 PM - local -\r\n  format(\"%[h:mm a]Z\", [date]) => 12:32 PM - UTC\r\n  //When using object formats they must be in an array otherwise\r\n  //format will try to interpolate the properties into the string.\r\n  format(\"%j\", [{a : \"b\"}])\r\n      => '{\"a\":\"b\"}'\r\n  format(\"%1j, %4j\", [{a : \"b\"}, {a : \"b\"}])\r\n      => '{\\n \"a\": \"b\"\\n},\\n{\\n    \"a\": \"b\"\\n}'\r\n  format(\"{hello}, {world}\", {hello : \"Hello\", world : \"World\")\r\n      => \"Hello, World\";\r\n  format({[-s10]apple}, {[%#10]orange}, {[10]banana} and {[-10]watermelons}\",\r\n                      {\r\n                          apple : \"apple\",\r\n                          orange : \"orange\",\r\n                          banana : \"bananas\",\r\n                          watermelons : \"watermelons\"\r\n        });\r\n      => applesssss, ####orange,    bananas and watermelon\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _str_ `String` : the string to format, if you want to use a spacing character as padding (other than \\\\s) then put your format in brackets.   <ol>       <li>String Formats %[options]s</li>           <ul>               <li>- : left justified</li>               <li>Char : padding character <b>Excludes d,j,s</b></li>               <li>Number : width</li>           </ul>       </li>       <li>Number Formats %[options]d</li>           <ul>               <li>- : left justified</li>               <li>+ : signed number</li>               <li>Char : padding character <b>Excludes d,j,s</b></li>               <li>Number : width</li>           </ul>       </li>       <li>Object Formats %[options]j</li>           <ul>               <li>Number : spacing for object properties.</li>           </ul>       </li>   </ol>\r\n        \r\n * _obj_ `Object|Array|Arguments...` : the parameters to replace in the string                                     if an array is passed then the array is used sequentially                                     if an object is passed then the object keys are used                                     if a variable number of args are passed then they are used like an array\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `String` the formatted string\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (str,obj){\r\n   !date && (date = require(\"./date\"));\r\n   if (obj instanceof Array) {\r\n       var i = 0, len = obj.length;\r\n       //find the matches\r\n       return str.replace(FORMAT_REGEX, function (m, format, type) {\r\n           var replacer, ret;\r\n           if (i &lt; len) {\r\n               replacer = obj[i++];\r\n           } else {\r\n               //we are out of things to replace with so\r\n               //just return the match?\r\n               return m;\r\n           }\r\n           if (m == \"%s\" || m == \"%d\" || m == \"%D\") {\r\n               //fast path!\r\n               ret = replacer;\r\n           } else if (m == \"%Z\") {\r\n               ret = replacer.toUTCString();\r\n           } else if (m == \"%j\") {\r\n               try {\r\n                   ret = JSON.stringify(replacer);\r\n               } catch (e) {\r\n                   throw new Error(\"comb.string.format : Unable to parse json from \", replacer);\r\n               }\r\n           } else {\r\n               format = format.replace(/^\\[|\\]$/g, \"\");\r\n               switch (type) {\r\n                   case \"s\":\r\n                       ret = formatString(replacer, format);\r\n                       break;\r\n                   case \"d\":\r\n                       ret = formatNumber(replacer, format);\r\n                       break;\r\n                   case \"j\":\r\n                       ret = formatObject(replacer, format);\r\n                       break;\r\n                   case \"D\":\r\n                       ret = date.date.format(replacer, format);\r\n                       break;\r\n                   case \"Z\":\r\n                       ret = date.date.format(replacer, format, true);\r\n                       break;\r\n               }\r\n           }\r\n           return ret;\r\n       });\r\n   } else if (typeof obj == \"object\") {\r\n       return str.replace(INTERP_REGEX, function (m, format, value) {\r\n           value = obj[value];\r\n           if (!misc.isUndefined(value)) {\r\n               if (format) {\r\n                   if (comb.isString(value)) {\r\n                       return formatString(value, format);\r\n                   } else if (typeof value == \"number\") {\r\n                       return formatNumber(value, format);\r\n                   } else if (date.isDate(value)) {\r\n                       return date.date.format(value, format);\r\n                   } else if (typeof value == \"object\") {\r\n                       return formatObject(value, format);\r\n                   }\r\n               } else {\r\n                   return \"\" + value;\r\n               }\r\n           }\r\n           return m;\r\n       });\r\n   } else {\r\n       var args = Array.prototype.slice.call(arguments).slice(1);\r\n       return exports.string.format(str, args);\r\n   }\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_string_multiply\"></a>\r\n\r\n###*multiply*\r\n\r\n\r\n\r\n---\r\n*Defined base/string.js* [Top](#top)\r\n\r\n\r\nReturns a string duplicated n times;\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.string.multiply(\"HELLO\", 5) => \"HELLOHELLOHELLOHELLOHELLO\"\r\n\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _str_ `String` : the string to multiply\r\n        \r\n * _times_ `Number` : the number of times to multiply it by\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `String` a string that is the original string multiplied. If times is zero or omitted then the\r\n return will be an empty string.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (str,times){\r\n   var ret = [];\r\n   if (times) {\r\n       for (var i = 0; i &lt; times; i++) {\r\n           ret.push(str);\r\n       }\r\n   }\r\n   return ret.join(\"\");\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_string_pad\"></a>\r\n\r\n###*pad*\r\n\r\n\r\n\r\n---\r\n*Defined base/string.js* [Top](#top)\r\n\r\n\r\nPads a string\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.string.pad(\"STR\", 5, \" \", true) => \"STR  \"\r\n comb.string.pad(\"STR\", 5, \"$\") => \"$$STR\"\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _string_ `String` : the string to pad\r\n        \r\n * _length_ `Number` : the length of the string when padded\r\n        \r\n * _[ch= &quot; &quot;]_ `String` : character to pad the string with\r\n        \r\n * _[end=false]_ `Boolean` : if true then the padding is added to the end\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `String` the padded string\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (string,length,ch,end){\r\n   string = \"\" + string; //check for numbers\r\n   ch = ch || \" \";\r\n   var strLen = string.length;\r\n   while (strLen &lt; length) {\r\n       if (end) {\r\n           string += ch;\r\n       } else {\r\n           string = ch + string;\r\n       }\r\n       strLen++;\r\n   }\r\n   return string;\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_string_style\"></a>\r\n\r\n###*style*\r\n\r\n\r\n\r\n---\r\n*Defined base/string.js* [Top](#top)\r\n\r\n\r\nStyles a string according to the specified styles.\r\n        \r\n*Example*\r\n\r\n```javascript\r\n//style a string red\r\n comb.string.style('myStr', 'red');\r\n //style a string red and bold\r\n comb.string.style('myStr', ['red', bold]);\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _str_ `String` : The string to style.\r\n        \r\n * _styles_ `String|Array` : the style or styles to apply to a string.           options include :           <ul>              <li>bold</li>              <li>bright</li>              <li>italic</li>              <li>underline</li>              <li>inverse</li>              <li>crossedOut</li>              <li>blink</li>              <li>red</li>              <li>green</li>              <li>yellow</li>              <li>blue</li>              <li>magenta</li>              <li>cyan</li>              <li>white</li>              <li>redBackground</li>              <li>greenBackground</li>              <li>yellowBackground</li>              <li>blueBackground</li>              <li>magentaBackground</li>              <li>cyanBackground</li>              <li>whiteBackground</li>              <li>grey</li>              <li>black</li>            </ul>\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (str,options){\r\n   var ret = str;\r\n   if (options) {\r\n       if (ret instanceof Array) {\r\n           ret = ret.map(function (s) {\r\n               return comb.string.style(s, options);\r\n           })\r\n       } else if (options instanceof Array) {\r\n           options.forEach(function (option) {\r\n               ret = comb.string.style(ret, option);\r\n           });\r\n       } else if (options in styles) {\r\n           ret = '\\x1B[' + styles[options] + 'm' + str + '\\x1B[0m';\r\n       }\r\n   }\r\n   return ret;\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_string_toArray\"></a>\r\n\r\n###*toArray*\r\n\r\n\r\n\r\n---\r\n*Defined base/string.js* [Top](#top)\r\n\r\n\r\nConverts a string to an array\r\n        \r\n*Example*\r\n\r\n```javascript\r\ncomb.string.toArray(\"a|b|c|d\", \"|\") => [\"a\",\"b\",\"c\",\"d\"]\r\n comb.string.toArray(\"a\", \"|\") => [\"a\"]\r\n comb.string.toArray(\"\", \"|\") => []\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _str_ `String` : the string to parse\r\n        \r\n * _delimeter_ `String` : the delimeter to use\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (testStr,delim){\r\n   var ret = [];\r\n   if (testStr) {\r\n       if (testStr.indexOf(delim) > 0) return testStr.replace(/\\s+/g, \"\").split(delim);\r\n       else return [testStr];\r\n   }\r\n   return ret;\r\n       \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_string_truncate\"></a>\r\n\r\n###*truncate*\r\n\r\n\r\n\r\n---\r\n*Defined base/string.js* [Top](#top)\r\n\r\n\r\nTruncates a string to the specified length.\r\n        \r\n*Example*\r\n\r\n```javascript\r\n//from the beginning\r\n comb.string.truncate(\"abcdefg\", 3) => \"abc\";\r\n //from the end\r\n comb.string.truncate(\"abcdefg\", 3,true) => \"efg\"\r\n //omit the length\r\n comb.string.truncate(\"abcdefg\") => \"abcdefg\"\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _string_ `String` : the string to truncate\r\n        \r\n * _[length = -1]_ `Number` : the max length of the string, if the string is\r\n                              shorter than the length then the string is returned.\r\n        \r\n * _[end=false]_ `Boolean` : truncate starting at the end of the string\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `String` the truncated string.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (string,length,end){\r\n   var ret = string;\r\n   if (comb.isString(ret)) {\r\n       if (string.length > length) {\r\n           if (end) {\r\n               var l = string.length;\r\n               ret = string.substring(l - length, l);\r\n           } else {\r\n               ret = string.substring(0, length);\r\n           }\r\n       }\r\n   } else {\r\n       ret = comb.string.truncate(\"\" + ret, length);\r\n   }\r\n   return ret;\r\n       \r\n}\r\n```\r\n\r\n  \r\n\r\n\r\n\r\n<a name=\"comb_Promise\"></a>\r\n##comb.Promise\r\n\r\n[Top](#top)\r\n\r\nPromise object used for handling a thread\r\n\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar myFunc = function(){\r\n              var promise = new Promise();\r\n              //callback the promise after 10 Secs\r\n              setTimeout(hitch(promise, \"callback\"), 10000);\r\n              return promise;\r\n          }\r\n          var myFunc2 = function(){\r\n              var promises =[];\r\n              for(var i = 0; i < 10; i++){\r\n                  promises.push(myFunc);\r\n              }\r\n              //create a new promise list with all 10 promises\r\n              return new PromiseList(promises);\r\n          }\r\n\r\n          myFunc.then(do something...)\r\n          myFunc.addCallback(do something...)\r\n          myFunc.chain(myfunc).then(do something...)\r\n          myFunc.chain(myfunc).addCallback(do something...)\r\n\r\n          myFunc2.then(do something...)\r\n          myFunc2.addCallback(do something...)\r\n          myFunc2.chain(myfunc).then(do something...)\r\n          myFunc2.chain(myfunc).addCallback(do something...)\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [addCallback](#comb_Promise_prototype_addCallback)\r\n\r\n  * [addErrback](#comb_Promise_prototype_addErrback)\r\n\r\n  * [both](#comb_Promise_prototype_both)\r\n\r\n  * [callback](#comb_Promise_prototype_callback)\r\n\r\n  * [chain](#comb_Promise_prototype_chain)\r\n\r\n  * [chainBoth](#comb_Promise_prototype_chainBoth)\r\n\r\n  * [classic](#comb_Promise_prototype_classic)\r\n\r\n  * [errback](#comb_Promise_prototype_errback)\r\n\r\n  * [then](#comb_Promise_prototype_then)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined promise.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   this.__errorCbs = [];\r\n   this.__cbs = [];\r\n           \r\n}\r\n```\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_Promise_prototype_addCallback\"></a>\r\n###addCallback\r\n\r\n---\r\n*Defined promise.js* [Top](#top)\r\n\r\nAdd a callback to the callback chain of the promise\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _cb_ `Function|comb.Promise` : the function or promise to callback when the promise is resolved.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `comb.Promise` this promise for chaining\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (cb){\r\n   if (cb) {\r\n       if (exports.isPromiseLike(cb)) {\r\n           cb = hitch(cb, \"callback\");\r\n       }\r\n       if (this.__fired && this.__results) {\r\n           cb.apply(this, this.__results);\r\n       } else {\r\n           this.__cbs.push(cb);\r\n       }\r\n   }\r\n   return this;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_Promise_prototype_addErrback\"></a>\r\n###addErrback\r\n\r\n---\r\n*Defined promise.js* [Top](#top)\r\n\r\nAdd a callback to the errback chain of the promise\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _cb_ `Function|comb.Promise` : the function or promise to callback when the promise errors\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `comb.Promise` this promise for chaining\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (cb){\r\n   if (cb) {\r\n       if (exports.isPromiseLike(cb)) {\r\n           cb = hitch(cb, \"errback\");\r\n       }\r\n       if (this.__fired && this.__error) {\r\n           cb.apply(this, this.__error);\r\n       } else {\r\n           this.__errorCbs.push(cb);\r\n       }\r\n   }\r\n   return this;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_Promise_prototype_both\"></a>\r\n###both\r\n\r\n---\r\n*Defined promise.js* [Top](#top)\r\n\r\nAdds a callback or promise to be resolved for both success\r\n and error.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _cb_ `Function|comb.Promise` : callback or promise to be resolved for both success  and error.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `comb.Promise` this promise for chaining\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (cb){\r\n   this.addCallback(cb);\r\n   if (exports.isPromiseLike(cb)) {\r\n       this.addErrback(hitch(cb, \"callback\"));\r\n   } else {\r\n       this.addErrback(cb);\r\n   }\r\n   return this;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_Promise_prototype_callback\"></a>\r\n###callback\r\n\r\n---\r\n*Defined promise.js* [Top](#top)\r\n\r\nWhen called all functions registered as callbacks are called with the passed in results.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _args_ `*` : variable number of results to pass back to listeners of the promise\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (args){\r\n   args = base.argsToArray(arguments);\r\n   if (this.__fired) {\r\n       throw new Error(\"Already fired!\");\r\n   }\r\n   this.__results = args;\r\n   this.__resolve();\r\n   return this;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_Promise_prototype_chain\"></a>\r\n###chain\r\n\r\n---\r\n*Defined promise.js* [Top](#top)\r\n\r\nCall to chaining of promises\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _callback_  : method to call that returns a promise to call after this one completes.\r\n        \r\n * _errback_  : method to call if this promise errors.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `comb.Promise` A new that wraps the promise for chaining\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (callback,errback){\r\n   var promise = new Promise();\r\n   this.addCallback(function (results) {\r\n       callback.call(this, results).then(promise);\r\n   });\r\n   this.addErrback(errback);\r\n   return promise;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_Promise_prototype_chainBoth\"></a>\r\n###chainBoth\r\n\r\n---\r\n*Defined promise.js* [Top](#top)\r\n\r\nApplies the same function that returns a promise to both the callback and errback.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _callback_ `Function` : function to call. This function must return a Promise\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `comb.Promise` a promise to continue chaining or to resolve with.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (callback){\r\n   var p = this.chain(callback);\r\n   this.addErrback(function (results) {\r\n       callback.call(this, results).then(p);\r\n   });\r\n   return p;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_Promise_prototype_classic\"></a>\r\n###classic\r\n\r\n---\r\n*Defined promise.js* [Top](#top)\r\n\r\nCall this function as a classic node callback where the first argument\r\n will be an error, or null if no error occured. The other arugments will\r\n be the result from the promise.\r\n        \r\n*Example*\r\n\r\n```javascript\r\npromise.classic(function(err, res){\r\n      if(err){\r\n          console.log(err);\r\n      }else{\r\n          console.log(res);\r\n      }\r\n });\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _cb_  : callback where the first argument  will be an error, or null if no error occured. The other arugments will  be the result from the promise.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `comb.Promise` the promise to chain\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (cb){\r\n   if (\"function\" === typeof cb) {\r\n       this.addErrback(function (err) {\r\n           cb(err);\r\n       });\r\n       this.addCallback(function () {\r\n           cb.apply(this, [null].concat(base.argsToArray(arguments)));\r\n       });\r\n   }\r\n   return this;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_Promise_prototype_errback\"></a>\r\n###errback\r\n\r\n---\r\n*Defined promise.js* [Top](#top)\r\n\r\nWhen called all functions registered as errbacks are called with the passed in error(s)\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _args_ `*` : number of errors to pass back to listeners of the promise\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (args){\r\n   if (this.__fired) {\r\n       throw args || new Error(\"Already fired\");\r\n   }\r\n   this.__error = base.argsToArray(arguments);\r\n   this.__resolve();\r\n   return this;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_Promise_prototype_then\"></a>\r\n###then\r\n\r\n---\r\n*Defined promise.js* [Top](#top)\r\n\r\nCall to specify action to take after promise completes or errors\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _[callback=null]_ `Function` : function to call after the promise completes successfully\r\n        \r\n * _[errback=null]_ `Function` : function to call if the promise errors\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `comb.Promise` this promise for chaining\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (callback,errback){\r\n   if (exports.isPromiseLike(callback)) {\r\n       this.addCallback(callback);\r\n       this.addErrback(callback);\r\n   } else {\r\n       this.addCallback(callback);\r\n       this.addErrback(errback);\r\n   }\r\n   return this;\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_PromiseList\"></a>\r\n##comb.PromiseList\r\n\r\n[Top](#top)\r\n\r\nPromiseList object used for handling a list of Promises\r\n\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar myFunc = function(){\r\n              var promise = new Promise();\r\n              //callback the promise after 10 Secs\r\n              setTimeout(hitch(promise, \"callback\"), 10000);\r\n              return promise;\r\n          }\r\n          var myFunc2 = function(){\r\n              var promises =[];\r\n              for(var i = 0; i < 10; i++){\r\n                  promises.push(myFunc);\r\n              }\r\n              //create a new promise list with all 10 promises\r\n              return new PromiseList(promises);\r\n          }\r\n          var pl = new comb.PromiseList([myFunc(), myFunc2()]);\r\n          pl.then(do something...)\r\n          pl.addCallback(do something...)\r\n          pl.chain(myfunc).then(do something...)\r\n          pl.chain(myfunc).addCallback(do something...)\r\n\r\n\r\n```\r\n\r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.Promise](#comb_Promise)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n###Constructor\r\n\r\n*Defined promise.js* [Top](#top)\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _[defs=[]]_ `comb.Promise[]` : the list of promises\r\n        \r\n     \r\n\r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (defs,normalizeResults){\r\n   this.__errors = [];\r\n   this.__results = [];\r\n   this.normalizeResults = base.isBoolean(normalizeResults) ? normalizeResults : false;\r\n   this._super(arguments);\r\n   if (defs && defs.length) {\r\n       this.__defLength = defs.length;\r\n       defs.forEach(this.__addPromise, this);\r\n   } else {\r\n       this.__resolve();\r\n   }\r\n           \r\n}\r\n```\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n<a name=\"comb_collections_AVLTree\"></a>\r\n##comb.collections.AVLTree\r\n\r\n[Top](#top)\r\n\r\n<p><p>An AVL tree is a self-balancing binary search tree.\r\n    In an AVL tree, the heights of the two child subtrees of any node differ by at most one.\r\n    Lookup, insertion, and deletion all take O(log n) time in both the average and worst cases,\r\n    where n is the number of nodes in the tree prior to the operation.\r\n    Insertions and deletions may require the tree to be rebalanced by one or more tree rotations.</p>\r\n <p>AVL trees are more rigidly balanced than red-black trees, leading to slower insertion and removal but faster retrieval</p>\r\n\r\n <b>Performance</b>\r\n <table>\r\n     <tr><td></td><td>Best</td><td>Worst</td></tr>\r\n     <tr><td>Space</td><td>O(n)</td><td>O(n)</td></tr>\r\n     <tr><td>Search</td><td>O(log n)</td><td>O(log n)</td></tr>\r\n     <tr><td>Insert</td><td>O(log n)</td><td>O(log n)</td></tr>\r\n     <tr><td>Delete</td><td>O(log n)</td><td>O(log n)</td></tr>\r\n <table></p>\r\n\r\n        \r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.collections.Tree](#comb_collections_Tree)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [insert](#comb_collections_AVLTree_prototype_insert)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined collections/AVLTree.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_collections_AVLTree_prototype_insert\"></a>\r\n###insert\r\n\r\n---\r\n*Defined collections/AVLTree.js* [Top](#top)\r\n\r\n\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _data_  : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (data){\r\n   var done = {done : false};\r\n   this.__root = insert(this.__root, data, done, this.compare);\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_collections_AnderssonTree\"></a>\r\n##comb.collections.AnderssonTree\r\n\r\n[Top](#top)\r\n\r\n<p><p>Andersson Trees are a version of a balanced Binary tree, while similar to RedBlack Trees the balancing is not as strict.</p>\r\n\r\n <b>Performance</b>\r\n <table>\r\n     <tr><td></td><td>Best</td><td>Worst</td></tr>\r\n     <tr><td>space</td><td>O(n)</td><td>O(n)</td></tr>\r\n     <tr><td>Search</td><td>O(log n)</td><td>O(log n)</td></tr>\r\n     <tr><td>Insert</td><td>O(log n)</td><td>O(log n)</td></tr>\r\n     <tr><td>Delete</td><td>O(log n)</td><td>O(log n)</td></tr>\r\n <table> </p>\r\n\r\n        \r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.collections.Tree](#comb_collections_Tree)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [isEmpty](#comb_collections_AnderssonTree_prototype_isEmpty)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined collections/AnderssonTree.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_collections_AnderssonTree_prototype_isEmpty\"></a>\r\n###isEmpty\r\n\r\n---\r\n*Defined collections/AnderssonTree.js* [Top](#top)\r\n\r\n\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   return this.__root == nil || this._super(arguments);\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_collections_BinaryTree\"></a>\r\n##comb.collections.BinaryTree\r\n\r\n[Top](#top)\r\n\r\n<p><p>A Search tree that maintains the following properties</p>\r\n <ul>\r\n     <li>The left subtree of a node contains only nodes with keys less than the node's key.\r\n     <li>The right subtree of a node contains only nodes with keys greater than the node's key.\r\n     <li>Both the left and right subtrees must also be binary search trees.\r\n </ul>\r\n\r\n <b>Performance</b>\r\n <table>\r\n     <tr><td></td><td>Best</td><td>Worst</td></tr>\r\n     <tr><td>Space</td><td>O(n)</td><td>O(n)</td></tr>\r\n     <tr><td>Search</td><td>O(log n)</td><td>O(n)</td></tr>\r\n     <tr><td>Insert</td><td>O(log n)</td><td>O(n)</td></tr>\r\n     <tr><td>Delete</td><td>O(log n)</td><td>O(n)</td></tr>\r\n <table>\r\n     </p>\r\n\r\n        \r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.collections.Tree](#comb_collections_Tree)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [insert](#comb_collections_BinaryTree_prototype_insert)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined collections/BinaryTree.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_collections_BinaryTree_prototype_insert\"></a>\r\n###insert\r\n\r\n---\r\n*Defined collections/BinaryTree.js* [Top](#top)\r\n\r\n\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _data_  : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (data){\r\n   if (this.__root == null) {\r\n       return (this.__root = {\r\n           data : data,\r\n           parent : null,\r\n           left : null,\r\n           right : null\r\n       });\r\n   }\r\n   var compare = this.compare;\r\n   var root = this.__root;\r\n   while (root != null) {\r\n       var cmp = compare(data, root.data);\r\n       if (cmp) {\r\n           var leaf = (cmp == -1) ? \"left\" : \"right\";\r\n           var next = root[leaf];\r\n           if (next == null) {\r\n               return (root[leaf] = {data : data, parent : root, left : null, right : null});\r\n           } else {\r\n               root = next;\r\n           }\r\n       } else {\r\n           return;\r\n       }\r\n   }\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_collections_Collection\"></a>\r\n##comb.collections.Collection\r\n\r\n[Top](#top)\r\n\r\nBase class for all collections\r\n\r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [concat](#comb_collections_Collection_prototype_concat)\r\n\r\n  * [indexOf](#comb_collections_Collection_prototype_indexOf)\r\n\r\n  * [join](#comb_collections_Collection_prototype_join)\r\n\r\n  * [lastIndexOf](#comb_collections_Collection_prototype_lastIndexOf)\r\n\r\n  * [slice](#comb_collections_Collection_prototype_slice)\r\n\r\n  * [toString](#comb_collections_Collection_prototype_toString)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined collections/Collection.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_collections_Collection_prototype_concat\"></a>\r\n###concat\r\n\r\n---\r\n*Defined collections/Collection.js* [Top](#top)\r\n\r\nConcats two collections\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   throw new Error(\"Not Implemented\");\r\n   \t\t\t\t\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Collection_prototype_indexOf\"></a>\r\n###indexOf\r\n\r\n---\r\n*Defined collections/Collection.js* [Top](#top)\r\n\r\nFind the index of an item in a collection\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   throw new Error(\"Not Implemented\");\r\n   \t\t\t\t\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Collection_prototype_join\"></a>\r\n###join\r\n\r\n---\r\n*Defined collections/Collection.js* [Top](#top)\r\n\r\nJoins two collections\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   throw new Error(\"Not Implemented\");\r\n   \t\t\t\t\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Collection_prototype_lastIndexOf\"></a>\r\n###lastIndexOf\r\n\r\n---\r\n*Defined collections/Collection.js* [Top](#top)\r\n\r\nFind the last index of an item in a collection\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   throw new Error(\"Not Implemented\");\r\n   \t\t\t\t\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Collection_prototype_slice\"></a>\r\n###slice\r\n\r\n---\r\n*Defined collections/Collection.js* [Top](#top)\r\n\r\nSlice a portion from a collection\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   throw new Error(\"Not Implemented\");\r\n   \t\t\t\t\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Collection_prototype_toString\"></a>\r\n###toString\r\n\r\n---\r\n*Defined collections/Collection.js* [Top](#top)\r\n\r\nConvert a collection to a string\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   throw new Error(\"Not Implemented\");\r\n   \t\t\t\t\r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_collections_HashTable\"></a>\r\n##comb.collections.HashTable\r\n\r\n[Top](#top)\r\n\r\n<p>Implementation of a HashTable for javascript.\r\n    This HashTable implementation allows one to use anything as a key.\r\n    </p>\r\n <b>NOTE: THIS IS ~ 3 times slower than javascript native objects</b>\r\n\r\n <p> A use case for this collection is when one needs to store items in which the key will not be a string, or number</p>\r\n\r\n        \r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.collections.Collection](#comb_collections_Collection)\r\n\r\n\r\n\r\n\r\n\r\n*Instance Properties*\r\n<table><tr><td>Property</td><td>Default Value</td><td>Description</td></tr><tr><td>entrySet</td><td></td><td>an array of objects. Each object contains a key, and value property.</td><tr><tr><td>keys</td><td></td><td>all keys contained in the table</td><tr><tr><td>values</td><td></td><td>all values contained in the table</td><tr></table>\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [clear](#comb_collections_HashTable_prototype_clear)\r\n\r\n  * [concat](#comb_collections_HashTable_prototype_concat)\r\n\r\n  * [contains](#comb_collections_HashTable_prototype_contains)\r\n\r\n  * [every](#comb_collections_HashTable_prototype_every)\r\n\r\n  * [filter](#comb_collections_HashTable_prototype_filter)\r\n\r\n  * [forEach](#comb_collections_HashTable_prototype_forEach)\r\n\r\n  * [get](#comb_collections_HashTable_prototype_get)\r\n\r\n  * [map](#comb_collections_HashTable_prototype_map)\r\n\r\n  * [put](#comb_collections_HashTable_prototype_put)\r\n\r\n  * [reduce](#comb_collections_HashTable_prototype_reduce)\r\n\r\n  * [reduceRight](#comb_collections_HashTable_prototype_reduceRight)\r\n\r\n  * [remove](#comb_collections_HashTable_prototype_remove)\r\n\r\n  * [set](#comb_collections_HashTable_prototype_set)\r\n\r\n  * [some](#comb_collections_HashTable_prototype_some)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined collections/HashTable.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   this.__map = {};\r\n           \r\n}\r\n```\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_collections_HashTable_prototype_clear\"></a>\r\n###clear\r\n\r\n---\r\n*Defined collections/HashTable.js* [Top](#top)\r\n\r\nClears out all items from the table.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   this.__map = {};\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_HashTable_prototype_concat\"></a>\r\n###concat\r\n\r\n---\r\n*Defined collections/HashTable.js* [Top](#top)\r\n\r\nReturns a new HashTable containing the values of this HashTable, and the other table.\r\n </br>\r\n <b> DOES NOT CHANGE THE ORIGINAL!</b>\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _hashTable_ `comb.collections.HashTable` : the hash table to concat with this.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `comb.collections.HashTable` a new HashTable containing all values from both tables.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (hashTable){\r\n   if (hashTable instanceof HashTable) {\r\n       var ret = new HashTable();\r\n       var otherEntrySet = hashTable.entrySet.concat(this.entrySet);\r\n       for (var i = otherEntrySet.length - 1; i >= 0; i--) {\r\n           var e = otherEntrySet[i];\r\n           ret.put(e.key, e.value);\r\n       }\r\n       return ret;\r\n   } else {\r\n       throw new TypeError(\"When joining hashtables the joining arg must be a HashTable\");\r\n   }\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_HashTable_prototype_contains\"></a>\r\n###contains\r\n\r\n---\r\n*Defined collections/HashTable.js* [Top](#top)\r\n\r\nTests if the table contains a particular key\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _key_  : the key to test\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if it exitsts false otherwise.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (key){\r\n   var hash = hashFunction(key), ret = false;\r\n   var bucket = null;\r\n   if ((bucket = this.__map[hash]) != null) {\r\n       ret = bucket.find(key) != null;\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_HashTable_prototype_every\"></a>\r\n###every\r\n\r\n---\r\n*Defined collections/HashTable.js* [Top](#top)\r\n\r\nDetermines if every item meets the condition returned by the callback.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _cb_ `Function` : Function to callback with each item, the first aruguments is an object containing a key and value field\r\n        \r\n * _[scope=this]_ `Object` : scope to call the function in\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` True if every item passed false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   var es = this.__entrySet();\r\n   return es.every.apply(es, arguments);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_HashTable_prototype_filter\"></a>\r\n###filter\r\n\r\n---\r\n*Defined collections/HashTable.js* [Top](#top)\r\n\r\nCreates a new HashTable containg values that passed the filtering function.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _cb_ `Function` : Function to callback with each item, the first aruguments is an object containing a key and value field\r\n        \r\n * _scope_ `Object` : the scope to call the function.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `comb.collections.HashTable` the HashTable containing the values that passed the filter.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (cb,scope){\r\n   var es = this.__entrySet(), ret = new HashTable();\r\n   es = es.filter.apply(es, arguments);\r\n   for (var i = es.length - 1; i >= 0; i--) {\r\n       var e = es[i];\r\n       ret.put(e.key, e.value);\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_HashTable_prototype_forEach\"></a>\r\n###forEach\r\n\r\n---\r\n*Defined collections/HashTable.js* [Top](#top)\r\n\r\nLoop through each value in the hashtable\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _cb_ `Function` : the function to call with an object containing a key and value field\r\n        \r\n * _scope_ `Object` : the scope to call the funciton in\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (cb,scope){\r\n   var es = this.__entrySet(), l = es.length, f = cb.bind(scope || this);\r\n   es.forEach.apply(es, arguments);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_HashTable_prototype_get\"></a>\r\n###get\r\n\r\n---\r\n*Defined collections/HashTable.js* [Top](#top)\r\n\r\nGet the value corresponding to the key.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _key_  : the key used to look up the value\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n *  null if not found, or the value.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (key){\r\n   var hash = hashFunction(key), ret = null;\r\n   var bucket = null;\r\n   if ((bucket = this.__map[hash]) != null) {\r\n       ret = bucket.find(key);\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_HashTable_prototype_map\"></a>\r\n###map\r\n\r\n---\r\n*Defined collections/HashTable.js* [Top](#top)\r\n\r\nLoop through each value in the hashtable, collecting the value returned by the callback function.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _cb_ `Function` : Function to callback with each item, the first aruguments is an object containing a key and value field\r\n        \r\n * _[scope=this]_ `Object` : scope to call the function in\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Array` an array containing the mapped values.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   var es = this.__entrySet(), ret = new HashTable();\r\n   return es.map.apply(es, arguments);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_HashTable_prototype_put\"></a>\r\n###put\r\n\r\n---\r\n*Defined collections/HashTable.js* [Top](#top)\r\n\r\nPut a key, value pair into the table\r\n\r\n <b>NOTE :</b> the collection will not check if the key previously existed.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _key_ `Anything` : the key to look up the object.\r\n        \r\n * _value_ `Anything` : the value that corresponds to the key.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n *  the value\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (key,value){\r\n   var hash = hashFunction(key);\r\n   var bucket = null;\r\n   if ((bucket = this.__map[hash]) == null) {\r\n       bucket = (this.__map[hash] = new Bucket());\r\n   }\r\n   bucket.pushValue(key, value);\r\n   return value;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_HashTable_prototype_reduce\"></a>\r\n###reduce\r\n\r\n---\r\n*Defined collections/HashTable.js* [Top](#top)\r\n\r\nApply a function against an accumulator and each value of the array (from left-to-right) as to reduce it to a single value.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _callback_ `Function` : Function to execute on each value in the array.\r\n        \r\n * _initialValue_  : Value to use as the first argument to the first call of the callback..\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   var es = this.__entrySet();\r\n   return es.reduce.apply(es, arguments);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_HashTable_prototype_reduceRight\"></a>\r\n###reduceRight\r\n\r\n---\r\n*Defined collections/HashTable.js* [Top](#top)\r\n\r\nApply a function against an accumulator and each value of the array (from right-to-left) as to reduce it to a single value.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _callback_ `Function` : Function to execute on each value in the array.\r\n        \r\n * _initialValue_  : Value to use as the first argument to the first call of the callback..\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   var es = this.__entrySet();\r\n   return es.reduceRight.apply(es, arguments);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_HashTable_prototype_remove\"></a>\r\n###remove\r\n\r\n---\r\n*Defined collections/HashTable.js* [Top](#top)\r\n\r\nRemove a key value pair from the table.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _key_  : the key of the key value pair to remove.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n *  the removed value.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (key){\r\n   var hash = hashFunction(key), ret = null;\r\n   var bucket = this.__map[hash];\r\n   if (bucket) {\r\n       ret = bucket.remove(key);\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_HashTable_prototype_set\"></a>\r\n###set\r\n\r\n---\r\n*Defined collections/HashTable.js* [Top](#top)\r\n\r\nSet the value of a previously existing key,value pair or create a new entry.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _key_  : the key to be be used\r\n        \r\n * _value_  : the value to be set\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n *  the value.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (key,value){\r\n   var hash = hashFunction(key), ret = null, bucket = null, map = this.__map;\r\n   if ((bucket = map[hash]) != null) {\r\n       ret = bucket.set(key, value);\r\n   } else {\r\n       ret = (map[hash] = new Bucket()).pushValue(key, value);\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_HashTable_prototype_some\"></a>\r\n###some\r\n\r\n---\r\n*Defined collections/HashTable.js* [Top](#top)\r\n\r\nDetermines if some items meet the condition returned by the callback.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _cb_ `Function` : Function to callback with each item, the first aruguments is an object containing a key and value field\r\n        \r\n * _[scope=this]_ `Object` : scope to call the function in\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` True if some items passed false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   var es = this.__entrySet();\r\n   return es.some.apply(es, arguments);\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_collections_Heap\"></a>\r\n##comb.collections.Heap\r\n\r\n[Top](#top)\r\n\r\nBase class for Heap Implementations.\r\n\r\n        \r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.collections.Collection](#comb_collections_Collection)\r\n\r\n\r\n\r\n\r\n\r\n*Instance Properties*\r\n<table><tr><td>Property</td><td>Default Value</td><td>Description</td></tr><tr><td>count</td><td></td><td>the current number of elements.</td><tr><tr><td>isEmpty</td><td></td><td>true if the Heap is empty.</td><tr><tr><td>keys</td><td></td><td>the keys of all items in the heap.</td><tr><tr><td>values</td><td></td><td>the values contained in the heap.</td><tr></table>\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [clear](#comb_collections_Heap_prototype_clear)\r\n\r\n  * [containsKey](#comb_collections_Heap_prototype_containsKey)\r\n\r\n  * [containsValue](#comb_collections_Heap_prototype_containsValue)\r\n\r\n  * [insert](#comb_collections_Heap_prototype_insert)\r\n\r\n  * [peek](#comb_collections_Heap_prototype_peek)\r\n\r\n  * [peekKey](#comb_collections_Heap_prototype_peekKey)\r\n\r\n  * [print](#comb_collections_Heap_prototype_print)\r\n\r\n  * [remove](#comb_collections_Heap_prototype_remove)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined collections/Heap.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   this.__heap = [];\r\n           \r\n}\r\n```\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_collections_Heap_prototype_clear\"></a>\r\n###clear\r\n\r\n---\r\n*Defined collections/Heap.js* [Top](#top)\r\n\r\nEmpty the heap.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   this.__heap.length = 0;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Heap_prototype_containsKey\"></a>\r\n###containsKey\r\n\r\n---\r\n*Defined collections/Heap.js* [Top](#top)\r\n\r\nDetermine if the heap contains a particular key.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _key_  : key to test.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if the key is contained in this heap.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (key){\r\n   var heap = this.__heap;\r\n   for (var i = heap.length - 1; i >= 0; i--) {\r\n       if (heap[i].key == key) {\r\n           return true;\r\n       }\r\n   }\r\n   return false;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Heap_prototype_containsValue\"></a>\r\n###containsValue\r\n\r\n---\r\n*Defined collections/Heap.js* [Top](#top)\r\n\r\nDetermine if the heap contains a particular value.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _value_  : value to test.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if the value is contained in this heap.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (value){\r\n   var heap = this.__heap;\r\n   for (var i = heap.length - 1; i >= 0; i--) {\r\n       if (heap[i].value == value) {\r\n           return true;\r\n       }\r\n   }\r\n   return false;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Heap_prototype_insert\"></a>\r\n###insert\r\n\r\n---\r\n*Defined collections/Heap.js* [Top](#top)\r\n\r\nInsert a key value into the key\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _key_  : \r\n        \r\n * _value_  : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (key,value){\r\n   if (!base.isString(key)) {\r\n       var l = this.__heap.push(this.__makeNode(key, value));\r\n       this.__upHeap(l - 1);\r\n   } else {\r\n       throw TypeError(\"Invalid key\");\r\n   }\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Heap_prototype_peek\"></a>\r\n###peek\r\n\r\n---\r\n*Defined collections/Heap.js* [Top](#top)\r\n\r\nGets he value of the root node with out removing it.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n *  the value of the root\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   var ret = undefined, heap = this.__heap, l = heap.length;\r\n   if (l) {\r\n       ret = heap[0];\r\n   }\r\n   return ret ? ret.value : ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Heap_prototype_peekKey\"></a>\r\n###peekKey\r\n\r\n---\r\n*Defined collections/Heap.js* [Top](#top)\r\n\r\nGets the key of the root node without removing it.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n *  the key of the root\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   var ret = undefined, heap = this.__heap, l = heap.length;\r\n   if (l) {\r\n       ret = heap[0];\r\n   }\r\n   return ret ? ret.key : ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Heap_prototype_print\"></a>\r\n###print\r\n\r\n---\r\n*Defined collections/Heap.js* [Top](#top)\r\n\r\nPrint the heap.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   this.__printNode(0, 0);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Heap_prototype_remove\"></a>\r\n###remove\r\n\r\n---\r\n*Defined collections/Heap.js* [Top](#top)\r\n\r\nRemoves the root from the heap\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n *  the value of the root\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   var ret = undefined, heap = this.__heap, l = heap.length;\r\n   if (l) {\r\n       ret = heap[0];\r\n       if (l == 1) {\r\n           heap.length = 0;\r\n       } else {\r\n           heap[0] = heap.pop();\r\n           this.__downHeap(0);\r\n       }\r\n   }\r\n   return ret ? ret.value : ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_collections_Iterable\"></a>\r\n##comb.collections.Iterable\r\n\r\n[Top](#top)\r\n\r\nBase class for all collections\r\n\r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [every](#comb_collections_Iterable_prototype_every)\r\n\r\n  * [filter](#comb_collections_Iterable_prototype_filter)\r\n\r\n  * [forEach](#comb_collections_Iterable_prototype_forEach)\r\n\r\n  * [map](#comb_collections_Iterable_prototype_map)\r\n\r\n  * [reduce](#comb_collections_Iterable_prototype_reduce)\r\n\r\n  * [reduceRight](#comb_collections_Iterable_prototype_reduceRight)\r\n\r\n  * [some](#comb_collections_Iterable_prototype_some)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined collections/Iterable.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_collections_Iterable_prototype_every\"></a>\r\n###every\r\n\r\n---\r\n*Defined collections/Iterable.js* [Top](#top)\r\n\r\nDetermine if every item in a collection meets the criteria\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   throw new Error(\"Not Implemented\");\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Iterable_prototype_filter\"></a>\r\n###filter\r\n\r\n---\r\n*Defined collections/Iterable.js* [Top](#top)\r\n\r\nFilter items from a collection\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   throw new Error(\"Not Implemented\");\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Iterable_prototype_forEach\"></a>\r\n###forEach\r\n\r\n---\r\n*Defined collections/Iterable.js* [Top](#top)\r\n\r\nLoop through the items in a collection\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   throw new Error(\"Not Implemented\");\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Iterable_prototype_map\"></a>\r\n###map\r\n\r\n---\r\n*Defined collections/Iterable.js* [Top](#top)\r\n\r\nMap every item in a collection\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   throw new Error(\"Not Implemented\");\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Iterable_prototype_reduce\"></a>\r\n###reduce\r\n\r\n---\r\n*Defined collections/Iterable.js* [Top](#top)\r\n\r\nReduce a collection\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   throw new Error(\"Not Implemented\");\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Iterable_prototype_reduceRight\"></a>\r\n###reduceRight\r\n\r\n---\r\n*Defined collections/Iterable.js* [Top](#top)\r\n\r\nReduce a collection starting from the right most position\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   throw new Error(\"Not Implemented\");\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Iterable_prototype_some\"></a>\r\n###some\r\n\r\n---\r\n*Defined collections/Iterable.js* [Top](#top)\r\n\r\nDeterming if some items in a colleciton meet the criteria\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   throw new Error(\"Not Implemented\");\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_collections_MaxHeap\"></a>\r\n##comb.collections.MaxHeap\r\n\r\n[Top](#top)\r\n\r\n<p><p> Max Heap implementation, lowest value in heap is always at the root.</p>\r\n </br>\r\n <b>Performance</b>\r\n <table>\r\n     <tr><td></td><td>Best</td><td>Worst</td></tr>\r\n     <tr><td>Insert</td><td>O(log n)</td><td>O(log n)</td></tr>\r\n     <tr><td>Remove</td><td>O(log n)</td><td>O(log n)</td></tr>\r\n     <tr><td>Peek</td><td>O(1)</td><td>O(1)</td></tr>\r\n     <tr><td>Contains</td><td>O(n)</td><td>O(n)</td></tr>\r\n <table></p>\r\n\r\n        \r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.collections.Heap](#comb_collections_Heap)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n###Constructor\r\n\r\n*Defined collections/MaxHeap.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n<a name=\"comb_collections_MinHeap\"></a>\r\n##comb.collections.MinHeap\r\n\r\n[Top](#top)\r\n\r\n<p><p> Min Heap implementation, lowest value in heap is always at the root.</p>\r\n </br>\r\n <b>Performance</b>\r\n <table>\r\n     <tr><td></td><td>Best</td><td>Worst</td></tr>\r\n     <tr><td>Insert</td><td>O(log n)</td><td>O(log n)</td></tr>\r\n     <tr><td>Remove</td><td>O(log n)</td><td>O(log n)</td></tr>\r\n     <tr><td>Peek</td><td>O(1)</td><td>O(1)</td></tr>\r\n     <tr><td>Contains</td><td>O(n)</td><td>O(n)</td></tr>\r\n <table></p>\r\n\r\n        \r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.collections.Heap](#comb_collections_Heap)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n###Constructor\r\n\r\n*Defined collections/MinHeap.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n<a name=\"comb_collections_Pool\"></a>\r\n##comb.collections.Pool\r\n\r\n[Top](#top)\r\n\r\nBase class for a pool.\r\n\r\n        \r\n\r\n\r\n\r\n\r\n\r\n*Instance Properties*\r\n<table><tr><td>Property</td><td>Default Value</td><td>Description</td></tr><tr><td>count</td><td></td><td>the total number of objects in the pool, including free and in use objects.</td><tr><tr><td>freeCount</td><td></td><td>the number of free objects in this pool.</td><tr><tr><td>inUseCount</td><td></td><td>the number of objects in use in this pool.</td><tr><tr><td>maxObjects</td><td>1</td><td>the maximum number of objects this pool should contain</td><tr><tr><td>minObjects</td><td>0</td><td>the minimum number of objects this pool should contain.</td><tr></table>\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [createObject](#comb_collections_Pool_prototype_createObject)\r\n\r\n  * [getObject](#comb_collections_Pool_prototype_getObject)\r\n\r\n  * [removeObject](#comb_collections_Pool_prototype_removeObject)\r\n\r\n  * [returnObject](#comb_collections_Pool_prototype_returnObject)\r\n\r\n  * [validate](#comb_collections_Pool_prototype_validate)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined collections/Pool.js* [Top](#top)\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _options_  : \r\n        \r\n     \r\n\r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (options){\r\n   options = options || {};\r\n   this.__freeObjects = new Queue();\r\n   this.__inUseObjects = [];\r\n   this.__minObjects = options.minObjects || 0;\r\n   this.__maxObjects = options.maxObjects || 1;\r\n   this.minObjects = this.__minObjects;\r\n   this.maxObjects = this.__maxObjects;\r\n           \r\n}\r\n```\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_collections_Pool_prototype_createObject\"></a>\r\n###createObject\r\n\r\n---\r\n*Defined collections/Pool.js* [Top](#top)\r\n\r\nCreates a new object for this pool.\r\n * </br>\r\n <b>THIS SHOULD BE OVERRIDDEN TO ADD THE CORRECT TYPE OF OBJECT</b>\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Object` be default just creates an object.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   return {};\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Pool_prototype_getObject\"></a>\r\n###getObject\r\n\r\n---\r\n*Defined collections/Pool.js* [Top](#top)\r\n\r\nRetrieves an object from this pool.\r\n `\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `*` an object to contained in this pool\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   var ret = undefined;\r\n   if (this.freeCount > 0) {\r\n       ret = this.__freeObjects.dequeue();\r\n       this.__inUseObjects.push(ret);\r\n   } else if (this.__maxObjects > this.count) {\r\n       ret = this.createObject();\r\n       this.__inUseObjects.push(ret);\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Pool_prototype_removeObject\"></a>\r\n###removeObject\r\n\r\n---\r\n*Defined collections/Pool.js* [Top](#top)\r\n\r\nRemoves an object from the pool, this can be overriden to provide any\r\n teardown of objects that needs to take place.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `*` : the object that needs to be removed.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `*` the object removed.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   var index;\r\n   if (this.__freeObjects.contains(obj)) {\r\n       this.__freeObjects.remove(obj);\r\n   } else if ((index = this.__inUseObjects.indexOf(obj)) > -1) {\r\n       this.__inUseObjects.splice(index, 1);\r\n   }\r\n   //otherwise its not contained in this pool;\r\n   return obj;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Pool_prototype_returnObject\"></a>\r\n###returnObject\r\n\r\n---\r\n*Defined collections/Pool.js* [Top](#top)\r\n\r\nReturns an object to this pool. The object is validated before it is returned to the pool,\r\n if the validation fails then it is removed from the pool;\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `*` : the object to return to the pool\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   if (this.validate(obj) && this.count &lt;= this.__maxObjects) {\r\n       this.__freeObjects.enqueue(obj);\r\n       var index;\r\n       if ((index = this.__inUseObjects.indexOf(obj)) > -1)\r\n           this.__inUseObjects.splice(index, 1);\r\n   } else {\r\n       this.removeObject(obj);\r\n   }\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Pool_prototype_validate\"></a>\r\n###validate\r\n\r\n---\r\n*Defined collections/Pool.js* [Top](#top)\r\n\r\nValidates an object in this pool.\r\n </br>\r\n <b>THIS SHOULD BE OVERRIDDEN TO VALIDATE</b>\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `*` : the object to validate.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   return true;\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_collections_PriorityQueue\"></a>\r\n##comb.collections.PriorityQueue\r\n\r\n[Top](#top)\r\n\r\nPriorityQueue Implementation where the value with the highest priority moves to the front\r\n        Priority starts at 0, and the greatest value being the lowest priority;\r\n\r\n        \r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.collections.MinHeap](#comb_collections_MinHeap)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [dequeue](#comb_collections_PriorityQueue_prototype_dequeue)\r\n\r\n  * [enqueue](#comb_collections_PriorityQueue_prototype_enqueue)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined collections/PriorityQueue.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_collections_PriorityQueue_prototype_dequeue\"></a>\r\n###dequeue\r\n\r\n---\r\n*Defined collections/PriorityQueue.js* [Top](#top)\r\n\r\nRemoves the item with the highest priority from the queue\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n *  the value of the item\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   return this.remove();\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_PriorityQueue_prototype_enqueue\"></a>\r\n###enqueue\r\n\r\n---\r\n*Defined collections/PriorityQueue.js* [Top](#top)\r\n\r\nAdds the value with the specified priority to the queue\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _priority_ `Number` : the priority of the item       </br>       <b>0 = Highest, n = lowest</b>\r\n        \r\n * _value_  : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (priority,value){\r\n   return this.insert(priority, value);\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_collections_Queue\"></a>\r\n##comb.collections.Queue\r\n\r\n[Top](#top)\r\n\r\n<p>FIFO Data structure</p>\r\n\r\n        \r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.collections.Collection](#comb_collections_Collection)\r\n\r\n\r\n\r\n\r\n\r\n*Instance Properties*\r\n<table><tr><td>Property</td><td>Default Value</td><td>Description</td></tr><tr><td>count</td><td></td><td>the current number of elements in this queue</td><tr><tr><td>isEmpty</td><td></td><td>true if this queue is empty</td><tr><tr><td>values</td><td></td><td>a copy of the values contained in this queue</td><tr></table>\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [clear](#comb_collections_Queue_prototype_clear)\r\n\r\n  * [contains](#comb_collections_Queue_prototype_contains)\r\n\r\n  * [dequeue](#comb_collections_Queue_prototype_dequeue)\r\n\r\n  * [enqueue](#comb_collections_Queue_prototype_enqueue)\r\n\r\n  * [peek](#comb_collections_Queue_prototype_peek)\r\n\r\n  * [remove](#comb_collections_Queue_prototype_remove)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined collections/Queue.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   this.__queue = [];\r\n   this.__next = 0;\r\n   this.__last = 0;\r\n           \r\n}\r\n```\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_collections_Queue_prototype_clear\"></a>\r\n###clear\r\n\r\n---\r\n*Defined collections/Queue.js* [Top](#top)\r\n\r\nRemoves all items from this queue\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   this.__queue.length = 0;\r\n   this.__next = 0;\r\n   this.__last = 0;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Queue_prototype_contains\"></a>\r\n###contains\r\n\r\n---\r\n*Defined collections/Queue.js* [Top](#top)\r\n\r\nDetermine if this queue contains the element\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `*` : the object to find\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if this queue contains the element\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   return this.__queue.indexOf(obj) != -1;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Queue_prototype_dequeue\"></a>\r\n###dequeue\r\n\r\n---\r\n*Defined collections/Queue.js* [Top](#top)\r\n\r\nRemoves first item from the head of the queue\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `*` The element removed from this queue. Returns undefined if the queue is empty.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   var ret = undefined,next = this.__next, queue;\r\n   if (next != this.__last) {\r\n       queue = this.__queue;\r\n       ret = queue[next];\r\n       queue[this.__next++] = undefined;\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Queue_prototype_enqueue\"></a>\r\n###enqueue\r\n\r\n---\r\n*Defined collections/Queue.js* [Top](#top)\r\n\r\nAdd data to this queue\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _data_ `*` : element to add\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (data){\r\n   this.__queue[this.__last++] = data;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Queue_prototype_peek\"></a>\r\n###peek\r\n\r\n---\r\n*Defined collections/Queue.js* [Top](#top)\r\n\r\nRetrieves the item at the head of the queue without removing it\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `*` The element at the head of the queue. Returns undefined if the queue is empty.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   var ret = undefined, next = this.__next;\r\n   if (next != this.__last) {\r\n       ret = this.__queue[next];\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Queue_prototype_remove\"></a>\r\n###remove\r\n\r\n---\r\n*Defined collections/Queue.js* [Top](#top)\r\n\r\nRemoves an element from this queue.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `*` : the data to remove.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if the element was removed, false otherwise.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   var index = this.__queue.indexOf(obj), ret = false;\r\n   if (index != -1) {\r\n       if (index == this.__next) {\r\n           this.dequeue();\r\n       } else {\r\n           this.__queue.splice(index, 1);\r\n           this.__last--;\r\n       }\r\n       ret = true;\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_collections_RedBlackTree\"></a>\r\n##comb.collections.RedBlackTree\r\n\r\n[Top](#top)\r\n\r\n<p>\r\n     <p>A RedBlack tree is a form of a self balancing binary tree.</p>\r\n\r\n <b>Performance</b>\r\n <table>\r\n     <tr><td></td><td>Best</td><td>Worst</td></tr>\r\n     <tr><td>Space</td><td>O(n)</td><td>O(n)</td></tr>\r\n     <tr><td>Search</td><td>O(log n)</td><td>O(log n)</td></tr>\r\n     <tr><td>Insert</td><td>O(log n)</td><td>O(log n)</td></tr>\r\n     <tr><td>Delete</td><td>O(log n)</td><td>O(log n)</td></tr>\r\n <table>\r\n     </p>\r\n\r\n        \r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.collections.Tree](#comb_collections_Tree)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [insert](#comb_collections_RedBlackTree_prototype_insert)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined collections/RedBlackTree.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_collections_RedBlackTree_prototype_insert\"></a>\r\n###insert\r\n\r\n---\r\n*Defined collections/RedBlackTree.js* [Top](#top)\r\n\r\n\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _data_  : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (data){\r\n   this.__root = insert(this.__root, data, this.compare);\r\n   this.__root.red = false;\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_collections_Stack\"></a>\r\n##comb.collections.Stack\r\n\r\n[Top](#top)\r\n\r\n<p>LIFO Data structure</p>\r\n\r\n        \r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.collections.Collection](#comb_collections_Collection)\r\n\r\n\r\n\r\n\r\n\r\n*Instance Properties*\r\n<table><tr><td>Property</td><td>Default Value</td><td>Description</td></tr><tr><td>count</td><td></td><td>the current number of elements in this queue</td><tr><tr><td>isEmpty</td><td></td><td>true if this queue is empty</td><tr><tr><td>values</td><td></td><td>a copy of the values contained in this queue</td><tr></table>\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [clear](#comb_collections_Stack_prototype_clear)\r\n\r\n  * [contains](#comb_collections_Stack_prototype_contains)\r\n\r\n  * [peek](#comb_collections_Stack_prototype_peek)\r\n\r\n  * [pop](#comb_collections_Stack_prototype_pop)\r\n\r\n  * [push](#comb_collections_Stack_prototype_push)\r\n\r\n  * [remove](#comb_collections_Stack_prototype_remove)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined collections/Stack.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   this.__stack = [];\r\n   this.__next = -1;\r\n           \r\n}\r\n```\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_collections_Stack_prototype_clear\"></a>\r\n###clear\r\n\r\n---\r\n*Defined collections/Stack.js* [Top](#top)\r\n\r\nRemoves all items from this stack.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   this.__stack.length = 0;\r\n   this.__next = -1;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Stack_prototype_contains\"></a>\r\n###contains\r\n\r\n---\r\n*Defined collections/Stack.js* [Top](#top)\r\n\r\nDetermine if this stack contains the element\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `*` : the object to find\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if this stack contains the element\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   return this.__stack.indexOf(obj) != -1;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Stack_prototype_peek\"></a>\r\n###peek\r\n\r\n---\r\n*Defined collections/Stack.js* [Top](#top)\r\n\r\nRetrieves the item at the tail of the stack without removing it\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `*` The element at the tail of the stack. Returns undefined if the stack is empty.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   var ret = undefined,next = this.__next;\r\n   if (next >= 0) {\r\n       ret = this.__stack[next];\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Stack_prototype_pop\"></a>\r\n###pop\r\n\r\n---\r\n*Defined collections/Stack.js* [Top](#top)\r\n\r\nRemoves the tail of this static\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `*` the data at the tail of this stack\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   var ret = undefined, stack, next = this.__next;\r\n   if (next >= 0) {\r\n       stack = this.__stack;\r\n       ret = stack[next];\r\n       stack[this.__next--] = undefined;\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Stack_prototype_push\"></a>\r\n###push\r\n\r\n---\r\n*Defined collections/Stack.js* [Top](#top)\r\n\r\nAdd an item to the tail of this stack\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _data_ `*` : item to qppend to this stack\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (data){\r\n   this.__stack[++this.__next] = data;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Stack_prototype_remove\"></a>\r\n###remove\r\n\r\n---\r\n*Defined collections/Stack.js* [Top](#top)\r\n\r\nRemoves an element from this stack.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _obj_ `*` : the data to remove.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if the element was removed, false otherwise.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (obj){\r\n   var index = this.__stack.indexOf(obj), ret = false;\r\n   if (index != -1) {\r\n       if (index == this.__next) {\r\n           this.pop();\r\n       } else {\r\n           this.__stack.splice(index, 1);\r\n           this.__next--;\r\n       }\r\n       ret = true;\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_collections_Tree\"></a>\r\n##comb.collections.Tree\r\n\r\n[Top](#top)\r\n\r\nBase Class for all tree implementations\r\n\r\n        \r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.collections.Collection](#comb_collections_Collection)\r\n\r\n  * [comb.collections.Iterable](#comb_collections_Iterable)\r\n\r\n\r\n\r\n\r\n*Static Properties*\r\n<table><tr><td>Property</td><td>Default Value</td><td>Description</td></tr><tr><td><em>IN_ORDER</em></td><td>\"in_order\"</td><td>In Order</td><tr><tr><td><em>POST_ORDER</em></td><td>\"post_order\"</td><td>Post Order</td><tr><tr><td><em>PRE_ORDER</em></td><td>\"pre_order\"</td><td>Pre Order</td><tr><tr><td><em>REVERSE_ORDER</em></td><td>\"reverse_order\"</td><td>Reverse Order</td><tr></table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [clear](#comb_collections_Tree_prototype_clear)\r\n\r\n  * [contains](#comb_collections_Tree_prototype_contains)\r\n\r\n  * [every](#comb_collections_Tree_prototype_every)\r\n\r\n  * [filter](#comb_collections_Tree_prototype_filter)\r\n\r\n  * [find](#comb_collections_Tree_prototype_find)\r\n\r\n  * [findGreaterThan](#comb_collections_Tree_prototype_findGreaterThan)\r\n\r\n  * [findLessThan](#comb_collections_Tree_prototype_findLessThan)\r\n\r\n  * [forEach](#comb_collections_Tree_prototype_forEach)\r\n\r\n  * [insert](#comb_collections_Tree_prototype_insert)\r\n\r\n  * [isEmpty](#comb_collections_Tree_prototype_isEmpty)\r\n\r\n  * [map](#comb_collections_Tree_prototype_map)\r\n\r\n  * [print](#comb_collections_Tree_prototype_print)\r\n\r\n  * [reduce](#comb_collections_Tree_prototype_reduce)\r\n\r\n  * [reduceRight](#comb_collections_Tree_prototype_reduceRight)\r\n\r\n  * [remove](#comb_collections_Tree_prototype_remove)\r\n\r\n  * [some](#comb_collections_Tree_prototype_some)\r\n\r\n  * [toArray](#comb_collections_Tree_prototype_toArray)\r\n\r\n  * [traverse](#comb_collections_Tree_prototype_traverse)\r\n\r\n  * [traverseWithCondition](#comb_collections_Tree_prototype_traverseWithCondition)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _options_ `Object` : options to initialize the tree\r\n        \r\n * _options.compare_ `Function` : function used to compare items in a tree must return an integer   <ul>       </li>-1 for less than</li>       </li>0 for equal</li>       </li>1 for greater than</li>   </ul>\r\n        \r\n     \r\n\r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (options){\r\n   options = options || {};\r\n   this.compare = options.compare || compare;\r\n   this.__root = null;\r\n           \r\n}\r\n```\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_clear\"></a>\r\n###clear\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nClear all items from a tree\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   this.__root = null;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_contains\"></a>\r\n###contains\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nDetermines if a value is contained in the tree\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _value_ `*` : the value to find\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if the tree contains the item false otherwise.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (value){\r\n   var ret = false;\r\n   var root = this.__root;\r\n   while (root != null) {\r\n       var cmp = this.compare(value, root.data);\r\n       if (cmp) {\r\n           root = root[(cmp == -1) ? \"left\" : \"right\"];\r\n       } else {\r\n           ret = true;\r\n           root = null;\r\n       }\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_every\"></a>\r\n###every\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nDetermines if every item meets the condition returned by the callback.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _cb_ `Function` : called for each item in the tree\r\n        \r\n * _[scope=this]_ `Object` : scope to call the function in\r\n        \r\n * _[order=Tree.IN_ORDER]_ `Tree.PRE_ORDER|Tree.POST_ORDER|Tree.IN_ORDER|Tree.REVERSE_ORDER` : the traversal scheme\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` True if every item passed false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (cb,scope,order){\r\n   if (typeof cb !== \"function\")\r\n       throw new TypeError();\r\n   order = order || Tree.IN_ORDER;\r\n   scope = scope || this;\r\n   var ret = false;\r\n   this.traverseWithCondition(this.__root, order, function(node) {\r\n       return (ret = cb.call(scope, node, this));\r\n   });\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_filter\"></a>\r\n###filter\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nFilters a tree, only returning items that result in true being returned from the callback\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _cb_ `Function` : called for each item in the tree\r\n        \r\n * _[scope=this]_ `Object` : scope to call the function in\r\n        \r\n * _[order=Tree.IN_ORDER]_ `Tree.PRE_ORDER|Tree.POST_ORDER|Tree.IN_ORDER|Tree.REVERSE_ORDER` : the traversal scheme\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `comb.collections.Tree` the tree with items that resulted in true being returned from the callback\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (cb,scope,order){\r\n   if (typeof cb !== \"function\")\r\n       throw new TypeError();\r\n   order = order || Tree.IN_ORDER;\r\n   scope = scope || this;\r\n   var ret = new this._static();\r\n   this.traverse(this.__root, order, function(node) {\r\n       var include = cb.call(scope, node, this);\r\n       include && ret.insert(node);\r\n   });\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_find\"></a>\r\n###find\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nFinds a value in the tree\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _value_ `*` : the value to find\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n *  the value of the node that matched\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (value){\r\n   var ret;\r\n   var root = this.__root;\r\n   while (root != null) {\r\n       var cmp = this.compare(value, root.data);\r\n       if (cmp) {\r\n           root = root[(cmp == -1) ? \"left\" : \"right\"];\r\n       } else {\r\n           ret = root.data;\r\n           break;\r\n       }\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_findGreaterThan\"></a>\r\n###findGreaterThan\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nFind all greater than a value\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _value_ `*` : the value to find nodes greater than\r\n        \r\n * _[exclusive=false]_ `Boolean` : if true the value will NOT be included in the return array\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Array` the array containing all values greater than\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (value,exclusive){\r\n   //find a better way!!!!\r\n   var ret = [], compare = this.compare;\r\n   this.traverse(this.__root, exports.REVERSE_ORDER, function(v) {\r\n       var cmp = compare(value, v);\r\n       if ((!exclusive && cmp == 0) || cmp == -1) {\r\n           ret.push(v);\r\n           return true;\r\n       } else {\r\n           return false;\r\n       }\r\n   });\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_findLessThan\"></a>\r\n###findLessThan\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nFind all values less than a value\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _value_ `*` : the value to find nodes less than\r\n        \r\n * _[exclusive=false]_ `Boolean` : if true the value will NOT be included in the return array\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Array` the array containing all values less than\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (value,exclusive){\r\n   //find a better way!!!!\r\n   var ret = [], compare = this.compare;\r\n   this.traverseWithCondition(this.__root, exports.IN_ORDER, function(v) {\r\n       var cmp = compare(value, v);\r\n       if ((!exclusive && cmp == 0) || cmp == 1) {\r\n           ret.push(v);\r\n           return true;\r\n       } else {\r\n           return false;\r\n       }\r\n   });\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_forEach\"></a>\r\n###forEach\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nLoop through each item in the tree\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _cb_ `Function` : called for each item in the tree\r\n        \r\n * _[scope=this]_ `Object` : scope to call the function in\r\n        \r\n * _[order=Tree.IN_ORDER]_ `Tree.PRE_ORDER|Tree.POST_ORDER|Tree.IN_ORDER|Tree.REVERSE_ORDER` : the traversal scheme\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (cb,scope,order){\r\n   if (typeof cb !== \"function\")\r\n       throw new TypeError();\r\n   order = order || Tree.IN_ORDER;\r\n   scope = scope || this;\r\n   this.traverse(this.__root, order, function(node) {\r\n       cb.call(scope, node, this);\r\n   });\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_insert\"></a>\r\n###insert\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nInserts an item into the tree\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _data_ `Anything` : the item to insert\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (data){\r\n   throw new Error(\"Not Implemented\");\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_isEmpty\"></a>\r\n###isEmpty\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nTest if a tree is empty\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if empty false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   return this.__root == null;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_map\"></a>\r\n###map\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nLoop through each item in the tree, collecting the value returned by the callback funciton.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _cb_ `Function` : called for each item in the tree.                    Whatever the function returns is inserted into the return tree\r\n        \r\n * _[scope=this]_ `Object` : scope to call the function in\r\n        \r\n * _[order=Tree.IN_ORDER]_ `Tree.PRE_ORDER|Tree.POST_ORDER|Tree.IN_ORDER|Tree.REVERSE_ORDER` : the traversal scheme\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `comb.collections.Tree` the tree with the mapped items\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (cb,scope,order){\r\n   if (typeof cb !== \"function\")\r\n       throw new TypeError();\r\n   order = order || Tree.IN_ORDER;\r\n   scope = scope || this;\r\n   var construct = this._static;\r\n   var ret = new this._static();\r\n   this.traverse(this.__root, order, function(node) {\r\n       ret.insert(cb.call(scope, node, this));\r\n   });\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_print\"></a>\r\n###print\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nPrints a tree to the console.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   this.__printNode(this.__root, 0);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_reduce\"></a>\r\n###reduce\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nReduces a tree\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _fun_ `Function` : called for each item in the tree\r\n        \r\n * _[accumulator=First item in tree(Order dependant)]_  : scope to call the function in\r\n        \r\n * _[order=Tree.IN_ORDER]_ `Tree.PRE_ORDER|Tree.POST_ORDER|Tree.IN_ORDER|Tree.REVERSE_ORDER` : the traversal scheme\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n *  the result of the reduce function\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (fun,accumulator,order){\r\n   var arr = this.toArray(order);\r\n   var args = [fun];\r\n   !base.isUndefinedOrNull(accumulator) && args.push(accumulator)\r\n   return arr.reduce.apply(arr, args);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_reduceRight\"></a>\r\n###reduceRight\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nReduces from right to left\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _fun_ `Function` : called for each item in the tree\r\n        \r\n * _[accumulator=First item in tree(Order dependant)]_  : scope to call the function in\r\n        \r\n * _[order=Tree.IN_ORDER]_ `Tree.PRE_ORDER|Tree.POST_ORDER|Tree.IN_ORDER|Tree.REVERSE_ORDER` : the traversal scheme\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n *  the result of the reduce function\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (fun,accumulator,order){\r\n   var arr = this.toArray(order);\r\n   var args = [fun];\r\n   !base.isUndefinedOrNull(accumulator) && args.push(accumulator)\r\n   return arr.reduceRight.apply(arr, args);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_remove\"></a>\r\n###remove\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nRemoves an item from the tree\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _data_ `Anything` : the item to insert\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (data){\r\n   throw new Error(\"Not Implemented\");\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_some\"></a>\r\n###some\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nDetermines if some item meet the condition returned by the callback. Traversal ends the first time true is found.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _cb_ `Function` : called for each item in the tree\r\n        \r\n * _[scope=this]_ `Object` : scope to call the function in\r\n        \r\n * _[order=Tree.IN_ORDER]_ `Tree.PRE_ORDER|Tree.POST_ORDER|Tree.IN_ORDER|Tree.REVERSE_ORDER` : the traversal scheme\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` True if every item passed false otherwise\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (cb,scope,order){\r\n   if (typeof cb !== \"function\")\r\n       throw new TypeError();\r\n   order = order || Tree.IN_ORDER;\r\n   scope = scope || this;\r\n   var ret;\r\n   this.traverseWithCondition(this.__root, order, function(node) {\r\n       ret = cb.call(scope, node, this);\r\n       return !ret;\r\n   });\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_toArray\"></a>\r\n###toArray\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nConverts a tree into an array based on the specified order\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _[order=Tree.IN_ORDER]_ `Tree.PRE_ORDER|Tree.POST_ORDER|Tree.IN_ORDER|Tree.REVERSE_ORDER` : the traversal scheme\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Array` array of all items in the order specified.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (order){\r\n   order = order || Tree.IN_ORDER;\r\n   var arr = [];\r\n   this.traverse(this.__root, order, function(node) {\r\n       arr.push(node);\r\n   });\r\n   return arr;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_traverse\"></a>\r\n###traverse\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nTraverse a tree\r\n\r\n <p><b>Not typically used directly</b></p>\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _node_ `Object` : the node to start at\r\n        \r\n * _[order=Tree.IN_ORDER]_ `Tree.PRE_ORDER|Tree.POST_ORDER|Tree.IN_ORDER|Tree.REVERSE_ORDER` : the traversal scheme\r\n        \r\n * _callback_ `Function` : called for each item\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (node,order,callback){\r\n   if (node) {\r\n       order = order || Tree.PRE_ORDER;\r\n       if (order === Tree.PRE_ORDER) {\r\n           callback(node.data);\r\n           this.traverse(node.left, order, callback);\r\n           this.traverse(node.right, order, callback);\r\n       } else if (order === Tree.IN_ORDER) {\r\n           this.traverse(node.left, order, callback);\r\n           callback(node.data);\r\n           this.traverse(node.right, order, callback);\r\n       } else if (order === Tree.POST_ORDER) {\r\n           this.traverse(node.left, order, callback);\r\n           this.traverse(node.right, order, callback);\r\n           callback(node.data);\r\n       } else if (order === Tree.REVERSE_ORDER) {\r\n           this.traverseWithCondition(node.right, order, callback);\r\n           callback(node.data);\r\n           this.traverseWithCondition(node.left, order, callback);\r\n       }\r\n   }\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_collections_Tree_prototype_traverseWithCondition\"></a>\r\n###traverseWithCondition\r\n\r\n---\r\n*Defined collections/Tree.js* [Top](#top)\r\n\r\nTraverse a tree until the callback function returns false\r\n\r\n <p><b>Not typically used directly</b></p>\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _node_ `Object` : the node to start at\r\n        \r\n * _[order=Tree.IN_ORDER]_ `Tree.PRE_ORDER|Tree.POST_ORDER|Tree.IN_ORDER|Tree.REVERSE_ORDER` : the traversal scheme\r\n        \r\n * _callback_ `Function` : called for each item, traversal continues until the function returns false\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (node,order,callback){\r\n   var cont = true;\r\n   if (node) {\r\n       order = order || Tree.PRE_ORDER;\r\n       if (order === Tree.PRE_ORDER) {\r\n           cont = callback(node.data);\r\n           if (cont) {\r\n               cont = this.traverseWithCondition(node.left, order, callback);\r\n               cont && (cont = this.traverseWithCondition(node.right, order, callback));\r\n           }\r\n       } else if (order === Tree.IN_ORDER) {\r\n           cont = this.traverseWithCondition(node.left, order, callback);\r\n           if (cont) {\r\n               cont = callback(node.data);\r\n               cont && (cont = this.traverseWithCondition(node.right, order, callback));\r\n           }\r\n       } else if (order === Tree.POST_ORDER) {\r\n           cont = this.traverseWithCondition(node.left, order, callback);\r\n           if (cont) {\r\n               cont && (cont = this.traverseWithCondition(node.right, order, callback));\r\n               cont && (cont = callback(node.data));\r\n           }\r\n       } else if (order === Tree.REVERSE_ORDER) {\r\n           cont = this.traverseWithCondition(node.right, order, callback);\r\n           if (cont) {\r\n               cont = callback(node.data);\r\n               cont && (cont = this.traverseWithCondition(node.left, order, callback));\r\n           }\r\n       }\r\n   }\r\n   return cont;\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_logging_BasicConfigurator\"></a>\r\n##comb.logging.BasicConfigurator\r\n\r\n[Top](#top)\r\n\r\ndefault configurator for logging\r\n\r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [configure](#comb_logging_BasicConfigurator_prototype_configure)\r\n\r\n  * [constructor](#comb_logging_BasicConfigurator_prototype_constructor)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined logging/config.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n*Source*\r\n\r\n```javascript\r\n(exports.BasicConfigurator = define(null, {\r\n```\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_logging_BasicConfigurator_prototype_configure\"></a>\r\n###configure\r\n\r\n---\r\n*Defined logging/config.js* [Top](#top)\r\n\r\nConfigure logging.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _[appender=null]_ `comb.logging.Appender` : appender to add to the root logger, by default a console logger is added.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (appender){\r\n   var rootLogger = Logger.getRootLogger();\r\n   rootLogger.removeAllAppenders();\r\n   if (base.isInstanceOf(appender, appenders.Appender)) {\r\n       rootLogger.addAppender(appender);\r\n   } else {\r\n       rootLogger.addAppender(new appenders.ConsoleAppender());\r\n   }\r\n   checkProcessUncaughtException();\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_BasicConfigurator_prototype_constructor\"></a>\r\n###constructor\r\n\r\n---\r\n*Defined logging/config.js* [Top](#top)\r\n\r\n\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   if (!Logger) {\r\n       logging = require(\"./index\").logging;\r\n       Logger = logging.Logger;\r\n       Level = logging.Level;\r\n       appenders = logging.appenders;\r\n   }\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_logging_Level\"></a>\r\n##comb.logging.Level\r\n\r\n[Top](#top)\r\n\r\nLevel class used to describe logging levels. The levels determine what types of events are logged to the appenders\r\n  for example the if Level.ALL is used then all event will be logged, however if Level.INFO was used then <b>ONLY</b>\r\n  INFO, WARN, ERROR, and FATAL events will be logged. To turn off logging for a logger use Level.OFF.\r\n\r\n <p><b>Not typically instantiated directly, but through staticly defined levels</b></p>\r\n\r\n        \r\n*Example*\r\n\r\n```javascript\r\n //Levels in ascending order\r\n comb.logging.Level.ALL\r\n comb.logging.Level.DEBUG\r\n comb.logging.Level.TRACE\r\n comb.logging.Level.INFO\r\n comb.logging.Level.WARN\r\n comb.logging.Level.ERROR\r\n comb.logging.Level.FATAL\r\n comb.logging.Level.OFF\r\n\r\n //or\r\n Level.getLevel(\"INFO\");\r\n\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n*Static Properties*\r\n<table><tr><td>Property</td><td>Default Value</td><td>Description</td></tr><tr><td><em>ALL</em></td><td>null</td><td>Level to allow logging of all events.</td><tr><tr><td><em>DEBUG</em></td><td>null</td><td>Logs only events debug or greater.</td><tr><tr><td><em>ERROR</em></td><td>null</td><td>Error or fatal events</td><tr><tr><td><em>FATAL</em></td><td>null</td><td>Only fatal events</td><tr><tr><td><em>INFO</em></td><td>null</td><td>Only info, or error related events</td><tr><tr><td><em>OFF</em></td><td>null</td><td>No events will be logged.</td><tr><tr><td><em>TRACE</em></td><td>null</td><td>Like debug but provides a finer level of detail</td><tr><tr><td><em>WARN</em></td><td>null</td><td>Only warn or error related events</td><tr></table>\r\n\r\n\r\n*Instance Properties*\r\n<table><tr><td>Property</td><td>Default Value</td><td>Description</td></tr><tr><td>level</td><td></td><td>the numerical representation of this level.</td><tr><tr><td>name</td><td></td><td>the name of level.</td><tr></table>\r\n\r\n\r\n\r\n*Static*\r\n\r\n  * [addLevel](#comb_logging_Level_addLevel)\r\n\r\n  * [toLevel](#comb_logging_Level_toLevel)\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [constructor](#comb_logging_Level_prototype_constructor)\r\n\r\n  * [equals](#comb_logging_Level_prototype_equals)\r\n\r\n  * [isGreaterOrEqualToo](#comb_logging_Level_prototype_isGreaterOrEqualToo)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined logging/level.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n*Source*\r\n\r\n```javascript\r\n(exports = module.exports = define(null, {\r\n```\r\n\r\n\r\n  \r\n<a name=\"comb_logging_Level_addLevel\"></a>\r\n###*addLevel*\r\n\r\n---\r\n*Defined logging/level.js* [Top](#top)\r\n\r\nAdds a new level to the Level object.\r\n        \r\n*Example*\r\n\r\n```javascript\r\nlogger = Logger.getLogger(\"my.logger\");\r\n\r\n //create the custom level\r\n Level.addLevel(\"custom_Level\", 20);\r\n\r\n //now set the level on a logger\r\n logger.level = Level.CUSTOM_LEVEL;\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _label_ `string` : the label of the level, <b>Note:</b> the label will be coverted to uppercase.\r\n        \r\n * _level_ `number` : the level of the level\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `undefined|comb.logging.Level` the level that was created.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (label,level){\r\n   var ret;\r\n   if (base.isString(label) && base.isNumber(level)) {\r\n       label = label.toUpperCase();\r\n       LEVELS_REVERSE[level] = label;\r\n       LEVELS[label] = level;\r\n       ret = (this[label] = new Level(level, label));\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Level_toLevel\"></a>\r\n###*toLevel*\r\n\r\n---\r\n*Defined logging/level.js* [Top](#top)\r\n\r\nConverts a numerical or string representation of a level, if a default level is provided,\r\n then if a level cannot be determined then the default level is used.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _level_ `Number|String|comb.logging.Level` : the level to try to convert\r\n        \r\n * _defaultLevel?_ `comb.logging.Level` : default level to use if one cannot be determined,\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `comb.logging.Level|null` returns a level if one can be determined null otherwise.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (level,defaultLevel){\r\n   var ret = null;\r\n   var args = base.argsToArray(arguments);\r\n   if (args.length === 1) {\r\n       var level = args[0];\r\n       if (base.isNumber(level)) {\r\n           var strLevel = LEVELS_REVERSE[level];\r\n           ret = Level[strLevel];\r\n       } else if (base.isString(level)) {\r\n           ret = Level[level.toUpperCase()];\r\n       } else {\r\n           ret = level;\r\n       }\r\n   } else {\r\n       ret = (Level.toLevel(args[0]) || args[1]);\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_logging_Level_prototype_constructor\"></a>\r\n###constructor\r\n\r\n---\r\n*Defined logging/level.js* [Top](#top)\r\n\r\n\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _level_  : \r\n        \r\n * _name_  : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (level,name){\r\n   this.level = level;\r\n   this.name = name;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Level_prototype_equals\"></a>\r\n###equals\r\n\r\n---\r\n*Defined logging/level.js* [Top](#top)\r\n\r\nDeterming if this level is equal to another level based off of the numerical rank.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _level_ `comb.logging.Level` : the level to compare\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if this is equal to that false otherwise.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (level){\r\n   return level.level == this.level;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Level_prototype_isGreaterOrEqualToo\"></a>\r\n###isGreaterOrEqualToo\r\n\r\n---\r\n*Defined logging/level.js* [Top](#top)\r\n\r\nDeterming if this level is >= another level\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _level_ `comb.logging.Level` : the level to test against\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Boolean` true if this is >= false otherwise.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (level){\r\n   var ret = false;\r\n   if (level && base.isNumber(level.level)) {\r\n       if (this.level >= level.level) {\r\n           ret = true;\r\n       }\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_logging_Logger\"></a>\r\n##comb.logging.Logger\r\n\r\n[Top](#top)\r\n\r\nThis class is the entry point for all logging actions in comb.\r\n <p><b>Logger should be retrieved by calling Logger.getLogger() NOT through the new keyword</b></p>\r\n <p>\r\n All loggers in comb follow a heirarchy of inheritance based on a dot notation.\r\n <pre class=\"code\">\r\n      rootLogger - \"\"\r\n              /         \\\r\n           \"my\"      \"myOther\"\r\n           /               \\\r\n     \"my.logger\"       \"myOther.logger\"\r\n        /                     \\\r\n   \"my.logger.Log\"        \"myOther.logger.Log\"\r\n\r\n </pre>\r\n In the above Tree the rootLogger is the base for all logger. my and myOther inherit from rootLogger\r\n my.logger inherits from my, and myOther.logger inherits from myOther. The logs do not have to be retrieved in\r\n order. If I set rootLogger to ERROR level and added a console appender to it the appender and level will be\r\n added to all logs. However if I set my to INFO level and add a fileAppender to it the level and appender will\r\n only be added to logs in \"my\" subtree. If you set my.logger to not be additive then levels, and appenders will not\r\n propogate down to the rest of the tree.\r\n\r\n </p>\r\n\r\n <p>For information on levels see [comb.logging.Level](#comb_logging_Level).</p>\r\n <p>For information on appenders see\r\n          <ul>\r\n              <li>[comb.logging.appenders.Appender](#comb_logging_appenders_Appender)</li>\r\n              <li>[comb.logging.appenders.ConsoleAppender](#comb_logging_appenders_ConsoleAppender)</li>\r\n              <li>[comb.logging.appenders.FileAppender](#comb_logging_appenders_FileAppender)</li>\r\n              <li>[comb.logging.appenders.JSONAppender](#comb_logging_appenders_JSONAppender)</li>\r\n              <li>[comb.logging.appenders.RollingFileAppender](#comb_logging_appenders_RollingFileAppender)</li>\r\n          </ul>\r\n </p>\r\n <p>For information on configurators see [comb.logging.BasicConfigurator](#comb_logging_BasicConfigurator) or [comb.logging.PropertyConfigurator](#comb_logging_PropertyConfigurator).</p>\r\n\r\n        \r\n*Example*\r\n\r\n```javascript\r\n var logging = comb.logging,\r\n     Logger = logging.Logger,\r\n     appenders = logging.appenders,\r\n     Level = logging.Level;\r\n\r\n //configure you logging environement\r\n\r\n var bc = logging.BasicConfigurator();\r\n //add console appender to all loggers\r\n bc.configure();\r\n //add a file appender to all loggers\r\n bc.configure(new appenders.FileAppender({file : \"/var/log/myLog.log\"}));\r\n\r\n //Retreiving a logger.\r\n var combLogger = Logger.getLogger(\"comb\");\r\n var combCollectionLogger = Logger.getLogger(\"comb.collections\");\r\n var treeLogger = Logger.getLogger(\"comb.collections.Tree\");\r\n\r\n //set my treeLogger to DEBUG Level\r\n treeLogger.level = Level.DEBUG;\r\n //add a JSON appender to tree logger just for fun!\r\n treeLogger.addAppender(new appenders.JSONAppender({file : \"/var/log/myTreeLogger.json\"}));\r\n\r\n //NOW USE THEM\r\n\r\n\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n*Instance Properties*\r\n<table><tr><td>Property</td><td>Default Value</td><td>Description</td></tr><tr><td>additive</td><td></td><td>set to false to prevent changes to this logger from propogating down.</td><tr><tr><td>appenders</td><td></td><td>list of appenders this logger currently contains.</td><tr><tr><td>fullName</td><td></td><td>the full path name of this Logger.</td><tr><tr><td>isDebug</td><td></td><td>true if this Loggers level is DEBUG</td><tr><tr><td>isError</td><td></td><td>true if this Loggers level is ERROR</td><tr><tr><td>isFatal</td><td></td><td>true if this Loggers level is FATAL</td><tr><tr><td>isInfo</td><td></td><td>true if this Loggers level is INFO</td><tr><tr><td>isOff</td><td></td><td>true if this Loggers level is OFF</td><tr><tr><td>isTrace</td><td></td><td>true if this Loggers level is TRACE</td><tr><tr><td>isWarn</td><td></td><td>true if this Loggers level is WARN</td><tr><tr><td>level</td><td></td><td>the level of this Logger</td><tr><tr><td>name</td><td></td><td>the name of this logger this <b>does not</b> include the dot notated name</td><tr><tr><td>subLoggers</td><td></td><td>all loggers this logger is the parent of.</td><tr></table>\r\n\r\n\r\n\r\n*Static*\r\n\r\n  * [getLogger](#comb_logging_Logger_getLogger)\r\n\r\n  * [getRootLogger](#comb_logging_Logger_getRootLogger)\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [addAppender](#comb_logging_Logger_prototype_addAppender)\r\n\r\n  * [addAppenders](#comb_logging_Logger_prototype_addAppenders)\r\n\r\n  * [constructor](#comb_logging_Logger_prototype_constructor)\r\n\r\n  * [debug](#comb_logging_Logger_prototype_debug)\r\n\r\n  * [error](#comb_logging_Logger_prototype_error)\r\n\r\n  * [fatal](#comb_logging_Logger_prototype_fatal)\r\n\r\n  * [getAppender](#comb_logging_Logger_prototype_getAppender)\r\n\r\n  * [info](#comb_logging_Logger_prototype_info)\r\n\r\n  * [isAppenderAttached](#comb_logging_Logger_prototype_isAppenderAttached)\r\n\r\n  * [log](#comb_logging_Logger_prototype_log)\r\n\r\n  * [removeAllAppenders](#comb_logging_Logger_prototype_removeAllAppenders)\r\n\r\n  * [removeAppender](#comb_logging_Logger_prototype_removeAppender)\r\n\r\n  * [removeAppenders](#comb_logging_Logger_prototype_removeAppenders)\r\n\r\n  * [trace](#comb_logging_Logger_prototype_trace)\r\n\r\n  * [warn](#comb_logging_Logger_prototype_warn)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined logging/index.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n*Source*\r\n\r\n```javascript\r\n(logging.Logger = define.define(null, {\r\n```\r\n\r\n\r\n  \r\n<a name=\"comb_logging_Logger_getLogger\"></a>\r\n###*getLogger*\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\nRetrieves/Creates a logger based on the name passed in\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _name_ `String` : the name of the logger\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (name){\r\n   return rootTree.getLogger(name);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Logger_getRootLogger\"></a>\r\n###*getRootLogger*\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\nReturn the root of all loggers\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   return rootTree.getRootLogger();\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_logging_Logger_prototype_addAppender\"></a>\r\n###addAppender\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\nAdd an appender to this logger. If this is additive then the appender is added to all subloggers.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _appender_ `comb.logging.Appender` : the appender to add.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (appender){\r\n   if (!base.isUndefinedOrNull(appender)) {\r\n       var name = appender.name;\r\n       if (!(name in this.__appenders)) {\r\n           this.__appenders[name] = appender;\r\n           if (!appender.level) {\r\n               appender.level = this.level;\r\n           }\r\n           this._tree.addAppender(appender);\r\n       }\r\n   }\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Logger_prototype_addAppenders\"></a>\r\n###addAppenders\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\nShort cut to add a list of appenders to this Logger\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _appenders_ `Array<comb.logging.Appender>` : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (appenders){\r\n   appenders.forEach(base.hitch(this, \"addAppender\"));\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Logger_prototype_constructor\"></a>\r\n###constructor\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\n\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _name_  : \r\n        \r\n * _parent_  : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (name,parent){\r\n   this.__additive = true;\r\n   this.__name = name;\r\n   this._parent = parent;\r\n   this._tree = new LoggerTree(this);\r\n   this.fullName = this._tree.name;\r\n   if (!parent || !parent.additive) {\r\n       this.level = Level.ALL;\r\n   } else {\r\n       this.level = parent.level;\r\n   }\r\n   this.__appenders = {};\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Logger_prototype_debug\"></a>\r\n###debug\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\nLog an debug level message\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _message_ `String` : the message to log.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (message){\r\n   this.log(Level.DEBUG, message);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Logger_prototype_error\"></a>\r\n###error\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\nLog an error level message\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _message_ `String` : the message to log.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (message){\r\n   this.log(Level.ERROR, message);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Logger_prototype_fatal\"></a>\r\n###fatal\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\nLog an fatal level message\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _message_ `String` : the message to log.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (message){\r\n   this.log(Level.FATAL, message);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Logger_prototype_getAppender\"></a>\r\n###getAppender\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\nGets an appender from this logger\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _name_ `String` : the name of the appender.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `comb.logging.Appender|undefined` returns the appender with the specified name or\r\n                                          undefined if it is not found.\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (name){\r\n   var ret;\r\n   if (name in this.__appenders) {\r\n       ret = this.__appenders[name];\r\n   }\r\n   return ret;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Logger_prototype_info\"></a>\r\n###info\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\nLog an info level message\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _message_ `String` : the message to log.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (message){\r\n   this.log(Level.INFO, message);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Logger_prototype_isAppenderAttached\"></a>\r\n###isAppenderAttached\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\nDetermines if an appender is attached.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _name_ `String` : the name of the appender.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (name){\r\n   return (name in this.__appenders);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Logger_prototype_log\"></a>\r\n###log\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\nLog a message\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _level_ `comb.logging.Level` : the level the message is\r\n        \r\n * _message_ `String` : the message to log.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (level,message){\r\n   if (level.isGreaterOrEqualToo(this.level)) {\r\n       if (Level.TRACE.equals(level)) {\r\n           var err = new Error;\r\n           err.name = \"Trace\";\r\n           err.message = message || '';\r\n           Error.captureStackTrace(err, arguments.callee);\r\n           message = err.stack;\r\n       } else if (Level.ERROR.equals(level) && base.isInstanceOf(message, Error)) {\r\n           message = message.stack;\r\n       }\r\n       var type = level.name.toLowerCase(), appenders = this.__appenders;\r\n       var event = {\r\n           level:level,\r\n           levelName:level.name,\r\n           message:message,\r\n           timeStamp:new Date(),\r\n           name:this.fullName\r\n       };\r\n       for (var i in appenders) {\r\n           appenders[i].append(event);\r\n       }\r\n   }\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Logger_prototype_removeAllAppenders\"></a>\r\n###removeAllAppenders\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\nRemoves all appenders from this logger and sub loggers if this Logger is additive.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   for (var i in this.__appenders) {\r\n       this.removeAppender(i);\r\n   }\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Logger_prototype_removeAppender\"></a>\r\n###removeAppender\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\nRemoves and appender from this logger.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _name_ `String` : the name of the appender\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (name){\r\n   if (name in this.__appenders) {\r\n       delete this.__appenders[name];\r\n       this._tree.removeAppender(name);\r\n   }\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Logger_prototype_removeAppenders\"></a>\r\n###removeAppenders\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\nRemoves a list of appenders from this logger.\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _appenders_ `Array<String>` : a list of names of appenders to remove\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (appenders){\r\n   appenders.forEach(this.removeAppender, this);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Logger_prototype_trace\"></a>\r\n###trace\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\nLog an trace level message\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _message_ `String` : the message to log.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (message){\r\n   this.log(Level.TRACE, message);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_Logger_prototype_warn\"></a>\r\n###warn\r\n\r\n---\r\n*Defined logging/index.js* [Top](#top)\r\n\r\nLog an warn level message\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _message_ `String` : the message to log.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (message){\r\n   this.log(Level.WARN, message);\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_logging_PropertyConfigurator\"></a>\r\n##comb.logging.PropertyConfigurator\r\n\r\n[Top](#top)\r\n\r\nConfigures comb.Logger with the properties or properties contained within a file\r\n\r\n        \r\n*Example*\r\n\r\n```javascript\r\n var propertyConfigurator = new comb.logging.PropertyConfigurator();\r\n\r\n propertyConfigurator.configure(\"/location/of/combLogger.json\");\r\n\r\n //or\r\n\r\n var config = {\r\n     \"my.logger\" : {\r\n         level : \"INFO\",\r\n         appenders : [\r\n             {\r\n                 //default file appender\r\n                 type : \"FileAppender\",\r\n                 file : \"/var/log/myApp.log\",\r\n             },\r\n             {\r\n                 //default JSON appender\r\n                 type : \"JSONAppender\",\r\n                 file : \"/var/log/myApp.JSON\",\r\n             },\r\n             {\r\n                 type : \"FileAppender\",\r\n                  //override default patter\r\n                 pattern : \"{[EEEE, MMMM dd, yyyy h:m a]timeStamp} {[5]level}\"\r\n                          + \" {[- 5]levelName} {[-20]name} : {message}\",\r\n                 //location of my log file\r\n                 file : \"/var/log/myApp-errors.log\",\r\n                 //override name so it will get added to the log\r\n                 name : \"errorFileAppender\",\r\n                 //overwrite each time\r\n                 overwrite : true,\r\n                 //explicity set the appender to only accept errors\r\n                 level : \"ERROR\"\r\n             },\r\n             {\r\n                 type : \"JSONAppender\",\r\n                 file : \"/var/log/myApp-error.json\",\r\n                 //explicity set the appender to only accept errors\r\n                 level : \"ERROR\"\r\n             }\r\n         ]\r\n     }\r\n     //repeat for more loggers\r\n\r\n     propertyConfigurator.configure(config);\r\n }\r\n\r\n\r\n```\r\n\r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.logging.BasicConfigurator](#comb_logging_BasicConfigurator)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [configure](#comb_logging_PropertyConfigurator_prototype_configure)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined logging/config.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n*Source*\r\n\r\n```javascript\r\ndefine(BasicConfigurator, {\r\n```\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_logging_PropertyConfigurator_prototype_configure\"></a>\r\n###configure\r\n\r\n---\r\n*Defined logging/config.js* [Top](#top)\r\n\r\nCall to configure logging\r\n        \r\n*Example*\r\n\r\n```javascript\r\n//Example configuration\r\n  {\r\n     \"my.logger\" : {\r\n         level : \"INFO\",\r\n         appenders : [\r\n             {\r\n                 //default file appender\r\n                 type : \"FileAppender\",\r\n                 file : \"/var/log/myApp.log\",\r\n             },\r\n             {\r\n                 //default JSON appender\r\n                 type : \"JSONAppender\",\r\n                 file : \"/var/log/myApp.JSON\",\r\n             },\r\n             {\r\n                 type : \"FileAppender\",\r\n                  //override default patter\r\n                 pattern : \"{[EEEE, MMMM dd, yyyy h:m a]timeStamp} {[5]level}\"\r\n                          + \" {[- 5]levelName} {[-20]name} : {message}\",\r\n                 //location of my log file\r\n                 file : \"/var/log/myApp-errors.log\",\r\n                 //override name so it will get added to the log\r\n                 name : \"errorFileAppender\",\r\n                 //overwrite each time\r\n                 overwrite : true,\r\n                 //explicity set the appender to only accept errors\r\n                 level : \"ERROR\"\r\n             },\r\n             {\r\n                 type : \"JSONAppender\",\r\n                 file : \"/var/log/myApp-error.json\",\r\n                 //explicity set the appender to only accept errors\r\n                 level : \"ERROR\"\r\n             }\r\n         ]\r\n     }\r\n\r\n\r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _properties_ `Object|String` : Object containing configuration or string containing a file name with the configuration.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (properties){\r\n   var rootLogger = Logger.getRootLogger();\r\n   rootLogger.removeAllAppenders();\r\n   if (base.isHash(properties)) {\r\n       parseProperties(properties);\r\n   } else {\r\n       fs.readFile(properties, function (err, res) {\r\n           if (err) {\r\n               throw err;\r\n           } else {\r\n               try {\r\n                   parseProperties(JSON.parse(res));\r\n               } catch (e) {\r\n                   throw e;\r\n               }\r\n           }\r\n       });\r\n   }\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_logging_appenders_Appender\"></a>\r\n##comb.logging.appenders.Appender\r\n\r\n[Top](#top)\r\n\r\nBase class for all appenders\r\n\r\n        \r\n\r\n\r\n\r\n\r\n\r\n*Instance Properties*\r\n<table><tr><td>Property</td><td>Default Value</td><td>Description</td></tr><tr><td>level</td><td></td><td>the level of this Appender.</td><tr><tr><td>name</td><td></td><td>the name of this Appender.</td><tr><tr><td>pattern</td><td></td><td>the pattern for this Appender.</td><tr></table>\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [append](#comb_logging_appenders_Appender_prototype_append)\r\n\r\n  * [constructor](#comb_logging_appenders_Appender_prototype_constructor)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined logging/appenders/appender.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n*Source*\r\n\r\n```javascript\r\n(exports = module.exports = define(null, {\r\n```\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_logging_appenders_Appender_prototype_append\"></a>\r\n###append\r\n\r\n---\r\n*Defined logging/appenders/appender.js* [Top](#top)\r\n\r\nAppends a message to a log.\r\n <b>This method is abstract and must be implemented in subclasses</b>\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _event_ `Object` : the logging event to log.\r\n        \r\n * _event.timeStamp_ `Date` : the timeStamp of the event.\r\n        \r\n * _level_ `comb.logging.Level` : the level of the event.\r\n        \r\n * _name_ `String` : the name of the logger the event was emitted from.\r\n        \r\n * _message_ `String` : the message that is being logged.\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (event){\r\n   throw new Error(\"abstract method\");\r\n   \t\t\t\t\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_logging_appenders_Appender_prototype_constructor\"></a>\r\n###constructor\r\n\r\n---\r\n*Defined logging/appenders/appender.js* [Top](#top)\r\n\r\n\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _options_  : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (options){\r\n   options = options || {};\r\n   this.name = options.name || \"appender\";\r\n   this.pattern = options.pattern || \"[{[yyyy-MM-ddTHH:mm:ss:SSS (z)]timeStamp}] {[- 5]levelName} {[-20]name} - {message}\";\r\n   var level = options.level;\r\n   if(options.level && (level = Level.toLevel(level))){\r\n   \tthis.__level = level;\r\n   }\r\n   \t\t\t\t\r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_logging_appenders_ConsoleAppender\"></a>\r\n##comb.logging.appenders.ConsoleAppender\r\n\r\n[Top](#top)\r\n\r\nAppends messages to the console.\r\n\r\n        \r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.logging.appenders.Appender](#comb_logging_appenders_Appender)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n###Constructor\r\n\r\n*Defined logging/appenders/consoleAppender.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n<a name=\"comb_logging_appenders_FileAppender\"></a>\r\n##comb.logging.appenders.FileAppender\r\n\r\n[Top](#top)\r\n\r\nAppends messages to a file.\r\n\r\n <pre class=\"code\">\r\n      var fileAppender = new comb.logging.appenders.FileAppender({\r\n                                       file : \"/var/log/myLog.log\"\r\n                                      });\r\n </pre>\r\n\r\n        \r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.logging.appenders.Appender](#comb_logging_appenders_Appender)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n###Constructor\r\n\r\n*Defined logging/appenders/fileAppender.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n<a name=\"comb_logging_appenders_JSONAppender\"></a>\r\n##comb.logging.appenders.JSONAppender\r\n\r\n[Top](#top)\r\n\r\nAppends messages to a file in JSON format. The messages are logged to an array in a JSON file\r\n <b>The file is always overwritten</b>\r\n\r\n <pre class=\"code\">\r\n //example log.json\r\n [\r\n    {\r\n      \"timestamp\" : \"Wed Jun 08 2011 11:16:20 GMT-0500 (CDT)\",\r\n      \"level\" : \"INFO\",\r\n      \"name\" : \"comb\",\r\n      \"message\" :  \"INFO MESSAGE!!!!\"\r\n    }\r\n  ]\r\n\r\n</pre>\r\n\r\n        \r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.logging.appenders.FileAppender](#comb_logging_appenders_FileAppender)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n###Constructor\r\n\r\n*Defined logging/appenders/jsonAppender.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n<a name=\"comb_logging_appenders_RollingFileAppender\"></a>\r\n##comb.logging.appenders.RollingFileAppender\r\n\r\n[Top](#top)\r\n\r\nAppends messages to a file. Rolls files over when a size limit has been reached. Once the max file size has\r\n been reached it is rolled over to a file called <logName>.log.n where n is a number.\r\n\r\n <p>Example. RollingFileAppender is current writing to myLog.log, the log reaches is max size to it is\r\n renamed to myLog.log.1 and a new myLog.log is created.</p>\r\n\r\n <p>If maxBackupIndex is reached then the log at that index is deleted. If maxBackupIndex is set to 0 then no log is\r\n rolled over.</p>\r\n\r\n        \r\n\r\n\r\n*Extends*\r\n\r\n  * [comb.logging.appenders.FileAppender](#comb_logging_appenders_FileAppender)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n###Constructor\r\n\r\n*Defined logging/appenders/rollingFileAppender.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n<a name=\"comb_plugins_Broadcaster\"></a>\r\n##comb.plugins.Broadcaster\r\n\r\n[Top](#top)\r\n\r\nPlugin to allow a class to easily broadcast events\r\n\r\n        \r\n*Example*\r\n\r\n```javascript\r\nvar Mammal = define(comb.plugins.Broadcaster, {\r\n   instance : {\r\n\r\n      constructor: function(options) {\r\n          options = options || {};\r\n          this._super(arguments);\r\n          this._type = options.type || \"mammal\";\r\n      },\r\n\r\n      speak : function() {\r\n          var str = \"A mammal of type \" + this._type + \" sounds like\";\r\n          this.broadcast(\"speak\", str);\r\n          this.onSpeak(str);\r\n          return str;\r\n      },\r\n\r\n      onSpeak : function(){}\r\n    }\r\n });\r\n\r\n\r\n var m = new Mammal({color : \"gold\"});\r\n m.listen(\"speak\", function(str){\r\n      //called back from the broadcast event\r\n       console.log(str);\r\n });\r\n m.speak();\r\n\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [broadcast](#comb_plugins_Broadcaster_prototype_broadcast)\r\n\r\n  * [listen](#comb_plugins_Broadcaster_prototype_listen)\r\n\r\n  * [unListen](#comb_plugins_Broadcaster_prototype_unListen)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined plugins/Broadcaster.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   this.__listeners = {};\r\n   \t\t\t\t\r\n}\r\n```\r\n\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_plugins_Broadcaster_prototype_broadcast\"></a>\r\n###broadcast\r\n\r\n---\r\n*Defined plugins/Broadcaster.js* [Top](#top)\r\n\r\nBroadcasts an event from an object\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _name_  : the name of the event to broadcast\r\n        \r\n * _args?_ `Object|String|Function|Date|Number` : variable number of arguments to pass to listeners, can be anything\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (topic,args){\r\n   var args = Array.prototype.slice.call(arguments, 0), topic = args.shift();\r\n   if (topic && topic in this.__listeners) {\r\n   \tvar list = this.__listeners[topic], i = list.length - 1;\r\n   \twhile (i >= 0) {\r\n   \t\tlist[i--].cb.apply(this, args);\r\n   \t}\r\n   }\r\n   \t\t\t\t\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_plugins_Broadcaster_prototype_listen\"></a>\r\n###listen\r\n\r\n---\r\n*Defined plugins/Broadcaster.js* [Top](#top)\r\n\r\nListens to a broadcasted event\r\n Simimlar to [comb.listen](#comb_listen)\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _topic_ `String` : the topic to listen to\r\n        \r\n * _callback_ `Function` : the function to callback on event publish\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `Array` handle to disconnect a topic\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (topic,callback){\r\n   if (!func.isFunction(callback)) throw new Error(\"callback must be a function\");\r\n   var handle = {\r\n   \ttopic : topic,\r\n   \tcb : callback\r\n   };\r\n   var list = this.__listeners[topic];\r\n   if (!list) {\r\n   \tlist = (this.__listeners[topic] = [handle]);\r\n   \thandle.pos = 0;\r\n   } else {\r\n   \thandle.pos = list.push(handle);\r\n   }\r\n   return handle;\r\n   \t\t\t\t\r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_plugins_Broadcaster_prototype_unListen\"></a>\r\n###unListen\r\n\r\n---\r\n*Defined plugins/Broadcaster.js* [Top](#top)\r\n\r\nDisconnects a listener\r\n Similar to [comb.unListen](#comb_unListen)\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _handle_  : disconnect a handle returned from Broadcaster.listen\r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (handle){\r\n   if (handle) {\r\n   \tvar topic = handle.topic;\r\n   \tif (topic in this.__listeners) {\r\n   \t\tvar listeners = this.__listeners, list = listeners[topic];\r\n   \t\tif (list) {\r\n   \t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n   \t\t\t\tif (list[i] == handle) {\r\n   \t\t\t\t\tlist.splice(i, 1);\r\n   \t\t\t\t\tbreak;\r\n   \t\t\t\t}\r\n   \t\t\t}\r\n   \t\t}\r\n   \t}\r\n   }\r\n   \t\t\t\t\r\n}\r\n```\r\n\r\n  \r\n\r\n<a name=\"comb_plugins_Middleware\"></a>\r\n##comb.plugins.Middleware\r\n\r\n[Top](#top)\r\n\r\nPlugin to enable middleware on a class\r\n\r\n        \r\n*Example*\r\n\r\n```javascript\r\n var Mammal = define(comb.plugins.Middleware, {\r\n  instance : {\r\n\r\n    constructor: function(options) {\r\n        options = options || {};\r\n        this.super(arguments);\r\n        this._type = options.type || \"mammal\";\r\n    },\r\n\r\n    speak : function() {\r\n        var ret = new comb.Promise();\r\n        this._hook(\"pre\", \"speak\")\r\n                .then(comb.hitch(this, \"_hook\", \"post\", \"speak\"), hitch(ret, \"errback\"))\r\n                .then(comb.hitch(ret, \"callback\"), comb.hitch(ret, \"errback\"));\r\n        return ret;\r\n    }\r\n  }\r\n});\r\n\r\n  Mammal.pre('speak', function(next){\r\n     //do something meaningful\r\n     next();\r\n  });\r\n  var m = new Mammal({color : \"gold\"});\r\n  m.speak();\r\n\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*Static*\r\n\r\n  * [post](#comb_plugins_Middleware_post)\r\n\r\n  * [pre](#comb_plugins_Middleware_pre)\r\n\r\n\r\n\r\n\r\n*Instance*\r\n\r\n  * [_hook](#comb_plugins_Middleware_prototype__hook)\r\n\r\n  * [post](#comb_plugins_Middleware_prototype_post)\r\n\r\n  * [pre](#comb_plugins_Middleware_prototype_pre)\r\n\r\n\r\n###Constructor\r\n\r\n*Defined plugins/Middleware.js* [Top](#top)\r\n\r\n     \r\n\r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (){\r\n   this.__hooks = obj.merge({}, this.__hooks);\r\n   this._super(arguments);\r\n           \r\n}\r\n```\r\n\r\n\r\n  \r\n<a name=\"comb_plugins_Middleware_post\"></a>\r\n###*post*\r\n\r\n---\r\n*Defined plugins/Middleware.js* [Top](#top)\r\n\r\n<p>Use to listen to after an event has occurred i.e. post save</p>\r\n\r\n<b>NOTE:</b></br>\r\n <ul>\r\n     <li>You must call next in order for the middleware chain to complete</li>\r\n      <li>This connects to events on ALL instances of an object</li>\r\n      <li>Hooks are called in the order they are received!</li>\r\n      <li>When connecting your callback will be called in the scope of the class</br>if you want a certain scope use [comb.hitch](#comb_hitch)</li>\r\n  </ul>\r\n        \r\n*Example*\r\n\r\n```javascript\r\nClass.post(\"save\", function(next){\r\n               ...\r\n               //you must call next\r\n          });\r\n \r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _name_  : \r\n        \r\n * _cb_  : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (name,cb){\r\n   var hooks = this.prototype.__hooks;\r\n   var hook = hooks.post[name];\r\n   if (!hook) {\r\n       hook = hooks.post[name] = [];\r\n   }\r\n   hook.push(cb);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_plugins_Middleware_pre\"></a>\r\n###*pre*\r\n\r\n---\r\n*Defined plugins/Middleware.js* [Top](#top)\r\n\r\n<p> Use to listen to after an event has occurred i.e. post save</p>\r\n\r\n <b>NOTE:</b></br>\r\n <ul>\r\n     <li>You must call next in order for the middleware chain to complete</li>\r\n      <li>This connects to events on ALL instances of an object</li>\r\n      <li>Hooks are called in the order they are received!</li>\r\n      <li>When connecting your callback will be called in the scope of the class</br>if you want a certain scope use [comb.hitch](#comb_hitch)</li>\r\n  </ul>\r\n        \r\n*Example*\r\n\r\n```javascript\r\nClass.pre(\"save\", function(next){\r\n               ...\r\n               //you must call next\r\n          });\r\n \r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _name_  : \r\n        \r\n * _cb_  : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (name,cb){\r\n   var hooks = this.prototype.__hooks;\r\n   var hook = hooks.pre[name];\r\n   if (!hook) {\r\n       hook = hooks.pre[name] = [];\r\n   }\r\n   hook.push(cb);\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\n  \r\n<a name=\"comb_plugins_Middleware_prototype__hook\"></a>\r\n###_hook\r\n\r\n---\r\n*Defined plugins/Middleware.js* [Top](#top)\r\n\r\n<p>Protected!</p>\r\n\r\n <p>Call to initiate middleware for the topic</p>\r\n <p><b>NOTE:</b> this function takes a variable number of arguments\r\n       whatever comes after the op param will be passed into\r\n       the listening function, with the last argument to the listenting\r\n       function being the next function</p>\r\n        \r\n     \r\n*Arguments*\r\n\r\n        \r\n * _state_ `\"pre\"|\"post\"` : the state in which the hook should be called\r\n        \r\n * _op_ `String` : the operation that is being acted upong\r\n        \r\n * _args_  : arguments to be passed into the listening functions.\r\n        \r\n     \r\n     \r\n*Returns*\r\n\r\n        \r\n * `comb.Promise` a promise to use after middleware chain completes\r\n        \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (state,op,args){\r\n   args = args || [];\r\n   var promise = new Promise();\r\n   var funcs, length;\r\n   if (this.__hooks[state] && (funcs = this.__hooks[state][op]) != null && (length = funcs.length) > 0) {\r\n       var count = 0;\r\n       var next = func.hitch(this, function () {\r\n           process.nextTick(func.hitch(this, function () {\r\n               //if Ive looped through all of them callback\r\n               if (count == length) {\r\n                   promise.callback();\r\n               } else {\r\n                   //call next\r\n                   var nextArgs = args.slice(0);\r\n                   nextArgs.unshift(next);\r\n                   funcs[count++].apply(this, nextArgs);\r\n               }\r\n           }));\r\n       });\r\n       next();\r\n   } else {\r\n       promise.callback();\r\n   }\r\n   return promise;\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_plugins_Middleware_prototype_post\"></a>\r\n###post\r\n\r\n---\r\n*Defined plugins/Middleware.js* [Top](#top)\r\n\r\n<p>Use to listen to after an event has occurred i.e. post save</p>\r\n <b>NOTE:</b></br>\r\n <ul>\r\n     <li>You must call next in order for the middleware chain to complete</li>\r\n      <li>This connects to events on the instance of an object, NOT all instances!</li>\r\n      <li>Hooks are called in the order they are received!</li>\r\n      <li>When connecting your callback will be called in the scope of the class</br>if you want a certain scope use [comb.hitch](#comb_hitch)</li>\r\n  </ul>\r\n        \r\n*Example*\r\n\r\n```javascript\r\ninstance.post(\"save\", function(next){\r\n                //do something...\r\n                 //you have to call next!!!!!\r\n                 next();\r\n          });\r\n \r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _fun_  : \r\n        \r\n * _callback_  : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (fun,callback){\r\n   var hook = this.__hooks.post[fun];\r\n   //if I havent initialized it create it;\r\n   if (hook == undefined) {\r\n       hook = this.__hooks.post[fun] = [];\r\n   }\r\n   hook.push(callback);\r\n           \r\n}\r\n```\r\n\r\n  \r\n<a name=\"comb_plugins_Middleware_prototype_pre\"></a>\r\n###pre\r\n\r\n---\r\n*Defined plugins/Middleware.js* [Top](#top)\r\n\r\nUse to listen to before an event occurred i.e. pre save\r\n\r\n <b>NOTE:</b></br>\r\n <ul>\r\n     <li>You must call next in order for the middleware chain to complete</li>\r\n      <li>This connects to events on the instance of an object, not all instances!</li>\r\n      <li>Hooks are called in the order they are received!</li>\r\n      <li> When connecting your callback will be called in the scope of the class</br>if you want a certain scope use [comb.hitch](#comb_hitch)</li>\r\n  </ul>\r\n        \r\n*Example*\r\n\r\n```javascript\r\ninstance.pre(\"save\", function(args,...., next){\r\n          //do something...\r\n          //you have to call next!!!!!\r\n          next();\r\n      });\r\n\r\n \r\n```\r\n\r\n     \r\n*Arguments*\r\n\r\n        \r\n * _fun_  : \r\n        \r\n * _callback_  : \r\n        \r\n     \r\n     \r\n\r\n*Source*\r\n\r\n```javascript\r\nfunction (fun,callback){\r\n   var hook = this.__hooks.pre[fun];\r\n   if (!hook) {\r\n       hook = this.__hooks.pre[fun] = [];\r\n   }\r\n   hook.push(callback);\r\n           \r\n}\r\n```\r\n\r\n  \r\n\r\nLicense\r\n-------\r\n\r\nMIT <https://github.com/Pollenware/comb/raw/master/LICENSE>\r\n\r\nMeta\r\n----\r\n\r\n* Code: `git clone git://github.com/pollenware/comb.git`\r\n* JsDoc: <http://pollenware.github.com/comb>\r\n* Website:  <http://pollenware.com> - Twitter: <http://twitter.com/pollenware> - 877.465.4045\r\n\r\n\r\n","tagline":"Framework for node","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}